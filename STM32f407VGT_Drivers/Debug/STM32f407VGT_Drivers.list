
STM32f407VGT_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004d70  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000052c  08004f00  08004f00  00005f00  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800542c  0800542c  000071c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800542c  0800542c  0000642c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005434  08005434  000071c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005434  08005434  00006434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005438  08005438  00006438  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  0800543c  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000071c8  2**0
                  CONTENTS
 10 .bss          000001ac  200001c8  200001c8  000071c8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000374  20000374  000071c8  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000071c8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002617  00000000  00000000  000071f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000868  00000000  00000000  00009809  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000258  00000000  00000000  0000a078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001be  00000000  00000000  0000a2d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000036d8  00000000  00000000  0000a48e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002aef  00000000  00000000  0000db66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000c3f5  00000000  00000000  00010655  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001ca4a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001b9c  00000000  00000000  0001ca90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000074  00000000  00000000  0001e62c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001c8 	.word	0x200001c8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08004ee8 	.word	0x08004ee8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001cc 	.word	0x200001cc
 80001cc:	08004ee8 	.word	0x08004ee8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_frsub>:
 8000ba8:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000bac:	e002      	b.n	8000bb4 <__addsf3>
 8000bae:	bf00      	nop

08000bb0 <__aeabi_fsub>:
 8000bb0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000bb4 <__addsf3>:
 8000bb4:	0042      	lsls	r2, r0, #1
 8000bb6:	bf1f      	itttt	ne
 8000bb8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bbc:	ea92 0f03 	teqne	r2, r3
 8000bc0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bc4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bc8:	d06a      	beq.n	8000ca0 <__addsf3+0xec>
 8000bca:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bce:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bd2:	bfc1      	itttt	gt
 8000bd4:	18d2      	addgt	r2, r2, r3
 8000bd6:	4041      	eorgt	r1, r0
 8000bd8:	4048      	eorgt	r0, r1
 8000bda:	4041      	eorgt	r1, r0
 8000bdc:	bfb8      	it	lt
 8000bde:	425b      	neglt	r3, r3
 8000be0:	2b19      	cmp	r3, #25
 8000be2:	bf88      	it	hi
 8000be4:	4770      	bxhi	lr
 8000be6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000bea:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bee:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bf2:	bf18      	it	ne
 8000bf4:	4240      	negne	r0, r0
 8000bf6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bfa:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bfe:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000c02:	bf18      	it	ne
 8000c04:	4249      	negne	r1, r1
 8000c06:	ea92 0f03 	teq	r2, r3
 8000c0a:	d03f      	beq.n	8000c8c <__addsf3+0xd8>
 8000c0c:	f1a2 0201 	sub.w	r2, r2, #1
 8000c10:	fa41 fc03 	asr.w	ip, r1, r3
 8000c14:	eb10 000c 	adds.w	r0, r0, ip
 8000c18:	f1c3 0320 	rsb	r3, r3, #32
 8000c1c:	fa01 f103 	lsl.w	r1, r1, r3
 8000c20:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c24:	d502      	bpl.n	8000c2c <__addsf3+0x78>
 8000c26:	4249      	negs	r1, r1
 8000c28:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c2c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c30:	d313      	bcc.n	8000c5a <__addsf3+0xa6>
 8000c32:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c36:	d306      	bcc.n	8000c46 <__addsf3+0x92>
 8000c38:	0840      	lsrs	r0, r0, #1
 8000c3a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c3e:	f102 0201 	add.w	r2, r2, #1
 8000c42:	2afe      	cmp	r2, #254	@ 0xfe
 8000c44:	d251      	bcs.n	8000cea <__addsf3+0x136>
 8000c46:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c4a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c4e:	bf08      	it	eq
 8000c50:	f020 0001 	biceq.w	r0, r0, #1
 8000c54:	ea40 0003 	orr.w	r0, r0, r3
 8000c58:	4770      	bx	lr
 8000c5a:	0049      	lsls	r1, r1, #1
 8000c5c:	eb40 0000 	adc.w	r0, r0, r0
 8000c60:	3a01      	subs	r2, #1
 8000c62:	bf28      	it	cs
 8000c64:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c68:	d2ed      	bcs.n	8000c46 <__addsf3+0x92>
 8000c6a:	fab0 fc80 	clz	ip, r0
 8000c6e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c72:	ebb2 020c 	subs.w	r2, r2, ip
 8000c76:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c7a:	bfaa      	itet	ge
 8000c7c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c80:	4252      	neglt	r2, r2
 8000c82:	4318      	orrge	r0, r3
 8000c84:	bfbc      	itt	lt
 8000c86:	40d0      	lsrlt	r0, r2
 8000c88:	4318      	orrlt	r0, r3
 8000c8a:	4770      	bx	lr
 8000c8c:	f092 0f00 	teq	r2, #0
 8000c90:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c94:	bf06      	itte	eq
 8000c96:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c9a:	3201      	addeq	r2, #1
 8000c9c:	3b01      	subne	r3, #1
 8000c9e:	e7b5      	b.n	8000c0c <__addsf3+0x58>
 8000ca0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ca4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ca8:	bf18      	it	ne
 8000caa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cae:	d021      	beq.n	8000cf4 <__addsf3+0x140>
 8000cb0:	ea92 0f03 	teq	r2, r3
 8000cb4:	d004      	beq.n	8000cc0 <__addsf3+0x10c>
 8000cb6:	f092 0f00 	teq	r2, #0
 8000cba:	bf08      	it	eq
 8000cbc:	4608      	moveq	r0, r1
 8000cbe:	4770      	bx	lr
 8000cc0:	ea90 0f01 	teq	r0, r1
 8000cc4:	bf1c      	itt	ne
 8000cc6:	2000      	movne	r0, #0
 8000cc8:	4770      	bxne	lr
 8000cca:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000cce:	d104      	bne.n	8000cda <__addsf3+0x126>
 8000cd0:	0040      	lsls	r0, r0, #1
 8000cd2:	bf28      	it	cs
 8000cd4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000cd8:	4770      	bx	lr
 8000cda:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cde:	bf3c      	itt	cc
 8000ce0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ce4:	4770      	bxcc	lr
 8000ce6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000cea:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cee:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cf2:	4770      	bx	lr
 8000cf4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cf8:	bf16      	itet	ne
 8000cfa:	4608      	movne	r0, r1
 8000cfc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d00:	4601      	movne	r1, r0
 8000d02:	0242      	lsls	r2, r0, #9
 8000d04:	bf06      	itte	eq
 8000d06:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d0a:	ea90 0f01 	teqeq	r0, r1
 8000d0e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d12:	4770      	bx	lr

08000d14 <__aeabi_ui2f>:
 8000d14:	f04f 0300 	mov.w	r3, #0
 8000d18:	e004      	b.n	8000d24 <__aeabi_i2f+0x8>
 8000d1a:	bf00      	nop

08000d1c <__aeabi_i2f>:
 8000d1c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d20:	bf48      	it	mi
 8000d22:	4240      	negmi	r0, r0
 8000d24:	ea5f 0c00 	movs.w	ip, r0
 8000d28:	bf08      	it	eq
 8000d2a:	4770      	bxeq	lr
 8000d2c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d30:	4601      	mov	r1, r0
 8000d32:	f04f 0000 	mov.w	r0, #0
 8000d36:	e01c      	b.n	8000d72 <__aeabi_l2f+0x2a>

08000d38 <__aeabi_ul2f>:
 8000d38:	ea50 0201 	orrs.w	r2, r0, r1
 8000d3c:	bf08      	it	eq
 8000d3e:	4770      	bxeq	lr
 8000d40:	f04f 0300 	mov.w	r3, #0
 8000d44:	e00a      	b.n	8000d5c <__aeabi_l2f+0x14>
 8000d46:	bf00      	nop

08000d48 <__aeabi_l2f>:
 8000d48:	ea50 0201 	orrs.w	r2, r0, r1
 8000d4c:	bf08      	it	eq
 8000d4e:	4770      	bxeq	lr
 8000d50:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d54:	d502      	bpl.n	8000d5c <__aeabi_l2f+0x14>
 8000d56:	4240      	negs	r0, r0
 8000d58:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d5c:	ea5f 0c01 	movs.w	ip, r1
 8000d60:	bf02      	ittt	eq
 8000d62:	4684      	moveq	ip, r0
 8000d64:	4601      	moveq	r1, r0
 8000d66:	2000      	moveq	r0, #0
 8000d68:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d6c:	bf08      	it	eq
 8000d6e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d72:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d76:	fabc f28c 	clz	r2, ip
 8000d7a:	3a08      	subs	r2, #8
 8000d7c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d80:	db10      	blt.n	8000da4 <__aeabi_l2f+0x5c>
 8000d82:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d86:	4463      	add	r3, ip
 8000d88:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d94:	fa20 f202 	lsr.w	r2, r0, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	f020 0001 	biceq.w	r0, r0, #1
 8000da2:	4770      	bx	lr
 8000da4:	f102 0220 	add.w	r2, r2, #32
 8000da8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dac:	f1c2 0220 	rsb	r2, r2, #32
 8000db0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000db4:	fa21 f202 	lsr.w	r2, r1, r2
 8000db8:	eb43 0002 	adc.w	r0, r3, r2
 8000dbc:	bf08      	it	eq
 8000dbe:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dc2:	4770      	bx	lr

08000dc4 <__aeabi_fmul>:
 8000dc4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000dc8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dcc:	bf1e      	ittt	ne
 8000dce:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dd2:	ea92 0f0c 	teqne	r2, ip
 8000dd6:	ea93 0f0c 	teqne	r3, ip
 8000dda:	d06f      	beq.n	8000ebc <__aeabi_fmul+0xf8>
 8000ddc:	441a      	add	r2, r3
 8000dde:	ea80 0c01 	eor.w	ip, r0, r1
 8000de2:	0240      	lsls	r0, r0, #9
 8000de4:	bf18      	it	ne
 8000de6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dea:	d01e      	beq.n	8000e2a <__aeabi_fmul+0x66>
 8000dec:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000df0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000df4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000df8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dfc:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000e00:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000e04:	bf3e      	ittt	cc
 8000e06:	0049      	lslcc	r1, r1, #1
 8000e08:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e0c:	005b      	lslcc	r3, r3, #1
 8000e0e:	ea40 0001 	orr.w	r0, r0, r1
 8000e12:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000e16:	2afd      	cmp	r2, #253	@ 0xfd
 8000e18:	d81d      	bhi.n	8000e56 <__aeabi_fmul+0x92>
 8000e1a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000e1e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e22:	bf08      	it	eq
 8000e24:	f020 0001 	biceq.w	r0, r0, #1
 8000e28:	4770      	bx	lr
 8000e2a:	f090 0f00 	teq	r0, #0
 8000e2e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000e32:	bf08      	it	eq
 8000e34:	0249      	lsleq	r1, r1, #9
 8000e36:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e3a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e3e:	3a7f      	subs	r2, #127	@ 0x7f
 8000e40:	bfc2      	ittt	gt
 8000e42:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e46:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e4a:	4770      	bxgt	lr
 8000e4c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e50:	f04f 0300 	mov.w	r3, #0
 8000e54:	3a01      	subs	r2, #1
 8000e56:	dc5d      	bgt.n	8000f14 <__aeabi_fmul+0x150>
 8000e58:	f112 0f19 	cmn.w	r2, #25
 8000e5c:	bfdc      	itt	le
 8000e5e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e62:	4770      	bxle	lr
 8000e64:	f1c2 0200 	rsb	r2, r2, #0
 8000e68:	0041      	lsls	r1, r0, #1
 8000e6a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e6e:	f1c2 0220 	rsb	r2, r2, #32
 8000e72:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e76:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e7a:	f140 0000 	adc.w	r0, r0, #0
 8000e7e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e82:	bf08      	it	eq
 8000e84:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e88:	4770      	bx	lr
 8000e8a:	f092 0f00 	teq	r2, #0
 8000e8e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e92:	bf02      	ittt	eq
 8000e94:	0040      	lsleq	r0, r0, #1
 8000e96:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e9a:	3a01      	subeq	r2, #1
 8000e9c:	d0f9      	beq.n	8000e92 <__aeabi_fmul+0xce>
 8000e9e:	ea40 000c 	orr.w	r0, r0, ip
 8000ea2:	f093 0f00 	teq	r3, #0
 8000ea6:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000eaa:	bf02      	ittt	eq
 8000eac:	0049      	lsleq	r1, r1, #1
 8000eae:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000eb2:	3b01      	subeq	r3, #1
 8000eb4:	d0f9      	beq.n	8000eaa <__aeabi_fmul+0xe6>
 8000eb6:	ea41 010c 	orr.w	r1, r1, ip
 8000eba:	e78f      	b.n	8000ddc <__aeabi_fmul+0x18>
 8000ebc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ec0:	ea92 0f0c 	teq	r2, ip
 8000ec4:	bf18      	it	ne
 8000ec6:	ea93 0f0c 	teqne	r3, ip
 8000eca:	d00a      	beq.n	8000ee2 <__aeabi_fmul+0x11e>
 8000ecc:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ed0:	bf18      	it	ne
 8000ed2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000ed6:	d1d8      	bne.n	8000e8a <__aeabi_fmul+0xc6>
 8000ed8:	ea80 0001 	eor.w	r0, r0, r1
 8000edc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ee0:	4770      	bx	lr
 8000ee2:	f090 0f00 	teq	r0, #0
 8000ee6:	bf17      	itett	ne
 8000ee8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000eec:	4608      	moveq	r0, r1
 8000eee:	f091 0f00 	teqne	r1, #0
 8000ef2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000ef6:	d014      	beq.n	8000f22 <__aeabi_fmul+0x15e>
 8000ef8:	ea92 0f0c 	teq	r2, ip
 8000efc:	d101      	bne.n	8000f02 <__aeabi_fmul+0x13e>
 8000efe:	0242      	lsls	r2, r0, #9
 8000f00:	d10f      	bne.n	8000f22 <__aeabi_fmul+0x15e>
 8000f02:	ea93 0f0c 	teq	r3, ip
 8000f06:	d103      	bne.n	8000f10 <__aeabi_fmul+0x14c>
 8000f08:	024b      	lsls	r3, r1, #9
 8000f0a:	bf18      	it	ne
 8000f0c:	4608      	movne	r0, r1
 8000f0e:	d108      	bne.n	8000f22 <__aeabi_fmul+0x15e>
 8000f10:	ea80 0001 	eor.w	r0, r0, r1
 8000f14:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000f18:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f1c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f20:	4770      	bx	lr
 8000f22:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f26:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000f2a:	4770      	bx	lr

08000f2c <__aeabi_fdiv>:
 8000f2c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000f30:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f34:	bf1e      	ittt	ne
 8000f36:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f3a:	ea92 0f0c 	teqne	r2, ip
 8000f3e:	ea93 0f0c 	teqne	r3, ip
 8000f42:	d069      	beq.n	8001018 <__aeabi_fdiv+0xec>
 8000f44:	eba2 0203 	sub.w	r2, r2, r3
 8000f48:	ea80 0c01 	eor.w	ip, r0, r1
 8000f4c:	0249      	lsls	r1, r1, #9
 8000f4e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f52:	d037      	beq.n	8000fc4 <__aeabi_fdiv+0x98>
 8000f54:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f58:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f5c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f60:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f64:	428b      	cmp	r3, r1
 8000f66:	bf38      	it	cc
 8000f68:	005b      	lslcc	r3, r3, #1
 8000f6a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f6e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f72:	428b      	cmp	r3, r1
 8000f74:	bf24      	itt	cs
 8000f76:	1a5b      	subcs	r3, r3, r1
 8000f78:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f7c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f80:	bf24      	itt	cs
 8000f82:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f86:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f8a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f8e:	bf24      	itt	cs
 8000f90:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f98:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f9c:	bf24      	itt	cs
 8000f9e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000fa2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000fa6:	011b      	lsls	r3, r3, #4
 8000fa8:	bf18      	it	ne
 8000faa:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fae:	d1e0      	bne.n	8000f72 <__aeabi_fdiv+0x46>
 8000fb0:	2afd      	cmp	r2, #253	@ 0xfd
 8000fb2:	f63f af50 	bhi.w	8000e56 <__aeabi_fmul+0x92>
 8000fb6:	428b      	cmp	r3, r1
 8000fb8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fbc:	bf08      	it	eq
 8000fbe:	f020 0001 	biceq.w	r0, r0, #1
 8000fc2:	4770      	bx	lr
 8000fc4:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000fc8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fcc:	327f      	adds	r2, #127	@ 0x7f
 8000fce:	bfc2      	ittt	gt
 8000fd0:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000fd4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fd8:	4770      	bxgt	lr
 8000fda:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000fde:	f04f 0300 	mov.w	r3, #0
 8000fe2:	3a01      	subs	r2, #1
 8000fe4:	e737      	b.n	8000e56 <__aeabi_fmul+0x92>
 8000fe6:	f092 0f00 	teq	r2, #0
 8000fea:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fee:	bf02      	ittt	eq
 8000ff0:	0040      	lsleq	r0, r0, #1
 8000ff2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000ff6:	3a01      	subeq	r2, #1
 8000ff8:	d0f9      	beq.n	8000fee <__aeabi_fdiv+0xc2>
 8000ffa:	ea40 000c 	orr.w	r0, r0, ip
 8000ffe:	f093 0f00 	teq	r3, #0
 8001002:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8001006:	bf02      	ittt	eq
 8001008:	0049      	lsleq	r1, r1, #1
 800100a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800100e:	3b01      	subeq	r3, #1
 8001010:	d0f9      	beq.n	8001006 <__aeabi_fdiv+0xda>
 8001012:	ea41 010c 	orr.w	r1, r1, ip
 8001016:	e795      	b.n	8000f44 <__aeabi_fdiv+0x18>
 8001018:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800101c:	ea92 0f0c 	teq	r2, ip
 8001020:	d108      	bne.n	8001034 <__aeabi_fdiv+0x108>
 8001022:	0242      	lsls	r2, r0, #9
 8001024:	f47f af7d 	bne.w	8000f22 <__aeabi_fmul+0x15e>
 8001028:	ea93 0f0c 	teq	r3, ip
 800102c:	f47f af70 	bne.w	8000f10 <__aeabi_fmul+0x14c>
 8001030:	4608      	mov	r0, r1
 8001032:	e776      	b.n	8000f22 <__aeabi_fmul+0x15e>
 8001034:	ea93 0f0c 	teq	r3, ip
 8001038:	d104      	bne.n	8001044 <__aeabi_fdiv+0x118>
 800103a:	024b      	lsls	r3, r1, #9
 800103c:	f43f af4c 	beq.w	8000ed8 <__aeabi_fmul+0x114>
 8001040:	4608      	mov	r0, r1
 8001042:	e76e      	b.n	8000f22 <__aeabi_fmul+0x15e>
 8001044:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001048:	bf18      	it	ne
 800104a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800104e:	d1ca      	bne.n	8000fe6 <__aeabi_fdiv+0xba>
 8001050:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001054:	f47f af5c 	bne.w	8000f10 <__aeabi_fmul+0x14c>
 8001058:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800105c:	f47f af3c 	bne.w	8000ed8 <__aeabi_fmul+0x114>
 8001060:	e75f      	b.n	8000f22 <__aeabi_fmul+0x15e>
 8001062:	bf00      	nop

08001064 <__gesf2>:
 8001064:	f04f 3cff 	mov.w	ip, #4294967295
 8001068:	e006      	b.n	8001078 <__cmpsf2+0x4>
 800106a:	bf00      	nop

0800106c <__lesf2>:
 800106c:	f04f 0c01 	mov.w	ip, #1
 8001070:	e002      	b.n	8001078 <__cmpsf2+0x4>
 8001072:	bf00      	nop

08001074 <__cmpsf2>:
 8001074:	f04f 0c01 	mov.w	ip, #1
 8001078:	f84d cd04 	str.w	ip, [sp, #-4]!
 800107c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001080:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001084:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001088:	bf18      	it	ne
 800108a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800108e:	d011      	beq.n	80010b4 <__cmpsf2+0x40>
 8001090:	b001      	add	sp, #4
 8001092:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001096:	bf18      	it	ne
 8001098:	ea90 0f01 	teqne	r0, r1
 800109c:	bf58      	it	pl
 800109e:	ebb2 0003 	subspl.w	r0, r2, r3
 80010a2:	bf88      	it	hi
 80010a4:	17c8      	asrhi	r0, r1, #31
 80010a6:	bf38      	it	cc
 80010a8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80010ac:	bf18      	it	ne
 80010ae:	f040 0001 	orrne.w	r0, r0, #1
 80010b2:	4770      	bx	lr
 80010b4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010b8:	d102      	bne.n	80010c0 <__cmpsf2+0x4c>
 80010ba:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010be:	d105      	bne.n	80010cc <__cmpsf2+0x58>
 80010c0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010c4:	d1e4      	bne.n	8001090 <__cmpsf2+0x1c>
 80010c6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ca:	d0e1      	beq.n	8001090 <__cmpsf2+0x1c>
 80010cc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010d0:	4770      	bx	lr
 80010d2:	bf00      	nop

080010d4 <__aeabi_cfrcmple>:
 80010d4:	4684      	mov	ip, r0
 80010d6:	4608      	mov	r0, r1
 80010d8:	4661      	mov	r1, ip
 80010da:	e7ff      	b.n	80010dc <__aeabi_cfcmpeq>

080010dc <__aeabi_cfcmpeq>:
 80010dc:	b50f      	push	{r0, r1, r2, r3, lr}
 80010de:	f7ff ffc9 	bl	8001074 <__cmpsf2>
 80010e2:	2800      	cmp	r0, #0
 80010e4:	bf48      	it	mi
 80010e6:	f110 0f00 	cmnmi.w	r0, #0
 80010ea:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010ec <__aeabi_fcmpeq>:
 80010ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f0:	f7ff fff4 	bl	80010dc <__aeabi_cfcmpeq>
 80010f4:	bf0c      	ite	eq
 80010f6:	2001      	moveq	r0, #1
 80010f8:	2000      	movne	r0, #0
 80010fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80010fe:	bf00      	nop

08001100 <__aeabi_fcmplt>:
 8001100:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001104:	f7ff ffea 	bl	80010dc <__aeabi_cfcmpeq>
 8001108:	bf34      	ite	cc
 800110a:	2001      	movcc	r0, #1
 800110c:	2000      	movcs	r0, #0
 800110e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001112:	bf00      	nop

08001114 <__aeabi_fcmple>:
 8001114:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001118:	f7ff ffe0 	bl	80010dc <__aeabi_cfcmpeq>
 800111c:	bf94      	ite	ls
 800111e:	2001      	movls	r0, #1
 8001120:	2000      	movhi	r0, #0
 8001122:	f85d fb08 	ldr.w	pc, [sp], #8
 8001126:	bf00      	nop

08001128 <__aeabi_fcmpge>:
 8001128:	f84d ed08 	str.w	lr, [sp, #-8]!
 800112c:	f7ff ffd2 	bl	80010d4 <__aeabi_cfrcmple>
 8001130:	bf94      	ite	ls
 8001132:	2001      	movls	r0, #1
 8001134:	2000      	movhi	r0, #0
 8001136:	f85d fb08 	ldr.w	pc, [sp], #8
 800113a:	bf00      	nop

0800113c <__aeabi_fcmpgt>:
 800113c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001140:	f7ff ffc8 	bl	80010d4 <__aeabi_cfrcmple>
 8001144:	bf34      	ite	cc
 8001146:	2001      	movcc	r0, #1
 8001148:	2000      	movcs	r0, #0
 800114a:	f85d fb08 	ldr.w	pc, [sp], #8
 800114e:	bf00      	nop

08001150 <__aeabi_fcmpun>:
 8001150:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001154:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001158:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800115c:	d102      	bne.n	8001164 <__aeabi_fcmpun+0x14>
 800115e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8001162:	d108      	bne.n	8001176 <__aeabi_fcmpun+0x26>
 8001164:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001168:	d102      	bne.n	8001170 <__aeabi_fcmpun+0x20>
 800116a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800116e:	d102      	bne.n	8001176 <__aeabi_fcmpun+0x26>
 8001170:	f04f 0000 	mov.w	r0, #0
 8001174:	4770      	bx	lr
 8001176:	f04f 0001 	mov.w	r0, #1
 800117a:	4770      	bx	lr

0800117c <GPIO_Init>:
/**
 * @brief Initializes a GPIO pin based on the provided configuration structure.
 * @note Assumes GPIO clock is already enabled.
 */
void GPIO_Init(GPIO_RegDef_t *GPIOx, uint8_t PinNumber, GPIO_Config_t *config)
{
 800117c:	b480      	push	{r7}
 800117e:	b087      	sub	sp, #28
 8001180:	af00      	add	r7, sp, #0
 8001182:	60f8      	str	r0, [r7, #12]
 8001184:	460b      	mov	r3, r1
 8001186:	607a      	str	r2, [r7, #4]
 8001188:	72fb      	strb	r3, [r7, #11]
    uint8_t mode  = config->Mode;
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	75fb      	strb	r3, [r7, #23]

    if (PinNumber > 15) return; // Ensure valid pin number
 8001190:	7afb      	ldrb	r3, [r7, #11]
 8001192:	2b0f      	cmp	r3, #15
 8001194:	d879      	bhi.n	800128a <GPIO_Init+0x10e>

    // 1. Configure pin mode
    GPIOx->MODER &= ~(0x3U << (2 * PinNumber));
 8001196:	68fb      	ldr	r3, [r7, #12]
 8001198:	681a      	ldr	r2, [r3, #0]
 800119a:	7afb      	ldrb	r3, [r7, #11]
 800119c:	005b      	lsls	r3, r3, #1
 800119e:	2103      	movs	r1, #3
 80011a0:	fa01 f303 	lsl.w	r3, r1, r3
 80011a4:	43db      	mvns	r3, r3
 80011a6:	401a      	ands	r2, r3
 80011a8:	68fb      	ldr	r3, [r7, #12]
 80011aa:	601a      	str	r2, [r3, #0]
    GPIOx->MODER |= ((mode & 0x3U) << (2 * PinNumber));
 80011ac:	68fb      	ldr	r3, [r7, #12]
 80011ae:	681a      	ldr	r2, [r3, #0]
 80011b0:	7dfb      	ldrb	r3, [r7, #23]
 80011b2:	f003 0103 	and.w	r1, r3, #3
 80011b6:	7afb      	ldrb	r3, [r7, #11]
 80011b8:	005b      	lsls	r3, r3, #1
 80011ba:	fa01 f303 	lsl.w	r3, r1, r3
 80011be:	431a      	orrs	r2, r3
 80011c0:	68fb      	ldr	r3, [r7, #12]
 80011c2:	601a      	str	r2, [r3, #0]

    // 2. Configure output type
    if (mode == GPIO_MODE_OUTPUT || mode == GPIO_MODE_ALT)
 80011c4:	7dfb      	ldrb	r3, [r7, #23]
 80011c6:	2b01      	cmp	r3, #1
 80011c8:	d002      	beq.n	80011d0 <GPIO_Init+0x54>
 80011ca:	7dfb      	ldrb	r3, [r7, #23]
 80011cc:	2b02      	cmp	r3, #2
 80011ce:	d115      	bne.n	80011fc <GPIO_Init+0x80>
    {
        GPIOx->OTYPER &= ~(1U << PinNumber);
 80011d0:	68fb      	ldr	r3, [r7, #12]
 80011d2:	685a      	ldr	r2, [r3, #4]
 80011d4:	7afb      	ldrb	r3, [r7, #11]
 80011d6:	2101      	movs	r1, #1
 80011d8:	fa01 f303 	lsl.w	r3, r1, r3
 80011dc:	43db      	mvns	r3, r3
 80011de:	401a      	ands	r2, r3
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	605a      	str	r2, [r3, #4]
        GPIOx->OTYPER |= ((config->OutputType & 0x1U) << PinNumber);
 80011e4:	68fb      	ldr	r3, [r7, #12]
 80011e6:	685a      	ldr	r2, [r3, #4]
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	785b      	ldrb	r3, [r3, #1]
 80011ec:	f003 0101 	and.w	r1, r3, #1
 80011f0:	7afb      	ldrb	r3, [r7, #11]
 80011f2:	fa01 f303 	lsl.w	r3, r1, r3
 80011f6:	431a      	orrs	r2, r3
 80011f8:	68fb      	ldr	r3, [r7, #12]
 80011fa:	605a      	str	r2, [r3, #4]
    }

    // 3. Configure pull-up/pull-down
    GPIOx->PUPDR &= ~(0x3U << (2 * PinNumber));
 80011fc:	68fb      	ldr	r3, [r7, #12]
 80011fe:	68da      	ldr	r2, [r3, #12]
 8001200:	7afb      	ldrb	r3, [r7, #11]
 8001202:	005b      	lsls	r3, r3, #1
 8001204:	2103      	movs	r1, #3
 8001206:	fa01 f303 	lsl.w	r3, r1, r3
 800120a:	43db      	mvns	r3, r3
 800120c:	401a      	ands	r2, r3
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	60da      	str	r2, [r3, #12]
    GPIOx->PUPDR |= ((config->PuPd & 0x3U) << (2 * PinNumber));
 8001212:	68fb      	ldr	r3, [r7, #12]
 8001214:	68da      	ldr	r2, [r3, #12]
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	789b      	ldrb	r3, [r3, #2]
 800121a:	f003 0103 	and.w	r1, r3, #3
 800121e:	7afb      	ldrb	r3, [r7, #11]
 8001220:	005b      	lsls	r3, r3, #1
 8001222:	fa01 f303 	lsl.w	r3, r1, r3
 8001226:	431a      	orrs	r2, r3
 8001228:	68fb      	ldr	r3, [r7, #12]
 800122a:	60da      	str	r2, [r3, #12]

    // 4. Configure alternate function if needed
    if (mode == GPIO_MODE_ALT)
 800122c:	7dfb      	ldrb	r3, [r7, #23]
 800122e:	2b02      	cmp	r3, #2
 8001230:	d12c      	bne.n	800128c <GPIO_Init+0x110>
    {
        uint8_t afr_index = PinNumber / 8;
 8001232:	7afb      	ldrb	r3, [r7, #11]
 8001234:	08db      	lsrs	r3, r3, #3
 8001236:	75bb      	strb	r3, [r7, #22]
        uint8_t afr_shift = (PinNumber % 8) * 4;
 8001238:	7afb      	ldrb	r3, [r7, #11]
 800123a:	f003 0307 	and.w	r3, r3, #7
 800123e:	b2db      	uxtb	r3, r3
 8001240:	009b      	lsls	r3, r3, #2
 8001242:	757b      	strb	r3, [r7, #21]
        GPIOx->AFR[afr_index] &= ~(0xFU << afr_shift);
 8001244:	7dba      	ldrb	r2, [r7, #22]
 8001246:	68fb      	ldr	r3, [r7, #12]
 8001248:	3208      	adds	r2, #8
 800124a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800124e:	7d7b      	ldrb	r3, [r7, #21]
 8001250:	220f      	movs	r2, #15
 8001252:	fa02 f303 	lsl.w	r3, r2, r3
 8001256:	43db      	mvns	r3, r3
 8001258:	7dba      	ldrb	r2, [r7, #22]
 800125a:	4019      	ands	r1, r3
 800125c:	68fb      	ldr	r3, [r7, #12]
 800125e:	3208      	adds	r2, #8
 8001260:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        GPIOx->AFR[afr_index] |= ((config->AltFunction & 0xFU) << afr_shift);
 8001264:	7dba      	ldrb	r2, [r7, #22]
 8001266:	68fb      	ldr	r3, [r7, #12]
 8001268:	3208      	adds	r2, #8
 800126a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	78db      	ldrb	r3, [r3, #3]
 8001272:	f003 020f 	and.w	r2, r3, #15
 8001276:	7d7b      	ldrb	r3, [r7, #21]
 8001278:	fa02 f303 	lsl.w	r3, r2, r3
 800127c:	7dba      	ldrb	r2, [r7, #22]
 800127e:	4319      	orrs	r1, r3
 8001280:	68fb      	ldr	r3, [r7, #12]
 8001282:	3208      	adds	r2, #8
 8001284:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001288:	e000      	b.n	800128c <GPIO_Init+0x110>
    if (PinNumber > 15) return; // Ensure valid pin number
 800128a:	bf00      	nop
    }
}
 800128c:	371c      	adds	r7, #28
 800128e:	46bd      	mov	sp, r7
 8001290:	bc80      	pop	{r7}
 8001292:	4770      	bx	lr

08001294 <GPIO_OSpeed>:

/**
 * @brief Configures the output speed of a GPIO pin.
 */
void GPIO_OSpeed(GPIO_RegDef_t *GPIOx, uint8_t PinNumber, GPIO_Speed_t Speed)
{
 8001294:	b480      	push	{r7}
 8001296:	b083      	sub	sp, #12
 8001298:	af00      	add	r7, sp, #0
 800129a:	6078      	str	r0, [r7, #4]
 800129c:	460b      	mov	r3, r1
 800129e:	70fb      	strb	r3, [r7, #3]
 80012a0:	4613      	mov	r3, r2
 80012a2:	70bb      	strb	r3, [r7, #2]
    GPIOx->OSPEEDR &= ~(0x3U << (2 * PinNumber));
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	689a      	ldr	r2, [r3, #8]
 80012a8:	78fb      	ldrb	r3, [r7, #3]
 80012aa:	005b      	lsls	r3, r3, #1
 80012ac:	2103      	movs	r1, #3
 80012ae:	fa01 f303 	lsl.w	r3, r1, r3
 80012b2:	43db      	mvns	r3, r3
 80012b4:	401a      	ands	r2, r3
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	609a      	str	r2, [r3, #8]
    GPIOx->OSPEEDR |= ((Speed & 0x3U) << (2 * PinNumber));
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	689a      	ldr	r2, [r3, #8]
 80012be:	78bb      	ldrb	r3, [r7, #2]
 80012c0:	f003 0103 	and.w	r1, r3, #3
 80012c4:	78fb      	ldrb	r3, [r7, #3]
 80012c6:	005b      	lsls	r3, r3, #1
 80012c8:	fa01 f303 	lsl.w	r3, r1, r3
 80012cc:	431a      	orrs	r2, r3
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	609a      	str	r2, [r3, #8]
}
 80012d2:	bf00      	nop
 80012d4:	370c      	adds	r7, #12
 80012d6:	46bd      	mov	sp, r7
 80012d8:	bc80      	pop	{r7}
 80012da:	4770      	bx	lr

080012dc <GPIO_WritePin>:

/**
 * @brief Writes a value to a specific GPIO pin using BSRR register.
 */
void GPIO_WritePin(GPIO_RegDef_t *GPIOx, uint8_t PinNumber, uint8_t value)
{
 80012dc:	b480      	push	{r7}
 80012de:	b083      	sub	sp, #12
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	6078      	str	r0, [r7, #4]
 80012e4:	460b      	mov	r3, r1
 80012e6:	70fb      	strb	r3, [r7, #3]
 80012e8:	4613      	mov	r3, r2
 80012ea:	70bb      	strb	r3, [r7, #2]
    if (PinNumber < 16 && (value == 0 || value == 1)) {
 80012ec:	78fb      	ldrb	r3, [r7, #3]
 80012ee:	2b0f      	cmp	r3, #15
 80012f0:	d814      	bhi.n	800131c <GPIO_WritePin+0x40>
 80012f2:	78bb      	ldrb	r3, [r7, #2]
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d002      	beq.n	80012fe <GPIO_WritePin+0x22>
 80012f8:	78bb      	ldrb	r3, [r7, #2]
 80012fa:	2b01      	cmp	r3, #1
 80012fc:	d10e      	bne.n	800131c <GPIO_WritePin+0x40>
        GPIOx->BSRR = (value == 1) ? (1U << PinNumber) : (1U << (PinNumber + 16));
 80012fe:	78bb      	ldrb	r3, [r7, #2]
 8001300:	2b01      	cmp	r3, #1
 8001302:	d104      	bne.n	800130e <GPIO_WritePin+0x32>
 8001304:	78fb      	ldrb	r3, [r7, #3]
 8001306:	2201      	movs	r2, #1
 8001308:	fa02 f303 	lsl.w	r3, r2, r3
 800130c:	e004      	b.n	8001318 <GPIO_WritePin+0x3c>
 800130e:	78fb      	ldrb	r3, [r7, #3]
 8001310:	3310      	adds	r3, #16
 8001312:	2201      	movs	r2, #1
 8001314:	fa02 f303 	lsl.w	r3, r2, r3
 8001318:	687a      	ldr	r2, [r7, #4]
 800131a:	6193      	str	r3, [r2, #24]
    }
}
 800131c:	bf00      	nop
 800131e:	370c      	adds	r7, #12
 8001320:	46bd      	mov	sp, r7
 8001322:	bc80      	pop	{r7}
 8001324:	4770      	bx	lr
	...

08001328 <GPIO_EnableClock>:

/**
 * @brief Enables or disables the AHB1 clock for a GPIO port.
 */
void GPIO_EnableClock(gpio_port_t Port, en_state_t State)
{
 8001328:	b480      	push	{r7}
 800132a:	b083      	sub	sp, #12
 800132c:	af00      	add	r7, sp, #0
 800132e:	4603      	mov	r3, r0
 8001330:	460a      	mov	r2, r1
 8001332:	71fb      	strb	r3, [r7, #7]
 8001334:	4613      	mov	r3, r2
 8001336:	71bb      	strb	r3, [r7, #6]
    if (Port <= GPIO_PORT_E || Port == GPIO_PORT_H)
 8001338:	79fb      	ldrb	r3, [r7, #7]
 800133a:	2b04      	cmp	r3, #4
 800133c:	d902      	bls.n	8001344 <GPIO_EnableClock+0x1c>
 800133e:	79fb      	ldrb	r3, [r7, #7]
 8001340:	2b07      	cmp	r3, #7
 8001342:	d114      	bne.n	800136e <GPIO_EnableClock+0x46>
    {
        RCC->AHB1ENR = (State == ENABLE)
                     ? (RCC->AHB1ENR | (1U << Port))
                     : (RCC->AHB1ENR & ~(1U << Port));
 8001344:	79bb      	ldrb	r3, [r7, #6]
 8001346:	2b01      	cmp	r3, #1
 8001348:	d107      	bne.n	800135a <GPIO_EnableClock+0x32>
                     ? (RCC->AHB1ENR | (1U << Port))
 800134a:	4b0b      	ldr	r3, [pc, #44]	@ (8001378 <GPIO_EnableClock+0x50>)
 800134c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800134e:	79fb      	ldrb	r3, [r7, #7]
 8001350:	2101      	movs	r1, #1
 8001352:	fa01 f303 	lsl.w	r3, r1, r3
                     : (RCC->AHB1ENR & ~(1U << Port));
 8001356:	4313      	orrs	r3, r2
 8001358:	e007      	b.n	800136a <GPIO_EnableClock+0x42>
 800135a:	4b07      	ldr	r3, [pc, #28]	@ (8001378 <GPIO_EnableClock+0x50>)
 800135c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800135e:	79fb      	ldrb	r3, [r7, #7]
 8001360:	2101      	movs	r1, #1
 8001362:	fa01 f303 	lsl.w	r3, r1, r3
 8001366:	43db      	mvns	r3, r3
 8001368:	4013      	ands	r3, r2
        RCC->AHB1ENR = (State == ENABLE)
 800136a:	4a03      	ldr	r2, [pc, #12]	@ (8001378 <GPIO_EnableClock+0x50>)
 800136c:	6313      	str	r3, [r2, #48]	@ 0x30
    }
}
 800136e:	bf00      	nop
 8001370:	370c      	adds	r7, #12
 8001372:	46bd      	mov	sp, r7
 8001374:	bc80      	pop	{r7}
 8001376:	4770      	bx	lr
 8001378:	40023800 	.word	0x40023800

0800137c <SPI_Init>:
 *         - DFF (bit 11), CPOL (bit 1), CPHA (bit 0)
 *         - SSM (bit 9); if SSM=1 then SSI (bit 8)=1
 *         The function does NOT set SPE; call SPI_PeripheralControl() to enable.
 */
void SPI_Init(SPI_Handle_t *hspi)
{
 800137c:	b480      	push	{r7}
 800137e:	b085      	sub	sp, #20
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
    uint32_t cr1 = 0U;
 8001384:	2300      	movs	r3, #0
 8001386:	60fb      	str	r3, [r7, #12]

    /* 1) Master/slave (CR1.MSTR bit 2) */
    cr1 |= ((uint32_t)hspi->config.deviceMode << 2);
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	791b      	ldrb	r3, [r3, #4]
 800138c:	009b      	lsls	r3, r3, #2
 800138e:	68fa      	ldr	r2, [r7, #12]
 8001390:	4313      	orrs	r3, r2
 8001392:	60fb      	str	r3, [r7, #12]

    /* 2) Bus configuration */
    if (hspi->config.busConfig == SPI_BUS_FULL_DUPLEX)
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	795b      	ldrb	r3, [r3, #5]
 8001398:	2b00      	cmp	r3, #0
 800139a:	d104      	bne.n	80013a6 <SPI_Init+0x2a>
    {
        cr1 &= ~(1U << 15);                 /* BIDIMODE=0 */
 800139c:	68fb      	ldr	r3, [r7, #12]
 800139e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80013a2:	60fb      	str	r3, [r7, #12]
 80013a4:	e014      	b.n	80013d0 <SPI_Init+0x54>
    }
    else if (hspi->config.busConfig == SPI_BUS_HALF_DUPLEX)
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	795b      	ldrb	r3, [r3, #5]
 80013aa:	2b01      	cmp	r3, #1
 80013ac:	d108      	bne.n	80013c0 <SPI_Init+0x44>
    {
        cr1 |=  (1U << 15);                 /* BIDIMODE=1 (1-line) */
 80013ae:	68fb      	ldr	r3, [r7, #12]
 80013b0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80013b4:	60fb      	str	r3, [r7, #12]
        cr1 |=  (1U << 14);                 /* BIDIOE=1 (output enabled) */
 80013b6:	68fb      	ldr	r3, [r7, #12]
 80013b8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80013bc:	60fb      	str	r3, [r7, #12]
 80013be:	e007      	b.n	80013d0 <SPI_Init+0x54>
    }
    else /* SPI_BUS_SIMPLEX_RXONLY */
    {
        cr1 &= ~(1U << 15);                 /* BIDIMODE=0 */
 80013c0:	68fb      	ldr	r3, [r7, #12]
 80013c2:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80013c6:	60fb      	str	r3, [r7, #12]
        cr1 |=  (1U << 10);                 /* RXONLY=1  */
 80013c8:	68fb      	ldr	r3, [r7, #12]
 80013ca:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80013ce:	60fb      	str	r3, [r7, #12]
    }

    /* 3) Baud rate (CR1.BR[2:0] = bits [5:3]) */
    cr1 |= ((uint32_t)hspi->config.clkSpeed << 3);
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	7a9b      	ldrb	r3, [r3, #10]
 80013d4:	00db      	lsls	r3, r3, #3
 80013d6:	68fa      	ldr	r2, [r7, #12]
 80013d8:	4313      	orrs	r3, r2
 80013da:	60fb      	str	r3, [r7, #12]

    /* 4) Frame size (CR1.DFF bit 11) */
    cr1 |= ((uint32_t)hspi->config.dff << 11);
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	799b      	ldrb	r3, [r3, #6]
 80013e0:	02db      	lsls	r3, r3, #11
 80013e2:	68fa      	ldr	r2, [r7, #12]
 80013e4:	4313      	orrs	r3, r2
 80013e6:	60fb      	str	r3, [r7, #12]

    /* 5) Polarity/phase (CR1.CPOL bit 1, CR1.CPHA bit 0) */
    cr1 |= ((uint32_t)hspi->config.cpol << 1);
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	79db      	ldrb	r3, [r3, #7]
 80013ec:	005b      	lsls	r3, r3, #1
 80013ee:	68fa      	ldr	r2, [r7, #12]
 80013f0:	4313      	orrs	r3, r2
 80013f2:	60fb      	str	r3, [r7, #12]
    cr1 |= ((uint32_t)hspi->config.cpha << 0);
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	7a1b      	ldrb	r3, [r3, #8]
 80013f8:	461a      	mov	r2, r3
 80013fa:	68fb      	ldr	r3, [r7, #12]
 80013fc:	4313      	orrs	r3, r2
 80013fe:	60fb      	str	r3, [r7, #12]

    /* 6) Software slave management (CR1.SSM bit 9) */
    cr1 |= ((uint32_t)hspi->config.ssm << 9);
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	7a5b      	ldrb	r3, [r3, #9]
 8001404:	025b      	lsls	r3, r3, #9
 8001406:	68fa      	ldr	r2, [r7, #12]
 8001408:	4313      	orrs	r3, r2
 800140a:	60fb      	str	r3, [r7, #12]

    /* 7) Internal NSS when SSM=1 (CR1.SSI bit 8) */
    if (hspi->config.ssm == SPI_SSM_ENABLE)
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	7a5b      	ldrb	r3, [r3, #9]
 8001410:	2b01      	cmp	r3, #1
 8001412:	d103      	bne.n	800141c <SPI_Init+0xa0>
    {
        cr1 |= (1U << 8);                   /* keep NSS high internally (SSI = 1)*/
 8001414:	68fb      	ldr	r3, [r7, #12]
 8001416:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800141a:	60fb      	str	r3, [r7, #12]
    }

    /* 8) Program CR1 */
    hspi->SPIx->CR1 = cr1;
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	68fa      	ldr	r2, [r7, #12]
 8001422:	601a      	str	r2, [r3, #0]
}
 8001424:	bf00      	nop
 8001426:	3714      	adds	r7, #20
 8001428:	46bd      	mov	sp, r7
 800142a:	bc80      	pop	{r7}
 800142c:	4770      	bx	lr

0800142e <SPI_PeripheralControl>:
 * @param  hspi    Pointer to SPI handle
 * @param  enable  ENABLE(1) or DISABLE(0)
 * @note   Do not toggle SPE during an active frame.
 */
void SPI_PeripheralControl(SPI_Handle_t *hspi, uint8_t enable)
{
 800142e:	b480      	push	{r7}
 8001430:	b083      	sub	sp, #12
 8001432:	af00      	add	r7, sp, #0
 8001434:	6078      	str	r0, [r7, #4]
 8001436:	460b      	mov	r3, r1
 8001438:	70fb      	strb	r3, [r7, #3]
    if (enable) { hspi->SPIx->CR1 |=  (1U << 6); }  /* SPE=1 */
 800143a:	78fb      	ldrb	r3, [r7, #3]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d008      	beq.n	8001452 <SPI_PeripheralControl+0x24>
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	681b      	ldr	r3, [r3, #0]
 8001444:	681a      	ldr	r2, [r3, #0]
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	681b      	ldr	r3, [r3, #0]
 800144a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800144e:	601a      	str	r2, [r3, #0]
    else        { hspi->SPIx->CR1 &= ~(1U << 6); }  /* SPE=0 */
}
 8001450:	e007      	b.n	8001462 <SPI_PeripheralControl+0x34>
    else        { hspi->SPIx->CR1 &= ~(1U << 6); }  /* SPE=0 */
 8001452:	687b      	ldr	r3, [r7, #4]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	681a      	ldr	r2, [r3, #0]
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001460:	601a      	str	r2, [r3, #0]
}
 8001462:	bf00      	nop
 8001464:	370c      	adds	r7, #12
 8001466:	46bd      	mov	sp, r7
 8001468:	bc80      	pop	{r7}
 800146a:	4770      	bx	lr

0800146c <SPI_TransmitReceive>:
 */
int SPI_TransmitReceive(SPI_Handle_t *hspi,
                        const uint8_t *pTx,
                        uint8_t       *pRx,
                        uint32_t       len)
{
 800146c:	b480      	push	{r7}
 800146e:	b089      	sub	sp, #36	@ 0x24
 8001470:	af00      	add	r7, sp, #0
 8001472:	60f8      	str	r0, [r7, #12]
 8001474:	60b9      	str	r1, [r7, #8]
 8001476:	607a      	str	r2, [r7, #4]
 8001478:	603b      	str	r3, [r7, #0]
    if (len == 0U) return 0;
 800147a:	683b      	ldr	r3, [r7, #0]
 800147c:	2b00      	cmp	r3, #0
 800147e:	d101      	bne.n	8001484 <SPI_TransmitReceive+0x18>
 8001480:	2300      	movs	r3, #0
 8001482:	e0ae      	b.n	80015e2 <SPI_TransmitReceive+0x176>

    if (hspi->config.dff == SPI_DFF_16BITS)
 8001484:	68fb      	ldr	r3, [r7, #12]
 8001486:	799b      	ldrb	r3, [r3, #6]
 8001488:	2b01      	cmp	r3, #1
 800148a:	d155      	bne.n	8001538 <SPI_TransmitReceive+0xcc>
    {
        if (len & 1U) return -1; /* two bytes per frame */
 800148c:	683b      	ldr	r3, [r7, #0]
 800148e:	f003 0301 	and.w	r3, r3, #1
 8001492:	2b00      	cmp	r3, #0
 8001494:	d002      	beq.n	800149c <SPI_TransmitReceive+0x30>
 8001496:	f04f 33ff 	mov.w	r3, #4294967295
 800149a:	e0a2      	b.n	80015e2 <SPI_TransmitReceive+0x176>

        for (uint32_t i = 0; i < len; i += 2)
 800149c:	2300      	movs	r3, #0
 800149e:	61fb      	str	r3, [r7, #28]
 80014a0:	e045      	b.n	800152e <SPI_TransmitReceive+0xc2>
        {
            /* Write 16-bit (dummy if pTx==NULL) */
            while (!(hspi->SPIx->SR & (1U << 1))) { /* TXE */ }
 80014a2:	bf00      	nop
 80014a4:	68fb      	ldr	r3, [r7, #12]
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	689b      	ldr	r3, [r3, #8]
 80014aa:	f003 0302 	and.w	r3, r3, #2
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d0f8      	beq.n	80014a4 <SPI_TransmitReceive+0x38>
            uint16_t t = pTx ? (uint16_t)(((uint16_t)pTx[i] << 8) | pTx[i+1U])
 80014b2:	68bb      	ldr	r3, [r7, #8]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d010      	beq.n	80014da <SPI_TransmitReceive+0x6e>
 80014b8:	68ba      	ldr	r2, [r7, #8]
 80014ba:	69fb      	ldr	r3, [r7, #28]
 80014bc:	4413      	add	r3, r2
 80014be:	781b      	ldrb	r3, [r3, #0]
 80014c0:	b21b      	sxth	r3, r3
 80014c2:	021b      	lsls	r3, r3, #8
 80014c4:	b21a      	sxth	r2, r3
 80014c6:	69fb      	ldr	r3, [r7, #28]
 80014c8:	3301      	adds	r3, #1
 80014ca:	68b9      	ldr	r1, [r7, #8]
 80014cc:	440b      	add	r3, r1
 80014ce:	781b      	ldrb	r3, [r3, #0]
 80014d0:	b21b      	sxth	r3, r3
 80014d2:	4313      	orrs	r3, r2
 80014d4:	b21b      	sxth	r3, r3
 80014d6:	b29b      	uxth	r3, r3
 80014d8:	e001      	b.n	80014de <SPI_TransmitReceive+0x72>
 80014da:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80014de:	82bb      	strh	r3, [r7, #20]
                             : (uint16_t)0xFFFFU;
            *(__vo uint16_t *)&hspi->SPIx->DR = t;
 80014e0:	68fb      	ldr	r3, [r7, #12]
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	330c      	adds	r3, #12
 80014e6:	8aba      	ldrh	r2, [r7, #20]
 80014e8:	801a      	strh	r2, [r3, #0]

            /* Read 16-bit */
            while (!(hspi->SPIx->SR & (1U << 0))) { /* RXNE */ }
 80014ea:	bf00      	nop
 80014ec:	68fb      	ldr	r3, [r7, #12]
 80014ee:	681b      	ldr	r3, [r3, #0]
 80014f0:	689b      	ldr	r3, [r3, #8]
 80014f2:	f003 0301 	and.w	r3, r3, #1
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d0f8      	beq.n	80014ec <SPI_TransmitReceive+0x80>
            uint16_t r = *(__vo uint16_t *)&hspi->SPIx->DR;
 80014fa:	68fb      	ldr	r3, [r7, #12]
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	330c      	adds	r3, #12
 8001500:	881b      	ldrh	r3, [r3, #0]
 8001502:	827b      	strh	r3, [r7, #18]

            if (pRx)
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	2b00      	cmp	r3, #0
 8001508:	d00e      	beq.n	8001528 <SPI_TransmitReceive+0xbc>
            {
                pRx[i]   = (uint8_t)(r >> 8);
 800150a:	8a7b      	ldrh	r3, [r7, #18]
 800150c:	0a1b      	lsrs	r3, r3, #8
 800150e:	b299      	uxth	r1, r3
 8001510:	687a      	ldr	r2, [r7, #4]
 8001512:	69fb      	ldr	r3, [r7, #28]
 8001514:	4413      	add	r3, r2
 8001516:	b2ca      	uxtb	r2, r1
 8001518:	701a      	strb	r2, [r3, #0]
                pRx[i+1] = (uint8_t)(r & 0xFFU);
 800151a:	69fb      	ldr	r3, [r7, #28]
 800151c:	3301      	adds	r3, #1
 800151e:	687a      	ldr	r2, [r7, #4]
 8001520:	4413      	add	r3, r2
 8001522:	8a7a      	ldrh	r2, [r7, #18]
 8001524:	b2d2      	uxtb	r2, r2
 8001526:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < len; i += 2)
 8001528:	69fb      	ldr	r3, [r7, #28]
 800152a:	3302      	adds	r3, #2
 800152c:	61fb      	str	r3, [r7, #28]
 800152e:	69fa      	ldr	r2, [r7, #28]
 8001530:	683b      	ldr	r3, [r7, #0]
 8001532:	429a      	cmp	r2, r3
 8001534:	d3b5      	bcc.n	80014a2 <SPI_TransmitReceive+0x36>
 8001536:	e035      	b.n	80015a4 <SPI_TransmitReceive+0x138>
            }
        }
    }
    else /* 8-bit frames */
    {
        for (uint32_t i = 0; i < len; ++i)
 8001538:	2300      	movs	r3, #0
 800153a:	61bb      	str	r3, [r7, #24]
 800153c:	e02e      	b.n	800159c <SPI_TransmitReceive+0x130>
        {
            /* Write 8-bit (dummy if pTx==NULL) */
            while (!(hspi->SPIx->SR & (1U << 1))) { /* TXE */ }
 800153e:	bf00      	nop
 8001540:	68fb      	ldr	r3, [r7, #12]
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	689b      	ldr	r3, [r3, #8]
 8001546:	f003 0302 	and.w	r3, r3, #2
 800154a:	2b00      	cmp	r3, #0
 800154c:	d0f8      	beq.n	8001540 <SPI_TransmitReceive+0xd4>
            uint8_t t = pTx ? pTx[i] : 0xFFU;
 800154e:	68bb      	ldr	r3, [r7, #8]
 8001550:	2b00      	cmp	r3, #0
 8001552:	d004      	beq.n	800155e <SPI_TransmitReceive+0xf2>
 8001554:	68ba      	ldr	r2, [r7, #8]
 8001556:	69bb      	ldr	r3, [r7, #24]
 8001558:	4413      	add	r3, r2
 800155a:	781b      	ldrb	r3, [r3, #0]
 800155c:	e000      	b.n	8001560 <SPI_TransmitReceive+0xf4>
 800155e:	23ff      	movs	r3, #255	@ 0xff
 8001560:	75fb      	strb	r3, [r7, #23]
            *(__vo uint8_t *)&hspi->SPIx->DR = t;
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	330c      	adds	r3, #12
 8001568:	7dfa      	ldrb	r2, [r7, #23]
 800156a:	701a      	strb	r2, [r3, #0]

            /* Read 8-bit */
            while (!(hspi->SPIx->SR & (1U << 0))) { /* RXNE */ }
 800156c:	bf00      	nop
 800156e:	68fb      	ldr	r3, [r7, #12]
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	689b      	ldr	r3, [r3, #8]
 8001574:	f003 0301 	and.w	r3, r3, #1
 8001578:	2b00      	cmp	r3, #0
 800157a:	d0f8      	beq.n	800156e <SPI_TransmitReceive+0x102>
            uint8_t r = *(__vo uint8_t *)&hspi->SPIx->DR;
 800157c:	68fb      	ldr	r3, [r7, #12]
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	330c      	adds	r3, #12
 8001582:	781b      	ldrb	r3, [r3, #0]
 8001584:	75bb      	strb	r3, [r7, #22]

            if (pRx) { pRx[i] = r; }
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	2b00      	cmp	r3, #0
 800158a:	d004      	beq.n	8001596 <SPI_TransmitReceive+0x12a>
 800158c:	687a      	ldr	r2, [r7, #4]
 800158e:	69bb      	ldr	r3, [r7, #24]
 8001590:	4413      	add	r3, r2
 8001592:	7dba      	ldrb	r2, [r7, #22]
 8001594:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < len; ++i)
 8001596:	69bb      	ldr	r3, [r7, #24]
 8001598:	3301      	adds	r3, #1
 800159a:	61bb      	str	r3, [r7, #24]
 800159c:	69ba      	ldr	r2, [r7, #24]
 800159e:	683b      	ldr	r3, [r7, #0]
 80015a0:	429a      	cmp	r2, r3
 80015a2:	d3cc      	bcc.n	800153e <SPI_TransmitReceive+0xd2>
        }
    }

    /* Tail flush & defensive OVR clear */
    while (!(hspi->SPIx->SR & (1U << 1))) { /* TXE */ }
 80015a4:	bf00      	nop
 80015a6:	68fb      	ldr	r3, [r7, #12]
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	689b      	ldr	r3, [r3, #8]
 80015ac:	f003 0302 	and.w	r3, r3, #2
 80015b0:	2b00      	cmp	r3, #0
 80015b2:	d0f8      	beq.n	80015a6 <SPI_TransmitReceive+0x13a>
    while  ( hspi->SPIx->SR & (1U << 7))  { /* BSY */ }
 80015b4:	bf00      	nop
 80015b6:	68fb      	ldr	r3, [r7, #12]
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	689b      	ldr	r3, [r3, #8]
 80015bc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d1f8      	bne.n	80015b6 <SPI_TransmitReceive+0x14a>

    if (hspi->SPIx->SR & (1U << 6))        /* OVR */
 80015c4:	68fb      	ldr	r3, [r7, #12]
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	689b      	ldr	r3, [r3, #8]
 80015ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d006      	beq.n	80015e0 <SPI_TransmitReceive+0x174>
    {
        (void)*(__vo uint16_t *)&hspi->SPIx->DR;
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	330c      	adds	r3, #12
 80015d8:	881b      	ldrh	r3, [r3, #0]
        (void)hspi->SPIx->SR;
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	689b      	ldr	r3, [r3, #8]
    }

    return (int)len;
 80015e0:	683b      	ldr	r3, [r7, #0]
}
 80015e2:	4618      	mov	r0, r3
 80015e4:	3724      	adds	r7, #36	@ 0x24
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bc80      	pop	{r7}
 80015ea:	4770      	bx	lr

080015ec <main>:

/* ========================================================================== */
/*                                   Main                                      */
/* ========================================================================== */

int main(void) {
 80015ec:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80015f0:	b0a2      	sub	sp, #136	@ 0x88
 80015f2:	af04      	add	r7, sp, #16
	/* State */
	LPF1_t lpf_x, lpf_y, lpf_z;
	float x_off = 0.0f, y_off = 0.0f, z_off = 0.0f;
 80015f4:	f04f 0300 	mov.w	r3, #0
 80015f8:	677b      	str	r3, [r7, #116]	@ 0x74
 80015fa:	f04f 0300 	mov.w	r3, #0
 80015fe:	673b      	str	r3, [r7, #112]	@ 0x70
 8001600:	f04f 0300 	mov.w	r3, #0
 8001604:	66fb      	str	r3, [r7, #108]	@ 0x6c

	/* Bring-up */
	Init_LEDs();
 8001606:	f000 fa5d 	bl	8001ac4 <Init_LEDs>
	Init_SPI1_GPIO_CS();
 800160a:	f000 fb05 	bl	8001c18 <Init_SPI1_GPIO_CS>
	Config_SPI1_TXRX();
 800160e:	f000 fb5b 	bl	8001cc8 <Config_SPI1_TXRX>
	SPI_PeripheralControl(&hspi1, ENABLE);
 8001612:	2101      	movs	r1, #1
 8001614:	4847      	ldr	r0, [pc, #284]	@ (8001734 <main+0x148>)
 8001616:	f7ff ff0a 	bl	800142e <SPI_PeripheralControl>

	/* Configure LIS3DSH and verify ID */
	if (lis_init() != 0) {
 800161a:	f000 fc29 	bl	8001e70 <lis_init>
 800161e:	4603      	mov	r3, r0
 8001620:	2b00      	cmp	r3, #0
 8001622:	d006      	beq.n	8001632 <main+0x46>
		printf("ERR: LIS3DSH init failed\r\n");
 8001624:	4844      	ldr	r0, [pc, #272]	@ (8001738 <main+0x14c>)
 8001626:	f001 fb19 	bl	8002c5c <puts>
		while (1) {
			delay_cycles(100000);
 800162a:	4844      	ldr	r0, [pc, #272]	@ (800173c <main+0x150>)
 800162c:	f000 fc72 	bl	8001f14 <delay_cycles>
 8001630:	e7fb      	b.n	800162a <main+0x3e>
		}
	}

	/* Initialize LPFs */
	lpf_init(&lpf_x, APP_FC_HZ, APP_FS_HZ);
 8001632:	f107 031c 	add.w	r3, r7, #28
 8001636:	4a42      	ldr	r2, [pc, #264]	@ (8001740 <main+0x154>)
 8001638:	4942      	ldr	r1, [pc, #264]	@ (8001744 <main+0x158>)
 800163a:	4618      	mov	r0, r3
 800163c:	f000 fab4 	bl	8001ba8 <lpf_init>
	lpf_init(&lpf_y, APP_FC_HZ, APP_FS_HZ);
 8001640:	f107 0314 	add.w	r3, r7, #20
 8001644:	4a3e      	ldr	r2, [pc, #248]	@ (8001740 <main+0x154>)
 8001646:	493f      	ldr	r1, [pc, #252]	@ (8001744 <main+0x158>)
 8001648:	4618      	mov	r0, r3
 800164a:	f000 faad 	bl	8001ba8 <lpf_init>
	lpf_init(&lpf_z, APP_FC_HZ, APP_FS_HZ);
 800164e:	f107 030c 	add.w	r3, r7, #12
 8001652:	4a3b      	ldr	r2, [pc, #236]	@ (8001740 <main+0x154>)
 8001654:	493b      	ldr	r1, [pc, #236]	@ (8001744 <main+0x158>)
 8001656:	4618      	mov	r0, r3
 8001658:	f000 faa6 	bl	8001ba8 <lpf_init>

	/* Startup offset calibration (board still) */
	for (uint32_t i = 0; i < CALIB_SAMPLES; ++i) {
 800165c:	2300      	movs	r3, #0
 800165e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8001660:	e030      	b.n	80016c4 <main+0xd8>
		x_off += lis_read_axis_16(LIS_REG_OUT_X_L);
 8001662:	2028      	movs	r0, #40	@ 0x28
 8001664:	f000 fc3e 	bl	8001ee4 <lis_read_axis_16>
 8001668:	4603      	mov	r3, r0
 800166a:	4618      	mov	r0, r3
 800166c:	f7ff fb56 	bl	8000d1c <__aeabi_i2f>
 8001670:	4603      	mov	r3, r0
 8001672:	4619      	mov	r1, r3
 8001674:	6f78      	ldr	r0, [r7, #116]	@ 0x74
 8001676:	f7ff fa9d 	bl	8000bb4 <__addsf3>
 800167a:	4603      	mov	r3, r0
 800167c:	677b      	str	r3, [r7, #116]	@ 0x74
		y_off += lis_read_axis_16(LIS_REG_OUT_Y_L);
 800167e:	202a      	movs	r0, #42	@ 0x2a
 8001680:	f000 fc30 	bl	8001ee4 <lis_read_axis_16>
 8001684:	4603      	mov	r3, r0
 8001686:	4618      	mov	r0, r3
 8001688:	f7ff fb48 	bl	8000d1c <__aeabi_i2f>
 800168c:	4603      	mov	r3, r0
 800168e:	4619      	mov	r1, r3
 8001690:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8001692:	f7ff fa8f 	bl	8000bb4 <__addsf3>
 8001696:	4603      	mov	r3, r0
 8001698:	673b      	str	r3, [r7, #112]	@ 0x70
		z_off += lis_read_axis_16(LIS_REG_OUT_Z_L);
 800169a:	202c      	movs	r0, #44	@ 0x2c
 800169c:	f000 fc22 	bl	8001ee4 <lis_read_axis_16>
 80016a0:	4603      	mov	r3, r0
 80016a2:	4618      	mov	r0, r3
 80016a4:	f7ff fb3a 	bl	8000d1c <__aeabi_i2f>
 80016a8:	4603      	mov	r3, r0
 80016aa:	4619      	mov	r1, r3
 80016ac:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80016ae:	f7ff fa81 	bl	8000bb4 <__addsf3>
 80016b2:	4603      	mov	r3, r0
 80016b4:	66fb      	str	r3, [r7, #108]	@ 0x6c
		delay_cycles(50000);
 80016b6:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80016ba:	f000 fc2b 	bl	8001f14 <delay_cycles>
	for (uint32_t i = 0; i < CALIB_SAMPLES; ++i) {
 80016be:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80016c0:	3301      	adds	r3, #1
 80016c2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80016c4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80016c6:	2b31      	cmp	r3, #49	@ 0x31
 80016c8:	d9cb      	bls.n	8001662 <main+0x76>
	}
	x_off /= (float) CALIB_SAMPLES;
 80016ca:	491f      	ldr	r1, [pc, #124]	@ (8001748 <main+0x15c>)
 80016cc:	6f78      	ldr	r0, [r7, #116]	@ 0x74
 80016ce:	f7ff fc2d 	bl	8000f2c <__aeabi_fdiv>
 80016d2:	4603      	mov	r3, r0
 80016d4:	677b      	str	r3, [r7, #116]	@ 0x74
	y_off /= (float) CALIB_SAMPLES;
 80016d6:	491c      	ldr	r1, [pc, #112]	@ (8001748 <main+0x15c>)
 80016d8:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 80016da:	f7ff fc27 	bl	8000f2c <__aeabi_fdiv>
 80016de:	4603      	mov	r3, r0
 80016e0:	673b      	str	r3, [r7, #112]	@ 0x70
	z_off /= (float) CALIB_SAMPLES;
 80016e2:	4919      	ldr	r1, [pc, #100]	@ (8001748 <main+0x15c>)
 80016e4:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 80016e6:	f7ff fc21 	bl	8000f2c <__aeabi_fdiv>
 80016ea:	4603      	mov	r3, r0
 80016ec:	66fb      	str	r3, [r7, #108]	@ 0x6c

	/* Main loop */
	while (1) {
		/* Wait-for-data with timeout */
		uint32_t tries = 0;
 80016ee:	2300      	movs	r3, #0
 80016f0:	667b      	str	r3, [r7, #100]	@ 0x64
		while (!lis_status_data_ready() && (++tries < STATUS_MAX_TRIES)) { /* spin */
 80016f2:	bf00      	nop
 80016f4:	f000 fbe4 	bl	8001ec0 <lis_status_data_ready>
 80016f8:	4603      	mov	r3, r0
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d107      	bne.n	800170e <main+0x122>
 80016fe:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001700:	3301      	adds	r3, #1
 8001702:	667b      	str	r3, [r7, #100]	@ 0x64
 8001704:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001706:	f241 3287 	movw	r2, #4999	@ 0x1387
 800170a:	4293      	cmp	r3, r2
 800170c:	d9f2      	bls.n	80016f4 <main+0x108>
		}
		if (tries >= STATUS_MAX_TRIES) {
 800170e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001710:	f241 3287 	movw	r2, #4999	@ 0x1387
 8001714:	4293      	cmp	r3, r2
 8001716:	d91b      	bls.n	8001750 <main+0x164>
			uint8_t who = lis_read_u8(LIS_REG_WHO_AM_I);
 8001718:	200f      	movs	r0, #15
 800171a:	f000 fb09 	bl	8001d30 <lis_read_u8>
 800171e:	4603      	mov	r3, r0
 8001720:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
			printf("WARN: no data-ready; WHO_AM_I=0x%02X\r\n", (unsigned) who);
 8001724:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001728:	4619      	mov	r1, r3
 800172a:	4808      	ldr	r0, [pc, #32]	@ (800174c <main+0x160>)
 800172c:	f001 fa2e 	bl	8002b8c <iprintf>
			continue;
 8001730:	e139      	b.n	80019a6 <main+0x3ba>
 8001732:	bf00      	nop
 8001734:	200001e4 	.word	0x200001e4
 8001738:	08004f00 	.word	0x08004f00
 800173c:	000186a0 	.word	0x000186a0
 8001740:	42c80000 	.word	0x42c80000
 8001744:	40400000 	.word	0x40400000
 8001748:	42480000 	.word	0x42480000
 800174c:	08004f1c 	.word	0x08004f1c
		}

		/* Read raw axes (16-bit, little-endian) */
		int16_t rx = lis_read_axis_16(LIS_REG_OUT_X_L);
 8001750:	2028      	movs	r0, #40	@ 0x28
 8001752:	f000 fbc7 	bl	8001ee4 <lis_read_axis_16>
 8001756:	4603      	mov	r3, r0
 8001758:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
		int16_t ry = lis_read_axis_16(LIS_REG_OUT_Y_L);
 800175c:	202a      	movs	r0, #42	@ 0x2a
 800175e:	f000 fbc1 	bl	8001ee4 <lis_read_axis_16>
 8001762:	4603      	mov	r3, r0
 8001764:	f8a7 3054 	strh.w	r3, [r7, #84]	@ 0x54
		int16_t rz = lis_read_axis_16(LIS_REG_OUT_Z_L);
 8001768:	202c      	movs	r0, #44	@ 0x2c
 800176a:	f000 fbbb 	bl	8001ee4 <lis_read_axis_16>
 800176e:	4603      	mov	r3, r0
 8001770:	f8a7 3052 	strh.w	r3, [r7, #82]	@ 0x52
		/* Moving average (integer domain) */
		float x_ma, y_ma, z_ma;
		add_sample(rx, ry, rz, &x_ma, &y_ma, &z_ma);
 8001774:	f107 0408 	add.w	r4, r7, #8
 8001778:	f9b7 2052 	ldrsh.w	r2, [r7, #82]	@ 0x52
 800177c:	f9b7 1054 	ldrsh.w	r1, [r7, #84]	@ 0x54
 8001780:	f9b7 0056 	ldrsh.w	r0, [r7, #86]	@ 0x56
 8001784:	463b      	mov	r3, r7
 8001786:	9301      	str	r3, [sp, #4]
 8001788:	1d3b      	adds	r3, r7, #4
 800178a:	9300      	str	r3, [sp, #0]
 800178c:	4623      	mov	r3, r4
 800178e:	f000 f91d 	bl	80019cc <add_sample>
		/* Moving average values (floats promoted to double) */

		float x = x_ma - x_off;
 8001792:	68bb      	ldr	r3, [r7, #8]
 8001794:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 8001796:	4618      	mov	r0, r3
 8001798:	f7ff fa0a 	bl	8000bb0 <__aeabi_fsub>
 800179c:	4603      	mov	r3, r0
 800179e:	64fb      	str	r3, [r7, #76]	@ 0x4c
		float y = y_ma - y_off;
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	6f39      	ldr	r1, [r7, #112]	@ 0x70
 80017a4:	4618      	mov	r0, r3
 80017a6:	f7ff fa03 	bl	8000bb0 <__aeabi_fsub>
 80017aa:	4603      	mov	r3, r0
 80017ac:	64bb      	str	r3, [r7, #72]	@ 0x48
		float z = z_ma - z_off;
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 80017b2:	4618      	mov	r0, r3
 80017b4:	f7ff f9fc 	bl	8000bb0 <__aeabi_fsub>
 80017b8:	4603      	mov	r3, r0
 80017ba:	647b      	str	r3, [r7, #68]	@ 0x44

		float xf = lpf_update(&lpf_x, x);
 80017bc:	f107 031c 	add.w	r3, r7, #28
 80017c0:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 80017c2:	4618      	mov	r0, r3
 80017c4:	f000 fa05 	bl	8001bd2 <lpf_update>
 80017c8:	6438      	str	r0, [r7, #64]	@ 0x40
		float yf = lpf_update(&lpf_y, y);
 80017ca:	f107 0314 	add.w	r3, r7, #20
 80017ce:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80017d0:	4618      	mov	r0, r3
 80017d2:	f000 f9fe 	bl	8001bd2 <lpf_update>
 80017d6:	63f8      	str	r0, [r7, #60]	@ 0x3c
		float zf = lpf_update(&lpf_z, z);
 80017d8:	f107 030c 	add.w	r3, r7, #12
 80017dc:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80017de:	4618      	mov	r0, r3
 80017e0:	f000 f9f7 	bl	8001bd2 <lpf_update>
 80017e4:	63b8      	str	r0, [r7, #56]	@ 0x38
		/* Convert filtered LSB → g */
		const float LSB_TO_G = 0.00006f; /* ±2 g full-scale */
 80017e6:	4b70      	ldr	r3, [pc, #448]	@ (80019a8 <main+0x3bc>)
 80017e8:	637b      	str	r3, [r7, #52]	@ 0x34
		float ax_g = xf * LSB_TO_G;
 80017ea:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 80017ec:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 80017ee:	f7ff fae9 	bl	8000dc4 <__aeabi_fmul>
 80017f2:	4603      	mov	r3, r0
 80017f4:	663b      	str	r3, [r7, #96]	@ 0x60
		float ay_g = yf * LSB_TO_G;
 80017f6:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 80017f8:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 80017fa:	f7ff fae3 	bl	8000dc4 <__aeabi_fmul>
 80017fe:	4603      	mov	r3, r0
 8001800:	65fb      	str	r3, [r7, #92]	@ 0x5c
		float az_g = zf * LSB_TO_G;
 8001802:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8001804:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8001806:	f7ff fadd 	bl	8000dc4 <__aeabi_fmul>
 800180a:	4603      	mov	r3, r0
 800180c:	65bb      	str	r3, [r7, #88]	@ 0x58

		/* Clamp to [-1, 1] for asin() domain */
		if (ax_g > 1.0f)
 800180e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8001812:	6e38      	ldr	r0, [r7, #96]	@ 0x60
 8001814:	f7ff fc92 	bl	800113c <__aeabi_fcmpgt>
 8001818:	4603      	mov	r3, r0
 800181a:	2b00      	cmp	r3, #0
 800181c:	d002      	beq.n	8001824 <main+0x238>
			ax_g = 1.0f;
 800181e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001822:	663b      	str	r3, [r7, #96]	@ 0x60
		if (ax_g < -1.0f)
 8001824:	4961      	ldr	r1, [pc, #388]	@ (80019ac <main+0x3c0>)
 8001826:	6e38      	ldr	r0, [r7, #96]	@ 0x60
 8001828:	f7ff fc6a 	bl	8001100 <__aeabi_fcmplt>
 800182c:	4603      	mov	r3, r0
 800182e:	2b00      	cmp	r3, #0
 8001830:	d001      	beq.n	8001836 <main+0x24a>
			ax_g = -1.0f;
 8001832:	4b5e      	ldr	r3, [pc, #376]	@ (80019ac <main+0x3c0>)
 8001834:	663b      	str	r3, [r7, #96]	@ 0x60
		if (ay_g > 1.0f)
 8001836:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 800183a:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
 800183c:	f7ff fc7e 	bl	800113c <__aeabi_fcmpgt>
 8001840:	4603      	mov	r3, r0
 8001842:	2b00      	cmp	r3, #0
 8001844:	d002      	beq.n	800184c <main+0x260>
			ay_g = 1.0f;
 8001846:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800184a:	65fb      	str	r3, [r7, #92]	@ 0x5c
		if (ay_g < -1.0f)
 800184c:	4957      	ldr	r1, [pc, #348]	@ (80019ac <main+0x3c0>)
 800184e:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
 8001850:	f7ff fc56 	bl	8001100 <__aeabi_fcmplt>
 8001854:	4603      	mov	r3, r0
 8001856:	2b00      	cmp	r3, #0
 8001858:	d001      	beq.n	800185e <main+0x272>
			ay_g = -1.0f;
 800185a:	4b54      	ldr	r3, [pc, #336]	@ (80019ac <main+0x3c0>)
 800185c:	65fb      	str	r3, [r7, #92]	@ 0x5c
		if (az_g > 1.0f)
 800185e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8001862:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8001864:	f7ff fc6a 	bl	800113c <__aeabi_fcmpgt>
 8001868:	4603      	mov	r3, r0
 800186a:	2b00      	cmp	r3, #0
 800186c:	d002      	beq.n	8001874 <main+0x288>
			az_g = 1.0f;
 800186e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001872:	65bb      	str	r3, [r7, #88]	@ 0x58
		if (az_g < -1.0f)
 8001874:	494d      	ldr	r1, [pc, #308]	@ (80019ac <main+0x3c0>)
 8001876:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8001878:	f7ff fc42 	bl	8001100 <__aeabi_fcmplt>
 800187c:	4603      	mov	r3, r0
 800187e:	2b00      	cmp	r3, #0
 8001880:	d001      	beq.n	8001886 <main+0x29a>
			az_g = -1.0f;
 8001882:	4b4a      	ldr	r3, [pc, #296]	@ (80019ac <main+0x3c0>)
 8001884:	65bb      	str	r3, [r7, #88]	@ 0x58

		/* Axis-only tilt angles (angle between gravity and each axis) */
		float x_deg = asinf(ax_g) * RAD2DEG;
 8001886:	6e38      	ldr	r0, [r7, #96]	@ 0x60
 8001888:	f003 f954 	bl	8004b34 <asinf>
 800188c:	4603      	mov	r3, r0
 800188e:	4948      	ldr	r1, [pc, #288]	@ (80019b0 <main+0x3c4>)
 8001890:	4618      	mov	r0, r3
 8001892:	f7ff fa97 	bl	8000dc4 <__aeabi_fmul>
 8001896:	4603      	mov	r3, r0
 8001898:	633b      	str	r3, [r7, #48]	@ 0x30
		float y_deg = asinf(ay_g) * RAD2DEG;
 800189a:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
 800189c:	f003 f94a 	bl	8004b34 <asinf>
 80018a0:	4603      	mov	r3, r0
 80018a2:	4943      	ldr	r1, [pc, #268]	@ (80019b0 <main+0x3c4>)
 80018a4:	4618      	mov	r0, r3
 80018a6:	f7ff fa8d 	bl	8000dc4 <__aeabi_fmul>
 80018aa:	4603      	mov	r3, r0
 80018ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
		float z_deg = asinf(az_g) * RAD2DEG;
 80018ae:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80018b0:	f003 f940 	bl	8004b34 <asinf>
 80018b4:	4603      	mov	r3, r0
 80018b6:	493e      	ldr	r1, [pc, #248]	@ (80019b0 <main+0x3c4>)
 80018b8:	4618      	mov	r0, r3
 80018ba:	f7ff fa83 	bl	8000dc4 <__aeabi_fmul>
 80018be:	4603      	mov	r3, r0
 80018c0:	62bb      	str	r3, [r7, #40]	@ 0x28

		printf(
 80018c2:	483c      	ldr	r0, [pc, #240]	@ (80019b4 <main+0x3c8>)
 80018c4:	f001 f9ca 	bl	8002c5c <puts>
				"--------------------------------------------------------------------------------------\n");
		printf("RAW            X:%8d   Y:%8d   Z:%8d\r\n", (int) rx, (int) ry,
 80018c8:	f9b7 1056 	ldrsh.w	r1, [r7, #86]	@ 0x56
 80018cc:	f9b7 2054 	ldrsh.w	r2, [r7, #84]	@ 0x54
 80018d0:	f9b7 3052 	ldrsh.w	r3, [r7, #82]	@ 0x52
 80018d4:	4838      	ldr	r0, [pc, #224]	@ (80019b8 <main+0x3cc>)
 80018d6:	f001 f959 	bl	8002b8c <iprintf>
				(int) rz);

		/* Moving average values */
		printf("MA             X:%8.0f   Y:%8.0f   Z:%8.0f\r\n", (double) x_ma,
 80018da:	68bb      	ldr	r3, [r7, #8]
 80018dc:	4618      	mov	r0, r3
 80018de:	f7fe fe33 	bl	8000548 <__aeabi_f2d>
 80018e2:	4680      	mov	r8, r0
 80018e4:	4689      	mov	r9, r1
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	4618      	mov	r0, r3
 80018ea:	f7fe fe2d 	bl	8000548 <__aeabi_f2d>
 80018ee:	4604      	mov	r4, r0
 80018f0:	460d      	mov	r5, r1
 80018f2:	683b      	ldr	r3, [r7, #0]
 80018f4:	4618      	mov	r0, r3
 80018f6:	f7fe fe27 	bl	8000548 <__aeabi_f2d>
 80018fa:	4602      	mov	r2, r0
 80018fc:	460b      	mov	r3, r1
 80018fe:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001902:	e9cd 4500 	strd	r4, r5, [sp]
 8001906:	4642      	mov	r2, r8
 8001908:	464b      	mov	r3, r9
 800190a:	482c      	ldr	r0, [pc, #176]	@ (80019bc <main+0x3d0>)
 800190c:	f001 f93e 	bl	8002b8c <iprintf>
				(double) y_ma, (double) z_ma);
		/* Offset-removed values */
		printf("Offset removed X:%8.2f   Y:%8.2f   Z:%8.2f\r\n", x, y, z);
 8001910:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
 8001912:	f7fe fe19 	bl	8000548 <__aeabi_f2d>
 8001916:	4680      	mov	r8, r0
 8001918:	4689      	mov	r9, r1
 800191a:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800191c:	f7fe fe14 	bl	8000548 <__aeabi_f2d>
 8001920:	4604      	mov	r4, r0
 8001922:	460d      	mov	r5, r1
 8001924:	6c78      	ldr	r0, [r7, #68]	@ 0x44
 8001926:	f7fe fe0f 	bl	8000548 <__aeabi_f2d>
 800192a:	4602      	mov	r2, r0
 800192c:	460b      	mov	r3, r1
 800192e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001932:	e9cd 4500 	strd	r4, r5, [sp]
 8001936:	4642      	mov	r2, r8
 8001938:	464b      	mov	r3, r9
 800193a:	4821      	ldr	r0, [pc, #132]	@ (80019c0 <main+0x3d4>)
 800193c:	f001 f926 	bl	8002b8c <iprintf>

		/* LPF values */
		printf("LPF filtered   X:%8.2f   Y:%8.2f   Z:%8.2f\r\n", xf, yf, zf);
 8001940:	6c38      	ldr	r0, [r7, #64]	@ 0x40
 8001942:	f7fe fe01 	bl	8000548 <__aeabi_f2d>
 8001946:	4680      	mov	r8, r0
 8001948:	4689      	mov	r9, r1
 800194a:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 800194c:	f7fe fdfc 	bl	8000548 <__aeabi_f2d>
 8001950:	4604      	mov	r4, r0
 8001952:	460d      	mov	r5, r1
 8001954:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8001956:	f7fe fdf7 	bl	8000548 <__aeabi_f2d>
 800195a:	4602      	mov	r2, r0
 800195c:	460b      	mov	r3, r1
 800195e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001962:	e9cd 4500 	strd	r4, r5, [sp]
 8001966:	4642      	mov	r2, r8
 8001968:	464b      	mov	r3, r9
 800196a:	4816      	ldr	r0, [pc, #88]	@ (80019c4 <main+0x3d8>)
 800196c:	f001 f90e 	bl	8002b8c <iprintf>

		/* Aligned print */
		printf("Axis-only ang  X:%8.2f   Y:%8.2f   Z:%8.2f deg\r\n", x_deg,
 8001970:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8001972:	f7fe fde9 	bl	8000548 <__aeabi_f2d>
 8001976:	4680      	mov	r8, r0
 8001978:	4689      	mov	r9, r1
 800197a:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800197c:	f7fe fde4 	bl	8000548 <__aeabi_f2d>
 8001980:	4604      	mov	r4, r0
 8001982:	460d      	mov	r5, r1
 8001984:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8001986:	f7fe fddf 	bl	8000548 <__aeabi_f2d>
 800198a:	4602      	mov	r2, r0
 800198c:	460b      	mov	r3, r1
 800198e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8001992:	e9cd 4500 	strd	r4, r5, [sp]
 8001996:	4642      	mov	r2, r8
 8001998:	464b      	mov	r3, r9
 800199a:	480b      	ldr	r0, [pc, #44]	@ (80019c8 <main+0x3dc>)
 800199c:	f001 f8f6 	bl	8002b8c <iprintf>
				y_deg, z_deg);
		printf(
 80019a0:	4804      	ldr	r0, [pc, #16]	@ (80019b4 <main+0x3c8>)
 80019a2:	f001 f95b 	bl	8002c5c <puts>
	while (1) {
 80019a6:	e6a2      	b.n	80016ee <main+0x102>
 80019a8:	387ba882 	.word	0x387ba882
 80019ac:	bf800000 	.word	0xbf800000
 80019b0:	42652ee1 	.word	0x42652ee1
 80019b4:	08004f44 	.word	0x08004f44
 80019b8:	08004f9c 	.word	0x08004f9c
 80019bc:	08004fc4 	.word	0x08004fc4
 80019c0:	08004ff4 	.word	0x08004ff4
 80019c4:	08005024 	.word	0x08005024
 80019c8:	08005054 	.word	0x08005054

080019cc <add_sample>:
/* ========================================================================== */
/*                         Function implementations                            */
/* ========================================================================== */

static void add_sample(int16_t x, int16_t y, int16_t z, float *x_avg,
		float *y_avg, float *z_avg) {
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b088      	sub	sp, #32
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	607b      	str	r3, [r7, #4]
 80019d4:	4603      	mov	r3, r0
 80019d6:	81fb      	strh	r3, [r7, #14]
 80019d8:	460b      	mov	r3, r1
 80019da:	81bb      	strh	r3, [r7, #12]
 80019dc:	4613      	mov	r3, r2
 80019de:	817b      	strh	r3, [r7, #10]
	static int16_t buf_x[AVG_SAMPLES], buf_y[AVG_SAMPLES], buf_z[AVG_SAMPLES];
	static uint8_t idx = 0;

	buf_x[idx] = x;
 80019e0:	4b34      	ldr	r3, [pc, #208]	@ (8001ab4 <add_sample+0xe8>)
 80019e2:	781b      	ldrb	r3, [r3, #0]
 80019e4:	4619      	mov	r1, r3
 80019e6:	4a34      	ldr	r2, [pc, #208]	@ (8001ab8 <add_sample+0xec>)
 80019e8:	89fb      	ldrh	r3, [r7, #14]
 80019ea:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
	buf_y[idx] = y;
 80019ee:	4b31      	ldr	r3, [pc, #196]	@ (8001ab4 <add_sample+0xe8>)
 80019f0:	781b      	ldrb	r3, [r3, #0]
 80019f2:	4619      	mov	r1, r3
 80019f4:	4a31      	ldr	r2, [pc, #196]	@ (8001abc <add_sample+0xf0>)
 80019f6:	89bb      	ldrh	r3, [r7, #12]
 80019f8:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
	buf_z[idx] = z;
 80019fc:	4b2d      	ldr	r3, [pc, #180]	@ (8001ab4 <add_sample+0xe8>)
 80019fe:	781b      	ldrb	r3, [r3, #0]
 8001a00:	4619      	mov	r1, r3
 8001a02:	4a2f      	ldr	r2, [pc, #188]	@ (8001ac0 <add_sample+0xf4>)
 8001a04:	897b      	ldrh	r3, [r7, #10]
 8001a06:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
	idx = (uint8_t) ((idx + 1U) % AVG_SAMPLES);
 8001a0a:	4b2a      	ldr	r3, [pc, #168]	@ (8001ab4 <add_sample+0xe8>)
 8001a0c:	781b      	ldrb	r3, [r3, #0]
 8001a0e:	3301      	adds	r3, #1
 8001a10:	b2db      	uxtb	r3, r3
 8001a12:	f003 0307 	and.w	r3, r3, #7
 8001a16:	b2da      	uxtb	r2, r3
 8001a18:	4b26      	ldr	r3, [pc, #152]	@ (8001ab4 <add_sample+0xe8>)
 8001a1a:	701a      	strb	r2, [r3, #0]

	int32_t sx = 0, sy = 0, sz = 0;
 8001a1c:	2300      	movs	r3, #0
 8001a1e:	61fb      	str	r3, [r7, #28]
 8001a20:	2300      	movs	r3, #0
 8001a22:	61bb      	str	r3, [r7, #24]
 8001a24:	2300      	movs	r3, #0
 8001a26:	617b      	str	r3, [r7, #20]
	for (uint32_t i = 0; i < AVG_SAMPLES; ++i) {
 8001a28:	2300      	movs	r3, #0
 8001a2a:	613b      	str	r3, [r7, #16]
 8001a2c:	e01a      	b.n	8001a64 <add_sample+0x98>
		sx += buf_x[i];
 8001a2e:	4a22      	ldr	r2, [pc, #136]	@ (8001ab8 <add_sample+0xec>)
 8001a30:	693b      	ldr	r3, [r7, #16]
 8001a32:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8001a36:	461a      	mov	r2, r3
 8001a38:	69fb      	ldr	r3, [r7, #28]
 8001a3a:	4413      	add	r3, r2
 8001a3c:	61fb      	str	r3, [r7, #28]
		sy += buf_y[i];
 8001a3e:	4a1f      	ldr	r2, [pc, #124]	@ (8001abc <add_sample+0xf0>)
 8001a40:	693b      	ldr	r3, [r7, #16]
 8001a42:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8001a46:	461a      	mov	r2, r3
 8001a48:	69bb      	ldr	r3, [r7, #24]
 8001a4a:	4413      	add	r3, r2
 8001a4c:	61bb      	str	r3, [r7, #24]
		sz += buf_z[i];
 8001a4e:	4a1c      	ldr	r2, [pc, #112]	@ (8001ac0 <add_sample+0xf4>)
 8001a50:	693b      	ldr	r3, [r7, #16]
 8001a52:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8001a56:	461a      	mov	r2, r3
 8001a58:	697b      	ldr	r3, [r7, #20]
 8001a5a:	4413      	add	r3, r2
 8001a5c:	617b      	str	r3, [r7, #20]
	for (uint32_t i = 0; i < AVG_SAMPLES; ++i) {
 8001a5e:	693b      	ldr	r3, [r7, #16]
 8001a60:	3301      	adds	r3, #1
 8001a62:	613b      	str	r3, [r7, #16]
 8001a64:	693b      	ldr	r3, [r7, #16]
 8001a66:	2b07      	cmp	r3, #7
 8001a68:	d9e1      	bls.n	8001a2e <add_sample+0x62>
	}
	*x_avg = (float) (sx / (int32_t) AVG_SAMPLES);
 8001a6a:	69fb      	ldr	r3, [r7, #28]
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	da00      	bge.n	8001a72 <add_sample+0xa6>
 8001a70:	3307      	adds	r3, #7
 8001a72:	10db      	asrs	r3, r3, #3
 8001a74:	4618      	mov	r0, r3
 8001a76:	f7ff f951 	bl	8000d1c <__aeabi_i2f>
 8001a7a:	4602      	mov	r2, r0
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	601a      	str	r2, [r3, #0]
	*y_avg = (float) (sy / (int32_t) AVG_SAMPLES);
 8001a80:	69bb      	ldr	r3, [r7, #24]
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	da00      	bge.n	8001a88 <add_sample+0xbc>
 8001a86:	3307      	adds	r3, #7
 8001a88:	10db      	asrs	r3, r3, #3
 8001a8a:	4618      	mov	r0, r3
 8001a8c:	f7ff f946 	bl	8000d1c <__aeabi_i2f>
 8001a90:	4602      	mov	r2, r0
 8001a92:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001a94:	601a      	str	r2, [r3, #0]
	*z_avg = (float) (sz / (int32_t) AVG_SAMPLES);
 8001a96:	697b      	ldr	r3, [r7, #20]
 8001a98:	2b00      	cmp	r3, #0
 8001a9a:	da00      	bge.n	8001a9e <add_sample+0xd2>
 8001a9c:	3307      	adds	r3, #7
 8001a9e:	10db      	asrs	r3, r3, #3
 8001aa0:	4618      	mov	r0, r3
 8001aa2:	f7ff f93b 	bl	8000d1c <__aeabi_i2f>
 8001aa6:	4602      	mov	r2, r0
 8001aa8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001aaa:	601a      	str	r2, [r3, #0]
}
 8001aac:	bf00      	nop
 8001aae:	3720      	adds	r7, #32
 8001ab0:	46bd      	mov	sp, r7
 8001ab2:	bd80      	pop	{r7, pc}
 8001ab4:	200001f0 	.word	0x200001f0
 8001ab8:	200001f4 	.word	0x200001f4
 8001abc:	20000204 	.word	0x20000204
 8001ac0:	20000214 	.word	0x20000214

08001ac4 <Init_LEDs>:

/* ------------------------------- Initlize GPIO -------------------------------- */

static void Init_LEDs(void) {
 8001ac4:	b580      	push	{r7, lr}
 8001ac6:	b082      	sub	sp, #8
 8001ac8:	af00      	add	r7, sp, #0
	GPIO_EnableClock(GPIO_PORT_D, ENABLE);
 8001aca:	2101      	movs	r1, #1
 8001acc:	2003      	movs	r0, #3
 8001ace:	f7ff fc2b 	bl	8001328 <GPIO_EnableClock>

	GPIO_Config_t led = { 0 };
 8001ad2:	2300      	movs	r3, #0
 8001ad4:	607b      	str	r3, [r7, #4]
	led.Mode = GPIO_MODE_OUTPUT;
 8001ad6:	2301      	movs	r3, #1
 8001ad8:	713b      	strb	r3, [r7, #4]
	led.OutputType = GPIO_OTYPE_PP;
 8001ada:	2300      	movs	r3, #0
 8001adc:	717b      	strb	r3, [r7, #5]
	led.PuPd = GPIO_PULLDOWN;
 8001ade:	2302      	movs	r3, #2
 8001ae0:	71bb      	strb	r3, [r7, #6]

	GPIO_Init(LED_PORT, LED_PIN_GREEN_LX, &led);
 8001ae2:	1d3b      	adds	r3, r7, #4
 8001ae4:	461a      	mov	r2, r3
 8001ae6:	210c      	movs	r1, #12
 8001ae8:	4820      	ldr	r0, [pc, #128]	@ (8001b6c <Init_LEDs+0xa8>)
 8001aea:	f7ff fb47 	bl	800117c <GPIO_Init>
	GPIO_Init(LED_PORT, LED_PIN_RED_RX, &led);
 8001aee:	1d3b      	adds	r3, r7, #4
 8001af0:	461a      	mov	r2, r3
 8001af2:	210e      	movs	r1, #14
 8001af4:	481d      	ldr	r0, [pc, #116]	@ (8001b6c <Init_LEDs+0xa8>)
 8001af6:	f7ff fb41 	bl	800117c <GPIO_Init>
	GPIO_Init(LED_PORT, LED_PIN_ORANGE_UPY, &led);
 8001afa:	1d3b      	adds	r3, r7, #4
 8001afc:	461a      	mov	r2, r3
 8001afe:	210d      	movs	r1, #13
 8001b00:	481a      	ldr	r0, [pc, #104]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b02:	f7ff fb3b 	bl	800117c <GPIO_Init>
	GPIO_Init(LED_PORT, LED_PIN_BLUE_DOY, &led);
 8001b06:	1d3b      	adds	r3, r7, #4
 8001b08:	461a      	mov	r2, r3
 8001b0a:	210f      	movs	r1, #15
 8001b0c:	4817      	ldr	r0, [pc, #92]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b0e:	f7ff fb35 	bl	800117c <GPIO_Init>

	GPIO_OSpeed(LED_PORT, LED_PIN_GREEN_LX, GPIO_SPEED_LOW);
 8001b12:	2200      	movs	r2, #0
 8001b14:	210c      	movs	r1, #12
 8001b16:	4815      	ldr	r0, [pc, #84]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b18:	f7ff fbbc 	bl	8001294 <GPIO_OSpeed>
	GPIO_OSpeed(LED_PORT, LED_PIN_RED_RX, GPIO_SPEED_LOW);
 8001b1c:	2200      	movs	r2, #0
 8001b1e:	210e      	movs	r1, #14
 8001b20:	4812      	ldr	r0, [pc, #72]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b22:	f7ff fbb7 	bl	8001294 <GPIO_OSpeed>
	GPIO_OSpeed(LED_PORT, LED_PIN_ORANGE_UPY, GPIO_SPEED_LOW);
 8001b26:	2200      	movs	r2, #0
 8001b28:	210d      	movs	r1, #13
 8001b2a:	4810      	ldr	r0, [pc, #64]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b2c:	f7ff fbb2 	bl	8001294 <GPIO_OSpeed>
	GPIO_OSpeed(LED_PORT, LED_PIN_BLUE_DOY, GPIO_SPEED_LOW);
 8001b30:	2200      	movs	r2, #0
 8001b32:	210f      	movs	r1, #15
 8001b34:	480d      	ldr	r0, [pc, #52]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b36:	f7ff fbad 	bl	8001294 <GPIO_OSpeed>

	GPIO_WritePin(GPIOD, LED_PIN_GREEN_LX, HIGH);
 8001b3a:	2201      	movs	r2, #1
 8001b3c:	210c      	movs	r1, #12
 8001b3e:	480b      	ldr	r0, [pc, #44]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b40:	f7ff fbcc 	bl	80012dc <GPIO_WritePin>
	GPIO_WritePin(GPIOD, LED_PIN_RED_RX, LOW);
 8001b44:	2200      	movs	r2, #0
 8001b46:	210e      	movs	r1, #14
 8001b48:	4808      	ldr	r0, [pc, #32]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b4a:	f7ff fbc7 	bl	80012dc <GPIO_WritePin>
	GPIO_WritePin(GPIOD, LED_PIN_ORANGE_UPY, LOW);
 8001b4e:	2200      	movs	r2, #0
 8001b50:	210d      	movs	r1, #13
 8001b52:	4806      	ldr	r0, [pc, #24]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b54:	f7ff fbc2 	bl	80012dc <GPIO_WritePin>
	GPIO_WritePin(GPIOD, LED_PIN_BLUE_DOY, LOW);
 8001b58:	2200      	movs	r2, #0
 8001b5a:	210f      	movs	r1, #15
 8001b5c:	4803      	ldr	r0, [pc, #12]	@ (8001b6c <Init_LEDs+0xa8>)
 8001b5e:	f7ff fbbd 	bl	80012dc <GPIO_WritePin>
}
 8001b62:	bf00      	nop
 8001b64:	3708      	adds	r7, #8
 8001b66:	46bd      	mov	sp, r7
 8001b68:	bd80      	pop	{r7, pc}
 8001b6a:	bf00      	nop
 8001b6c:	40020c00 	.word	0x40020c00

08001b70 <lpf_alpha>:

/* ------------------------------- LPF (1st) -------------------------------- */

static inline float lpf_alpha(float fc_hz, float fs_hz) {
 8001b70:	b580      	push	{r7, lr}
 8001b72:	b084      	sub	sp, #16
 8001b74:	af00      	add	r7, sp, #0
 8001b76:	6078      	str	r0, [r7, #4]
 8001b78:	6039      	str	r1, [r7, #0]
	const float two_pi_fc = 6.28318530718f * fc_hz;
 8001b7a:	490a      	ldr	r1, [pc, #40]	@ (8001ba4 <lpf_alpha+0x34>)
 8001b7c:	6878      	ldr	r0, [r7, #4]
 8001b7e:	f7ff f921 	bl	8000dc4 <__aeabi_fmul>
 8001b82:	4603      	mov	r3, r0
 8001b84:	60fb      	str	r3, [r7, #12]
	return (two_pi_fc) / (two_pi_fc + fs_hz);
 8001b86:	6839      	ldr	r1, [r7, #0]
 8001b88:	68f8      	ldr	r0, [r7, #12]
 8001b8a:	f7ff f813 	bl	8000bb4 <__addsf3>
 8001b8e:	4603      	mov	r3, r0
 8001b90:	4619      	mov	r1, r3
 8001b92:	68f8      	ldr	r0, [r7, #12]
 8001b94:	f7ff f9ca 	bl	8000f2c <__aeabi_fdiv>
 8001b98:	4603      	mov	r3, r0
}
 8001b9a:	4618      	mov	r0, r3
 8001b9c:	3710      	adds	r7, #16
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	bd80      	pop	{r7, pc}
 8001ba2:	bf00      	nop
 8001ba4:	40c90fdb 	.word	0x40c90fdb

08001ba8 <lpf_init>:

static inline void lpf_init(LPF1_t *f, float fc_hz, float fs_hz) {
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b084      	sub	sp, #16
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	60f8      	str	r0, [r7, #12]
 8001bb0:	60b9      	str	r1, [r7, #8]
 8001bb2:	607a      	str	r2, [r7, #4]
	f->a = lpf_alpha(fc_hz, fs_hz);
 8001bb4:	6879      	ldr	r1, [r7, #4]
 8001bb6:	68b8      	ldr	r0, [r7, #8]
 8001bb8:	f7ff ffda 	bl	8001b70 <lpf_alpha>
 8001bbc:	4602      	mov	r2, r0
 8001bbe:	68fb      	ldr	r3, [r7, #12]
 8001bc0:	601a      	str	r2, [r3, #0]
	f->y = 0.0f;
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	f04f 0200 	mov.w	r2, #0
 8001bc8:	605a      	str	r2, [r3, #4]
}
 8001bca:	bf00      	nop
 8001bcc:	3710      	adds	r7, #16
 8001bce:	46bd      	mov	sp, r7
 8001bd0:	bd80      	pop	{r7, pc}

08001bd2 <lpf_update>:

static inline float lpf_update(LPF1_t *f, float x) {
 8001bd2:	b5b0      	push	{r4, r5, r7, lr}
 8001bd4:	b082      	sub	sp, #8
 8001bd6:	af00      	add	r7, sp, #0
 8001bd8:	6078      	str	r0, [r7, #4]
 8001bda:	6039      	str	r1, [r7, #0]
	f->y += f->a * (x - f->y);
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	685c      	ldr	r4, [r3, #4]
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	681d      	ldr	r5, [r3, #0]
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	685b      	ldr	r3, [r3, #4]
 8001be8:	4619      	mov	r1, r3
 8001bea:	6838      	ldr	r0, [r7, #0]
 8001bec:	f7fe ffe0 	bl	8000bb0 <__aeabi_fsub>
 8001bf0:	4603      	mov	r3, r0
 8001bf2:	4619      	mov	r1, r3
 8001bf4:	4628      	mov	r0, r5
 8001bf6:	f7ff f8e5 	bl	8000dc4 <__aeabi_fmul>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	4619      	mov	r1, r3
 8001bfe:	4620      	mov	r0, r4
 8001c00:	f7fe ffd8 	bl	8000bb4 <__addsf3>
 8001c04:	4603      	mov	r3, r0
 8001c06:	461a      	mov	r2, r3
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	605a      	str	r2, [r3, #4]
	return f->y;
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	685b      	ldr	r3, [r3, #4]
}
 8001c10:	4618      	mov	r0, r3
 8001c12:	3708      	adds	r7, #8
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bdb0      	pop	{r4, r5, r7, pc}

08001c18 <Init_SPI1_GPIO_CS>:

/* ------------------------------ GPIO & SPI -------------------------------- */

static void Init_SPI1_GPIO_CS(void) {
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
	/* SPI pins */
	GPIO_EnableClock(GPIO_PORT_A, ENABLE);
 8001c1e:	2101      	movs	r1, #1
 8001c20:	2000      	movs	r0, #0
 8001c22:	f7ff fb81 	bl	8001328 <GPIO_EnableClock>
	GPIO_Config_t af = { 0 };
 8001c26:	2300      	movs	r3, #0
 8001c28:	607b      	str	r3, [r7, #4]
	af.Mode = GPIO_MODE_ALT;
 8001c2a:	2302      	movs	r3, #2
 8001c2c:	713b      	strb	r3, [r7, #4]
	af.OutputType = GPIO_OTYPE_PP;
 8001c2e:	2300      	movs	r3, #0
 8001c30:	717b      	strb	r3, [r7, #5]
	af.PuPd = GPIO_NOPULL;
 8001c32:	2300      	movs	r3, #0
 8001c34:	71bb      	strb	r3, [r7, #6]
	af.AltFunction = 5; /* AF5 = SPI1 */
 8001c36:	2305      	movs	r3, #5
 8001c38:	71fb      	strb	r3, [r7, #7]

	GPIO_OSpeed(GPIOA, 5U, GPIO_SPEED_HIGH);
 8001c3a:	2203      	movs	r2, #3
 8001c3c:	2105      	movs	r1, #5
 8001c3e:	4820      	ldr	r0, [pc, #128]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c40:	f7ff fb28 	bl	8001294 <GPIO_OSpeed>
	GPIO_OSpeed(GPIOA, 6U, GPIO_SPEED_HIGH);
 8001c44:	2203      	movs	r2, #3
 8001c46:	2106      	movs	r1, #6
 8001c48:	481d      	ldr	r0, [pc, #116]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c4a:	f7ff fb23 	bl	8001294 <GPIO_OSpeed>
	GPIO_OSpeed(GPIOA, 7U, GPIO_SPEED_HIGH);
 8001c4e:	2203      	movs	r2, #3
 8001c50:	2107      	movs	r1, #7
 8001c52:	481b      	ldr	r0, [pc, #108]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c54:	f7ff fb1e 	bl	8001294 <GPIO_OSpeed>
	GPIO_Init(GPIOA, 7U, &af); /* MOSI */
 8001c58:	1d3b      	adds	r3, r7, #4
 8001c5a:	461a      	mov	r2, r3
 8001c5c:	2107      	movs	r1, #7
 8001c5e:	4818      	ldr	r0, [pc, #96]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c60:	f7ff fa8c 	bl	800117c <GPIO_Init>
	GPIO_Init(GPIOA, 6U, &af); /* MISO */
 8001c64:	1d3b      	adds	r3, r7, #4
 8001c66:	461a      	mov	r2, r3
 8001c68:	2106      	movs	r1, #6
 8001c6a:	4815      	ldr	r0, [pc, #84]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c6c:	f7ff fa86 	bl	800117c <GPIO_Init>
	af.PuPd = GPIO_PULLDOWN; /* define SCK idle on pad if desired */
 8001c70:	2302      	movs	r3, #2
 8001c72:	71bb      	strb	r3, [r7, #6]
	GPIO_Init(GPIOA, 5U, &af); /* SCK  */
 8001c74:	1d3b      	adds	r3, r7, #4
 8001c76:	461a      	mov	r2, r3
 8001c78:	2105      	movs	r1, #5
 8001c7a:	4811      	ldr	r0, [pc, #68]	@ (8001cc0 <Init_SPI1_GPIO_CS+0xa8>)
 8001c7c:	f7ff fa7e 	bl	800117c <GPIO_Init>

	/* CS pin */
	GPIO_EnableClock(GPIO_PORT_E, ENABLE);
 8001c80:	2101      	movs	r1, #1
 8001c82:	2004      	movs	r0, #4
 8001c84:	f7ff fb50 	bl	8001328 <GPIO_EnableClock>
	GPIO_Config_t cs = { 0 };
 8001c88:	2300      	movs	r3, #0
 8001c8a:	603b      	str	r3, [r7, #0]
	cs.Mode = GPIO_MODE_OUTPUT;
 8001c8c:	2301      	movs	r3, #1
 8001c8e:	703b      	strb	r3, [r7, #0]
	cs.OutputType = GPIO_OTYPE_PP;
 8001c90:	2300      	movs	r3, #0
 8001c92:	707b      	strb	r3, [r7, #1]
	cs.PuPd = GPIO_PULLUP;
 8001c94:	2301      	movs	r3, #1
 8001c96:	70bb      	strb	r3, [r7, #2]
	GPIO_OSpeed(GPIOE, 3U, GPIO_SPEED_HIGH);
 8001c98:	2203      	movs	r2, #3
 8001c9a:	2103      	movs	r1, #3
 8001c9c:	4809      	ldr	r0, [pc, #36]	@ (8001cc4 <Init_SPI1_GPIO_CS+0xac>)
 8001c9e:	f7ff faf9 	bl	8001294 <GPIO_OSpeed>
	GPIO_Init(GPIOE, SPI1_CS_PIN, &cs);
 8001ca2:	463b      	mov	r3, r7
 8001ca4:	461a      	mov	r2, r3
 8001ca6:	2103      	movs	r1, #3
 8001ca8:	4806      	ldr	r0, [pc, #24]	@ (8001cc4 <Init_SPI1_GPIO_CS+0xac>)
 8001caa:	f7ff fa67 	bl	800117c <GPIO_Init>
	CS_HIGH();
 8001cae:	2201      	movs	r2, #1
 8001cb0:	2103      	movs	r1, #3
 8001cb2:	4804      	ldr	r0, [pc, #16]	@ (8001cc4 <Init_SPI1_GPIO_CS+0xac>)
 8001cb4:	f7ff fb12 	bl	80012dc <GPIO_WritePin>
}
 8001cb8:	bf00      	nop
 8001cba:	3708      	adds	r7, #8
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bd80      	pop	{r7, pc}
 8001cc0:	40020000 	.word	0x40020000
 8001cc4:	40021000 	.word	0x40021000

08001cc8 <Config_SPI1_TXRX>:

static void Config_SPI1_TXRX(void) {
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	af00      	add	r7, sp, #0
	hspi1.SPIx = SPI1;
 8001ccc:	4b15      	ldr	r3, [pc, #84]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cce:	4a16      	ldr	r2, [pc, #88]	@ (8001d28 <Config_SPI1_TXRX+0x60>)
 8001cd0:	601a      	str	r2, [r3, #0]
	hspi1.config.deviceMode = SPI_MODE_MASTER;
 8001cd2:	4b14      	ldr	r3, [pc, #80]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cd4:	2201      	movs	r2, #1
 8001cd6:	711a      	strb	r2, [r3, #4]
	hspi1.config.busConfig = SPI_BUS_FULL_DUPLEX;
 8001cd8:	4b12      	ldr	r3, [pc, #72]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cda:	2200      	movs	r2, #0
 8001cdc:	715a      	strb	r2, [r3, #5]
	hspi1.config.dff = SPI_DFF_8BITS;
 8001cde:	4b11      	ldr	r3, [pc, #68]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	719a      	strb	r2, [r3, #6]

	/* Mode 0 by default; switch to Mode 3 if needed */
	hspi1.config.cpol = SPI_CPOL_LOW;
 8001ce4:	4b0f      	ldr	r3, [pc, #60]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	71da      	strb	r2, [r3, #7]
	hspi1.config.cpha = SPI_CPHA_FIRST;
 8001cea:	4b0e      	ldr	r3, [pc, #56]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cec:	2200      	movs	r2, #0
 8001cee:	721a      	strb	r2, [r3, #8]

	hspi1.config.ssm = SPI_SSM_ENABLE; /* software NSS */
 8001cf0:	4b0c      	ldr	r3, [pc, #48]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cf2:	2201      	movs	r2, #1
 8001cf4:	725a      	strb	r2, [r3, #9]
	hspi1.config.clkSpeed = 7; /* BR=/256 */
 8001cf6:	4b0b      	ldr	r3, [pc, #44]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001cf8:	2207      	movs	r2, #7
 8001cfa:	729a      	strb	r2, [r3, #10]

	RCC->APB2ENR |= (1U << 12); /* SPI1 clock */
 8001cfc:	4b0b      	ldr	r3, [pc, #44]	@ (8001d2c <Config_SPI1_TXRX+0x64>)
 8001cfe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001d00:	4a0a      	ldr	r2, [pc, #40]	@ (8001d2c <Config_SPI1_TXRX+0x64>)
 8001d02:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001d06:	6453      	str	r3, [r2, #68]	@ 0x44
	SPI_Init(&hspi1);
 8001d08:	4806      	ldr	r0, [pc, #24]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001d0a:	f7ff fb37 	bl	800137c <SPI_Init>

	/* When SSM=1, set SSI=1 so NSS is seen high internally. */
	hspi1.SPIx->CR1 |= (1U << 8);
 8001d0e:	4b05      	ldr	r3, [pc, #20]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	681a      	ldr	r2, [r3, #0]
 8001d14:	4b03      	ldr	r3, [pc, #12]	@ (8001d24 <Config_SPI1_TXRX+0x5c>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001d1c:	601a      	str	r2, [r3, #0]
}
 8001d1e:	bf00      	nop
 8001d20:	bd80      	pop	{r7, pc}
 8001d22:	bf00      	nop
 8001d24:	200001e4 	.word	0x200001e4
 8001d28:	40013000 	.word	0x40013000
 8001d2c:	40023800 	.word	0x40023800

08001d30 <lis_read_u8>:

/* ------------------------------ LIS3DSH SPI ------------------------------- */

static uint8_t lis_read_u8(uint8_t reg) {
 8001d30:	b580      	push	{r7, lr}
 8001d32:	b084      	sub	sp, #16
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	4603      	mov	r3, r0
 8001d38:	71fb      	strb	r3, [r7, #7]
	uint8_t tx = (uint8_t) (0x80U | (reg & 0x7FU));
 8001d3a:	79fb      	ldrb	r3, [r7, #7]
 8001d3c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001d40:	b2db      	uxtb	r3, r3
 8001d42:	73fb      	strb	r3, [r7, #15]
	uint8_t rx = 0, dummy = 0x00;
 8001d44:	2300      	movs	r3, #0
 8001d46:	73bb      	strb	r3, [r7, #14]
 8001d48:	2300      	movs	r3, #0
 8001d4a:	737b      	strb	r3, [r7, #13]

	CS_LOW();
 8001d4c:	2200      	movs	r2, #0
 8001d4e:	2103      	movs	r1, #3
 8001d50:	480e      	ldr	r0, [pc, #56]	@ (8001d8c <lis_read_u8+0x5c>)
 8001d52:	f7ff fac3 	bl	80012dc <GPIO_WritePin>
	(void) SPI_TransmitReceive(&hspi1, &tx, &rx, 1);
 8001d56:	f107 020e 	add.w	r2, r7, #14
 8001d5a:	f107 010f 	add.w	r1, r7, #15
 8001d5e:	2301      	movs	r3, #1
 8001d60:	480b      	ldr	r0, [pc, #44]	@ (8001d90 <lis_read_u8+0x60>)
 8001d62:	f7ff fb83 	bl	800146c <SPI_TransmitReceive>
	(void) SPI_TransmitReceive(&hspi1, &dummy, &rx, 1);
 8001d66:	f107 020e 	add.w	r2, r7, #14
 8001d6a:	f107 010d 	add.w	r1, r7, #13
 8001d6e:	2301      	movs	r3, #1
 8001d70:	4807      	ldr	r0, [pc, #28]	@ (8001d90 <lis_read_u8+0x60>)
 8001d72:	f7ff fb7b 	bl	800146c <SPI_TransmitReceive>
	CS_HIGH();
 8001d76:	2201      	movs	r2, #1
 8001d78:	2103      	movs	r1, #3
 8001d7a:	4804      	ldr	r0, [pc, #16]	@ (8001d8c <lis_read_u8+0x5c>)
 8001d7c:	f7ff faae 	bl	80012dc <GPIO_WritePin>
	return rx;
 8001d80:	7bbb      	ldrb	r3, [r7, #14]
}
 8001d82:	4618      	mov	r0, r3
 8001d84:	3710      	adds	r7, #16
 8001d86:	46bd      	mov	sp, r7
 8001d88:	bd80      	pop	{r7, pc}
 8001d8a:	bf00      	nop
 8001d8c:	40021000 	.word	0x40021000
 8001d90:	200001e4 	.word	0x200001e4

08001d94 <lis_write_u8>:

static void lis_write_u8(uint8_t reg, uint8_t val) {
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b084      	sub	sp, #16
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	4603      	mov	r3, r0
 8001d9c:	460a      	mov	r2, r1
 8001d9e:	71fb      	strb	r3, [r7, #7]
 8001da0:	4613      	mov	r3, r2
 8001da2:	71bb      	strb	r3, [r7, #6]
	uint8_t tx = reg & 0x7FU;
 8001da4:	79fb      	ldrb	r3, [r7, #7]
 8001da6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001daa:	b2db      	uxtb	r3, r3
 8001dac:	73fb      	strb	r3, [r7, #15]
	uint8_t rx = 0;
 8001dae:	2300      	movs	r3, #0
 8001db0:	73bb      	strb	r3, [r7, #14]

	CS_LOW();
 8001db2:	2200      	movs	r2, #0
 8001db4:	2103      	movs	r1, #3
 8001db6:	480d      	ldr	r0, [pc, #52]	@ (8001dec <lis_write_u8+0x58>)
 8001db8:	f7ff fa90 	bl	80012dc <GPIO_WritePin>
	(void) SPI_TransmitReceive(&hspi1, &tx, &rx, 1);
 8001dbc:	f107 020e 	add.w	r2, r7, #14
 8001dc0:	f107 010f 	add.w	r1, r7, #15
 8001dc4:	2301      	movs	r3, #1
 8001dc6:	480a      	ldr	r0, [pc, #40]	@ (8001df0 <lis_write_u8+0x5c>)
 8001dc8:	f7ff fb50 	bl	800146c <SPI_TransmitReceive>
	(void) SPI_TransmitReceive(&hspi1, &val, &rx, 1);
 8001dcc:	f107 020e 	add.w	r2, r7, #14
 8001dd0:	1db9      	adds	r1, r7, #6
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	4806      	ldr	r0, [pc, #24]	@ (8001df0 <lis_write_u8+0x5c>)
 8001dd6:	f7ff fb49 	bl	800146c <SPI_TransmitReceive>
	CS_HIGH();
 8001dda:	2201      	movs	r2, #1
 8001ddc:	2103      	movs	r1, #3
 8001dde:	4803      	ldr	r0, [pc, #12]	@ (8001dec <lis_write_u8+0x58>)
 8001de0:	f7ff fa7c 	bl	80012dc <GPIO_WritePin>
}
 8001de4:	bf00      	nop
 8001de6:	3710      	adds	r7, #16
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd80      	pop	{r7, pc}
 8001dec:	40021000 	.word	0x40021000
 8001df0:	200001e4 	.word	0x200001e4

08001df4 <lis_read_multi>:

static void lis_read_multi(uint8_t start_reg, uint8_t *buf, uint8_t len) {
 8001df4:	b580      	push	{r7, lr}
 8001df6:	b084      	sub	sp, #16
 8001df8:	af00      	add	r7, sp, #0
 8001dfa:	4603      	mov	r3, r0
 8001dfc:	6039      	str	r1, [r7, #0]
 8001dfe:	71fb      	strb	r3, [r7, #7]
 8001e00:	4613      	mov	r3, r2
 8001e02:	71bb      	strb	r3, [r7, #6]
	uint8_t tx = (uint8_t) (0x80U | (start_reg & 0x7FU));
 8001e04:	79fb      	ldrb	r3, [r7, #7]
 8001e06:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001e0a:	b2db      	uxtb	r3, r3
 8001e0c:	73bb      	strb	r3, [r7, #14]
	uint8_t rx = 0, dummy = 0x00;
 8001e0e:	2300      	movs	r3, #0
 8001e10:	737b      	strb	r3, [r7, #13]
 8001e12:	2300      	movs	r3, #0
 8001e14:	733b      	strb	r3, [r7, #12]

	CS_LOW();
 8001e16:	2200      	movs	r2, #0
 8001e18:	2103      	movs	r1, #3
 8001e1a:	4813      	ldr	r0, [pc, #76]	@ (8001e68 <lis_read_multi+0x74>)
 8001e1c:	f7ff fa5e 	bl	80012dc <GPIO_WritePin>
	(void) SPI_TransmitReceive(&hspi1, &tx, &rx, 1);
 8001e20:	f107 020d 	add.w	r2, r7, #13
 8001e24:	f107 010e 	add.w	r1, r7, #14
 8001e28:	2301      	movs	r3, #1
 8001e2a:	4810      	ldr	r0, [pc, #64]	@ (8001e6c <lis_read_multi+0x78>)
 8001e2c:	f7ff fb1e 	bl	800146c <SPI_TransmitReceive>
	for (uint8_t i = 0; i < len; ++i) {
 8001e30:	2300      	movs	r3, #0
 8001e32:	73fb      	strb	r3, [r7, #15]
 8001e34:	e00b      	b.n	8001e4e <lis_read_multi+0x5a>
		(void) SPI_TransmitReceive(&hspi1, &dummy, &buf[i], 1);
 8001e36:	7bfb      	ldrb	r3, [r7, #15]
 8001e38:	683a      	ldr	r2, [r7, #0]
 8001e3a:	441a      	add	r2, r3
 8001e3c:	f107 010c 	add.w	r1, r7, #12
 8001e40:	2301      	movs	r3, #1
 8001e42:	480a      	ldr	r0, [pc, #40]	@ (8001e6c <lis_read_multi+0x78>)
 8001e44:	f7ff fb12 	bl	800146c <SPI_TransmitReceive>
	for (uint8_t i = 0; i < len; ++i) {
 8001e48:	7bfb      	ldrb	r3, [r7, #15]
 8001e4a:	3301      	adds	r3, #1
 8001e4c:	73fb      	strb	r3, [r7, #15]
 8001e4e:	7bfa      	ldrb	r2, [r7, #15]
 8001e50:	79bb      	ldrb	r3, [r7, #6]
 8001e52:	429a      	cmp	r2, r3
 8001e54:	d3ef      	bcc.n	8001e36 <lis_read_multi+0x42>
	}
	CS_HIGH();
 8001e56:	2201      	movs	r2, #1
 8001e58:	2103      	movs	r1, #3
 8001e5a:	4803      	ldr	r0, [pc, #12]	@ (8001e68 <lis_read_multi+0x74>)
 8001e5c:	f7ff fa3e 	bl	80012dc <GPIO_WritePin>
}
 8001e60:	bf00      	nop
 8001e62:	3710      	adds	r7, #16
 8001e64:	46bd      	mov	sp, r7
 8001e66:	bd80      	pop	{r7, pc}
 8001e68:	40021000 	.word	0x40021000
 8001e6c:	200001e4 	.word	0x200001e4

08001e70 <lis_init>:

static int lis_init(void) {
 8001e70:	b580      	push	{r7, lr}
 8001e72:	b082      	sub	sp, #8
 8001e74:	af00      	add	r7, sp, #0
	uint8_t who = lis_read_u8(LIS_REG_WHO_AM_I);
 8001e76:	200f      	movs	r0, #15
 8001e78:	f7ff ff5a 	bl	8001d30 <lis_read_u8>
 8001e7c:	4603      	mov	r3, r0
 8001e7e:	71fb      	strb	r3, [r7, #7]
	if (who != 0x3FU) {
 8001e80:	79fb      	ldrb	r3, [r7, #7]
 8001e82:	2b3f      	cmp	r3, #63	@ 0x3f
 8001e84:	d007      	beq.n	8001e96 <lis_init+0x26>
		printf("ERR: WHO_AM_I=0x%02X (expect 0x3F)\r\n", (unsigned) who);
 8001e86:	79fb      	ldrb	r3, [r7, #7]
 8001e88:	4619      	mov	r1, r3
 8001e8a:	480b      	ldr	r0, [pc, #44]	@ (8001eb8 <lis_init+0x48>)
 8001e8c:	f000 fe7e 	bl	8002b8c <iprintf>
		return -1;
 8001e90:	f04f 33ff 	mov.w	r3, #4294967295
 8001e94:	e00b      	b.n	8001eae <lis_init+0x3e>
	}

	/* CTRL4: ODR=100 Hz, BDU=1, XYZ=1 */
	lis_write_u8(LIS_REG_CTRL4, LIS_CTRL4_100HZ_BDU_XYZ);
 8001e96:	216f      	movs	r1, #111	@ 0x6f
 8001e98:	2020      	movs	r0, #32
 8001e9a:	f7ff ff7b 	bl	8001d94 <lis_write_u8>

	/* CTRL5 (24h): BW2:BW1 = 11 -> 50 Hz AA filter, FSCALE = ±2g, 4-wire SPI
	 * Bits: [BW2 BW1 FS2 FS1 FS0 ST2 ST1 SIM] = [1 1 0 0 0 0 0 0] = 0xC0
	 */
	lis_write_u8(LIS_REG_CTRL5, 0xC0); /* AA BW = 50 Hz, FS=±2g */
 8001e9e:	21c0      	movs	r1, #192	@ 0xc0
 8001ea0:	2024      	movs	r0, #36	@ 0x24
 8001ea2:	f7ff ff77 	bl	8001d94 <lis_write_u8>

	delay_cycles(100000);
 8001ea6:	4805      	ldr	r0, [pc, #20]	@ (8001ebc <lis_init+0x4c>)
 8001ea8:	f000 f834 	bl	8001f14 <delay_cycles>
	return 0;
 8001eac:	2300      	movs	r3, #0
}
 8001eae:	4618      	mov	r0, r3
 8001eb0:	3708      	adds	r7, #8
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	bd80      	pop	{r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	08005088 	.word	0x08005088
 8001ebc:	000186a0 	.word	0x000186a0

08001ec0 <lis_status_data_ready>:

static uint8_t lis_status_data_ready(void) {
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b082      	sub	sp, #8
 8001ec4:	af00      	add	r7, sp, #0
	uint8_t s = lis_read_u8(LIS_REG_STATUS);
 8001ec6:	2027      	movs	r0, #39	@ 0x27
 8001ec8:	f7ff ff32 	bl	8001d30 <lis_read_u8>
 8001ecc:	4603      	mov	r3, r0
 8001ece:	71fb      	strb	r3, [r7, #7]
	return (uint8_t) ((s & LIS_STATUS_ZYXDA_Msk) ? 1U : 0U);
 8001ed0:	79fb      	ldrb	r3, [r7, #7]
 8001ed2:	08db      	lsrs	r3, r3, #3
 8001ed4:	b2db      	uxtb	r3, r3
 8001ed6:	f003 0301 	and.w	r3, r3, #1
 8001eda:	b2db      	uxtb	r3, r3
}
 8001edc:	4618      	mov	r0, r3
 8001ede:	3708      	adds	r7, #8
 8001ee0:	46bd      	mov	sp, r7
 8001ee2:	bd80      	pop	{r7, pc}

08001ee4 <lis_read_axis_16>:

static int16_t lis_read_axis_16(uint8_t low_addr) {
 8001ee4:	b580      	push	{r7, lr}
 8001ee6:	b084      	sub	sp, #16
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	4603      	mov	r3, r0
 8001eec:	71fb      	strb	r3, [r7, #7]
	uint8_t buf[2];
	lis_read_multi(low_addr, buf, 2);
 8001eee:	f107 010c 	add.w	r1, r7, #12
 8001ef2:	79fb      	ldrb	r3, [r7, #7]
 8001ef4:	2202      	movs	r2, #2
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f7ff ff7c 	bl	8001df4 <lis_read_multi>
	return (int16_t) ((((uint16_t) buf[1]) << 8) | buf[0]);
 8001efc:	7b7b      	ldrb	r3, [r7, #13]
 8001efe:	b21b      	sxth	r3, r3
 8001f00:	021b      	lsls	r3, r3, #8
 8001f02:	b21a      	sxth	r2, r3
 8001f04:	7b3b      	ldrb	r3, [r7, #12]
 8001f06:	b21b      	sxth	r3, r3
 8001f08:	4313      	orrs	r3, r2
 8001f0a:	b21b      	sxth	r3, r3
}
 8001f0c:	4618      	mov	r0, r3
 8001f0e:	3710      	adds	r7, #16
 8001f10:	46bd      	mov	sp, r7
 8001f12:	bd80      	pop	{r7, pc}

08001f14 <delay_cycles>:

/* ------------------------------- Utilities -------------------------------- */

static void delay_cycles(volatile uint32_t n) {
 8001f14:	b480      	push	{r7}
 8001f16:	b083      	sub	sp, #12
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	6078      	str	r0, [r7, #4]
	while (n--) {
 8001f1c:	e000      	b.n	8001f20 <delay_cycles+0xc>
		__asm__("nop");
 8001f1e:	bf00      	nop
	while (n--) {
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	1e5a      	subs	r2, r3, #1
 8001f24:	607a      	str	r2, [r7, #4]
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d1f9      	bne.n	8001f1e <delay_cycles+0xa>
	}
}
 8001f2a:	bf00      	nop
 8001f2c:	bf00      	nop
 8001f2e:	370c      	adds	r7, #12
 8001f30:	46bd      	mov	sp, r7
 8001f32:	bc80      	pop	{r7}
 8001f34:	4770      	bx	lr
	...

08001f38 <ITM_SendChar>:

/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch) {
 8001f38:	b480      	push	{r7}
 8001f3a:	b083      	sub	sp, #12
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	4603      	mov	r3, r0
 8001f40:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= (1 << 24);
 8001f42:	4b0e      	ldr	r3, [pc, #56]	@ (8001f7c <ITM_SendChar+0x44>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	4a0d      	ldr	r2, [pc, #52]	@ (8001f7c <ITM_SendChar+0x44>)
 8001f48:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001f4c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= (1 << 0);
 8001f4e:	4b0c      	ldr	r3, [pc, #48]	@ (8001f80 <ITM_SendChar+0x48>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	4a0b      	ldr	r2, [pc, #44]	@ (8001f80 <ITM_SendChar+0x48>)
 8001f54:	f043 0301 	orr.w	r3, r3, #1
 8001f58:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while (!(ITM_STIMULUS_PORT0 & 1))
 8001f5a:	bf00      	nop
 8001f5c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	f003 0301 	and.w	r3, r3, #1
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d0f8      	beq.n	8001f5c <ITM_SendChar+0x24>
		;

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8001f6a:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8001f6e:	79fb      	ldrb	r3, [r7, #7]
 8001f70:	6013      	str	r3, [r2, #0]
}
 8001f72:	bf00      	nop
 8001f74:	370c      	adds	r7, #12
 8001f76:	46bd      	mov	sp, r7
 8001f78:	bc80      	pop	{r7}
 8001f7a:	4770      	bx	lr
 8001f7c:	e000edfc 	.word	0xe000edfc
 8001f80:	e0000e00 	.word	0xe0000e00

08001f84 <_getpid>:

/* Functions */
void initialise_monitor_handles() {
}

int _getpid(void) {
 8001f84:	b480      	push	{r7}
 8001f86:	af00      	add	r7, sp, #0
	return 1;
 8001f88:	2301      	movs	r3, #1
}
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	46bd      	mov	sp, r7
 8001f8e:	bc80      	pop	{r7}
 8001f90:	4770      	bx	lr

08001f92 <_kill>:

int _kill(int pid, int sig) {
 8001f92:	b580      	push	{r7, lr}
 8001f94:	b082      	sub	sp, #8
 8001f96:	af00      	add	r7, sp, #0
 8001f98:	6078      	str	r0, [r7, #4]
 8001f9a:	6039      	str	r1, [r7, #0]
	(void) pid;
	(void) sig;
	errno = EINVAL;
 8001f9c:	f000 ff90 	bl	8002ec0 <__errno>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	2216      	movs	r2, #22
 8001fa4:	601a      	str	r2, [r3, #0]
	return -1;
 8001fa6:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001faa:	4618      	mov	r0, r3
 8001fac:	3708      	adds	r7, #8
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	bd80      	pop	{r7, pc}

08001fb2 <_exit>:

void _exit(int status) {
 8001fb2:	b580      	push	{r7, lr}
 8001fb4:	b082      	sub	sp, #8
 8001fb6:	af00      	add	r7, sp, #0
 8001fb8:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001fba:	f04f 31ff 	mov.w	r1, #4294967295
 8001fbe:	6878      	ldr	r0, [r7, #4]
 8001fc0:	f7ff ffe7 	bl	8001f92 <_kill>
	while (1) {
 8001fc4:	bf00      	nop
 8001fc6:	e7fd      	b.n	8001fc4 <_exit+0x12>

08001fc8 <_read>:
	} /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len) {
 8001fc8:	b580      	push	{r7, lr}
 8001fca:	b086      	sub	sp, #24
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	60f8      	str	r0, [r7, #12]
 8001fd0:	60b9      	str	r1, [r7, #8]
 8001fd2:	607a      	str	r2, [r7, #4]
	(void) file;
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8001fd4:	2300      	movs	r3, #0
 8001fd6:	617b      	str	r3, [r7, #20]
 8001fd8:	e00a      	b.n	8001ff0 <_read+0x28>
		*ptr++ = __io_getchar();
 8001fda:	f3af 8000 	nop.w
 8001fde:	4601      	mov	r1, r0
 8001fe0:	68bb      	ldr	r3, [r7, #8]
 8001fe2:	1c5a      	adds	r2, r3, #1
 8001fe4:	60ba      	str	r2, [r7, #8]
 8001fe6:	b2ca      	uxtb	r2, r1
 8001fe8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8001fea:	697b      	ldr	r3, [r7, #20]
 8001fec:	3301      	adds	r3, #1
 8001fee:	617b      	str	r3, [r7, #20]
 8001ff0:	697a      	ldr	r2, [r7, #20]
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	429a      	cmp	r2, r3
 8001ff6:	dbf0      	blt.n	8001fda <_read+0x12>
	}

	return len;
 8001ff8:	687b      	ldr	r3, [r7, #4]
}
 8001ffa:	4618      	mov	r0, r3
 8001ffc:	3718      	adds	r7, #24
 8001ffe:	46bd      	mov	sp, r7
 8002000:	bd80      	pop	{r7, pc}

08002002 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len) {
 8002002:	b580      	push	{r7, lr}
 8002004:	b086      	sub	sp, #24
 8002006:	af00      	add	r7, sp, #0
 8002008:	60f8      	str	r0, [r7, #12]
 800200a:	60b9      	str	r1, [r7, #8]
 800200c:	607a      	str	r2, [r7, #4]
	(void) file;
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++) {
 800200e:	2300      	movs	r3, #0
 8002010:	617b      	str	r3, [r7, #20]
 8002012:	e009      	b.n	8002028 <_write+0x26>
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8002014:	68bb      	ldr	r3, [r7, #8]
 8002016:	1c5a      	adds	r2, r3, #1
 8002018:	60ba      	str	r2, [r7, #8]
 800201a:	781b      	ldrb	r3, [r3, #0]
 800201c:	4618      	mov	r0, r3
 800201e:	f7ff ff8b 	bl	8001f38 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++) {
 8002022:	697b      	ldr	r3, [r7, #20]
 8002024:	3301      	adds	r3, #1
 8002026:	617b      	str	r3, [r7, #20]
 8002028:	697a      	ldr	r2, [r7, #20]
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	429a      	cmp	r2, r3
 800202e:	dbf1      	blt.n	8002014 <_write+0x12>
	}
	return len;
 8002030:	687b      	ldr	r3, [r7, #4]
}
 8002032:	4618      	mov	r0, r3
 8002034:	3718      	adds	r7, #24
 8002036:	46bd      	mov	sp, r7
 8002038:	bd80      	pop	{r7, pc}

0800203a <_close>:

int _close(int file) {
 800203a:	b480      	push	{r7}
 800203c:	b083      	sub	sp, #12
 800203e:	af00      	add	r7, sp, #0
 8002040:	6078      	str	r0, [r7, #4]
	(void) file;
	return -1;
 8002042:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002046:	4618      	mov	r0, r3
 8002048:	370c      	adds	r7, #12
 800204a:	46bd      	mov	sp, r7
 800204c:	bc80      	pop	{r7}
 800204e:	4770      	bx	lr

08002050 <_fstat>:

int _fstat(int file, struct stat *st) {
 8002050:	b480      	push	{r7}
 8002052:	b083      	sub	sp, #12
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	6039      	str	r1, [r7, #0]
	(void) file;
	st->st_mode = S_IFCHR;
 800205a:	683b      	ldr	r3, [r7, #0]
 800205c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002060:	605a      	str	r2, [r3, #4]
	return 0;
 8002062:	2300      	movs	r3, #0
}
 8002064:	4618      	mov	r0, r3
 8002066:	370c      	adds	r7, #12
 8002068:	46bd      	mov	sp, r7
 800206a:	bc80      	pop	{r7}
 800206c:	4770      	bx	lr

0800206e <_isatty>:

int _isatty(int file) {
 800206e:	b480      	push	{r7}
 8002070:	b083      	sub	sp, #12
 8002072:	af00      	add	r7, sp, #0
 8002074:	6078      	str	r0, [r7, #4]
	(void) file;
	return 1;
 8002076:	2301      	movs	r3, #1
}
 8002078:	4618      	mov	r0, r3
 800207a:	370c      	adds	r7, #12
 800207c:	46bd      	mov	sp, r7
 800207e:	bc80      	pop	{r7}
 8002080:	4770      	bx	lr

08002082 <_lseek>:

int _lseek(int file, int ptr, int dir) {
 8002082:	b480      	push	{r7}
 8002084:	b085      	sub	sp, #20
 8002086:	af00      	add	r7, sp, #0
 8002088:	60f8      	str	r0, [r7, #12]
 800208a:	60b9      	str	r1, [r7, #8]
 800208c:	607a      	str	r2, [r7, #4]
	(void) file;
	(void) ptr;
	(void) dir;
	return 0;
 800208e:	2300      	movs	r3, #0
}
 8002090:	4618      	mov	r0, r3
 8002092:	3714      	adds	r7, #20
 8002094:	46bd      	mov	sp, r7
 8002096:	bc80      	pop	{r7}
 8002098:	4770      	bx	lr
	...

0800209c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800209c:	b580      	push	{r7, lr}
 800209e:	b086      	sub	sp, #24
 80020a0:	af00      	add	r7, sp, #0
 80020a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80020a4:	4a14      	ldr	r2, [pc, #80]	@ (80020f8 <_sbrk+0x5c>)
 80020a6:	4b15      	ldr	r3, [pc, #84]	@ (80020fc <_sbrk+0x60>)
 80020a8:	1ad3      	subs	r3, r2, r3
 80020aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80020ac:	697b      	ldr	r3, [r7, #20]
 80020ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80020b0:	4b13      	ldr	r3, [pc, #76]	@ (8002100 <_sbrk+0x64>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d102      	bne.n	80020be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80020b8:	4b11      	ldr	r3, [pc, #68]	@ (8002100 <_sbrk+0x64>)
 80020ba:	4a12      	ldr	r2, [pc, #72]	@ (8002104 <_sbrk+0x68>)
 80020bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80020be:	4b10      	ldr	r3, [pc, #64]	@ (8002100 <_sbrk+0x64>)
 80020c0:	681a      	ldr	r2, [r3, #0]
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	4413      	add	r3, r2
 80020c6:	693a      	ldr	r2, [r7, #16]
 80020c8:	429a      	cmp	r2, r3
 80020ca:	d207      	bcs.n	80020dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80020cc:	f000 fef8 	bl	8002ec0 <__errno>
 80020d0:	4603      	mov	r3, r0
 80020d2:	220c      	movs	r2, #12
 80020d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80020d6:	f04f 33ff 	mov.w	r3, #4294967295
 80020da:	e009      	b.n	80020f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80020dc:	4b08      	ldr	r3, [pc, #32]	@ (8002100 <_sbrk+0x64>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80020e2:	4b07      	ldr	r3, [pc, #28]	@ (8002100 <_sbrk+0x64>)
 80020e4:	681a      	ldr	r2, [r3, #0]
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	4413      	add	r3, r2
 80020ea:	4a05      	ldr	r2, [pc, #20]	@ (8002100 <_sbrk+0x64>)
 80020ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80020ee:	68fb      	ldr	r3, [r7, #12]
}
 80020f0:	4618      	mov	r0, r3
 80020f2:	3718      	adds	r7, #24
 80020f4:	46bd      	mov	sp, r7
 80020f6:	bd80      	pop	{r7, pc}
 80020f8:	20020000 	.word	0x20020000
 80020fc:	00000400 	.word	0x00000400
 8002100:	20000224 	.word	0x20000224
 8002104:	20000378 	.word	0x20000378

08002108 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002108:	480d      	ldr	r0, [pc, #52]	@ (8002140 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800210a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800210c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002110:	480c      	ldr	r0, [pc, #48]	@ (8002144 <LoopForever+0x6>)
  ldr r1, =_edata
 8002112:	490d      	ldr	r1, [pc, #52]	@ (8002148 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002114:	4a0d      	ldr	r2, [pc, #52]	@ (800214c <LoopForever+0xe>)
  movs r3, #0
 8002116:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002118:	e002      	b.n	8002120 <LoopCopyDataInit>

0800211a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800211a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800211c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800211e:	3304      	adds	r3, #4

08002120 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002120:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002122:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002124:	d3f9      	bcc.n	800211a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002126:	4a0a      	ldr	r2, [pc, #40]	@ (8002150 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002128:	4c0a      	ldr	r4, [pc, #40]	@ (8002154 <LoopForever+0x16>)
  movs r3, #0
 800212a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800212c:	e001      	b.n	8002132 <LoopFillZerobss>

0800212e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800212e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002130:	3204      	adds	r2, #4

08002132 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002132:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002134:	d3fb      	bcc.n	800212e <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8002136:	f000 fec9 	bl	8002ecc <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800213a:	f7ff fa57 	bl	80015ec <main>

0800213e <LoopForever>:

LoopForever:
  b LoopForever
 800213e:	e7fe      	b.n	800213e <LoopForever>
  ldr   r0, =_estack
 8002140:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002144:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002148:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 800214c:	0800543c 	.word	0x0800543c
  ldr r2, =_sbss
 8002150:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 8002154:	20000374 	.word	0x20000374

08002158 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002158:	e7fe      	b.n	8002158 <ADC_IRQHandler>

0800215a <__cvt>:
 800215a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800215e:	b088      	sub	sp, #32
 8002160:	2b00      	cmp	r3, #0
 8002162:	461d      	mov	r5, r3
 8002164:	4614      	mov	r4, r2
 8002166:	bfbc      	itt	lt
 8002168:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 800216c:	4614      	movlt	r4, r2
 800216e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002170:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8002172:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8002176:	bfb6      	itet	lt
 8002178:	461d      	movlt	r5, r3
 800217a:	2300      	movge	r3, #0
 800217c:	232d      	movlt	r3, #45	@ 0x2d
 800217e:	7013      	strb	r3, [r2, #0]
 8002180:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002182:	f023 0820 	bic.w	r8, r3, #32
 8002186:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800218a:	d005      	beq.n	8002198 <__cvt+0x3e>
 800218c:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8002190:	d100      	bne.n	8002194 <__cvt+0x3a>
 8002192:	3601      	adds	r6, #1
 8002194:	2302      	movs	r3, #2
 8002196:	e000      	b.n	800219a <__cvt+0x40>
 8002198:	2303      	movs	r3, #3
 800219a:	aa07      	add	r2, sp, #28
 800219c:	9204      	str	r2, [sp, #16]
 800219e:	aa06      	add	r2, sp, #24
 80021a0:	e9cd a202 	strd	sl, r2, [sp, #8]
 80021a4:	e9cd 3600 	strd	r3, r6, [sp]
 80021a8:	4622      	mov	r2, r4
 80021aa:	462b      	mov	r3, r5
 80021ac:	f000 ff40 	bl	8003030 <_dtoa_r>
 80021b0:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80021b4:	4607      	mov	r7, r0
 80021b6:	d119      	bne.n	80021ec <__cvt+0x92>
 80021b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80021ba:	07db      	lsls	r3, r3, #31
 80021bc:	d50e      	bpl.n	80021dc <__cvt+0x82>
 80021be:	eb00 0906 	add.w	r9, r0, r6
 80021c2:	2200      	movs	r2, #0
 80021c4:	2300      	movs	r3, #0
 80021c6:	4620      	mov	r0, r4
 80021c8:	4629      	mov	r1, r5
 80021ca:	f7fe fc7d 	bl	8000ac8 <__aeabi_dcmpeq>
 80021ce:	b108      	cbz	r0, 80021d4 <__cvt+0x7a>
 80021d0:	f8cd 901c 	str.w	r9, [sp, #28]
 80021d4:	2230      	movs	r2, #48	@ 0x30
 80021d6:	9b07      	ldr	r3, [sp, #28]
 80021d8:	454b      	cmp	r3, r9
 80021da:	d31e      	bcc.n	800221a <__cvt+0xc0>
 80021dc:	9b07      	ldr	r3, [sp, #28]
 80021de:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80021e0:	1bdb      	subs	r3, r3, r7
 80021e2:	4638      	mov	r0, r7
 80021e4:	6013      	str	r3, [r2, #0]
 80021e6:	b008      	add	sp, #32
 80021e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80021ec:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80021f0:	eb00 0906 	add.w	r9, r0, r6
 80021f4:	d1e5      	bne.n	80021c2 <__cvt+0x68>
 80021f6:	7803      	ldrb	r3, [r0, #0]
 80021f8:	2b30      	cmp	r3, #48	@ 0x30
 80021fa:	d10a      	bne.n	8002212 <__cvt+0xb8>
 80021fc:	2200      	movs	r2, #0
 80021fe:	2300      	movs	r3, #0
 8002200:	4620      	mov	r0, r4
 8002202:	4629      	mov	r1, r5
 8002204:	f7fe fc60 	bl	8000ac8 <__aeabi_dcmpeq>
 8002208:	b918      	cbnz	r0, 8002212 <__cvt+0xb8>
 800220a:	f1c6 0601 	rsb	r6, r6, #1
 800220e:	f8ca 6000 	str.w	r6, [sl]
 8002212:	f8da 3000 	ldr.w	r3, [sl]
 8002216:	4499      	add	r9, r3
 8002218:	e7d3      	b.n	80021c2 <__cvt+0x68>
 800221a:	1c59      	adds	r1, r3, #1
 800221c:	9107      	str	r1, [sp, #28]
 800221e:	701a      	strb	r2, [r3, #0]
 8002220:	e7d9      	b.n	80021d6 <__cvt+0x7c>

08002222 <__exponent>:
 8002222:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002224:	2900      	cmp	r1, #0
 8002226:	bfba      	itte	lt
 8002228:	4249      	neglt	r1, r1
 800222a:	232d      	movlt	r3, #45	@ 0x2d
 800222c:	232b      	movge	r3, #43	@ 0x2b
 800222e:	2909      	cmp	r1, #9
 8002230:	7002      	strb	r2, [r0, #0]
 8002232:	7043      	strb	r3, [r0, #1]
 8002234:	dd29      	ble.n	800228a <__exponent+0x68>
 8002236:	f10d 0307 	add.w	r3, sp, #7
 800223a:	461d      	mov	r5, r3
 800223c:	270a      	movs	r7, #10
 800223e:	461a      	mov	r2, r3
 8002240:	fbb1 f6f7 	udiv	r6, r1, r7
 8002244:	fb07 1416 	mls	r4, r7, r6, r1
 8002248:	3430      	adds	r4, #48	@ 0x30
 800224a:	f802 4c01 	strb.w	r4, [r2, #-1]
 800224e:	460c      	mov	r4, r1
 8002250:	2c63      	cmp	r4, #99	@ 0x63
 8002252:	f103 33ff 	add.w	r3, r3, #4294967295
 8002256:	4631      	mov	r1, r6
 8002258:	dcf1      	bgt.n	800223e <__exponent+0x1c>
 800225a:	3130      	adds	r1, #48	@ 0x30
 800225c:	1e94      	subs	r4, r2, #2
 800225e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8002262:	1c41      	adds	r1, r0, #1
 8002264:	4623      	mov	r3, r4
 8002266:	42ab      	cmp	r3, r5
 8002268:	d30a      	bcc.n	8002280 <__exponent+0x5e>
 800226a:	f10d 0309 	add.w	r3, sp, #9
 800226e:	1a9b      	subs	r3, r3, r2
 8002270:	42ac      	cmp	r4, r5
 8002272:	bf88      	it	hi
 8002274:	2300      	movhi	r3, #0
 8002276:	3302      	adds	r3, #2
 8002278:	4403      	add	r3, r0
 800227a:	1a18      	subs	r0, r3, r0
 800227c:	b003      	add	sp, #12
 800227e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002280:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002284:	f801 6f01 	strb.w	r6, [r1, #1]!
 8002288:	e7ed      	b.n	8002266 <__exponent+0x44>
 800228a:	2330      	movs	r3, #48	@ 0x30
 800228c:	3130      	adds	r1, #48	@ 0x30
 800228e:	7083      	strb	r3, [r0, #2]
 8002290:	70c1      	strb	r1, [r0, #3]
 8002292:	1d03      	adds	r3, r0, #4
 8002294:	e7f1      	b.n	800227a <__exponent+0x58>
	...

08002298 <_printf_float>:
 8002298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800229c:	b091      	sub	sp, #68	@ 0x44
 800229e:	460c      	mov	r4, r1
 80022a0:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 80022a4:	4616      	mov	r6, r2
 80022a6:	461f      	mov	r7, r3
 80022a8:	4605      	mov	r5, r0
 80022aa:	f000 fdbf 	bl	8002e2c <_localeconv_r>
 80022ae:	6803      	ldr	r3, [r0, #0]
 80022b0:	9308      	str	r3, [sp, #32]
 80022b2:	4618      	mov	r0, r3
 80022b4:	f7fd ffdc 	bl	8000270 <strlen>
 80022b8:	2300      	movs	r3, #0
 80022ba:	930e      	str	r3, [sp, #56]	@ 0x38
 80022bc:	f8d8 3000 	ldr.w	r3, [r8]
 80022c0:	9009      	str	r0, [sp, #36]	@ 0x24
 80022c2:	3307      	adds	r3, #7
 80022c4:	f023 0307 	bic.w	r3, r3, #7
 80022c8:	f103 0208 	add.w	r2, r3, #8
 80022cc:	f894 a018 	ldrb.w	sl, [r4, #24]
 80022d0:	f8d4 b000 	ldr.w	fp, [r4]
 80022d4:	f8c8 2000 	str.w	r2, [r8]
 80022d8:	e9d3 8900 	ldrd	r8, r9, [r3]
 80022dc:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80022e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80022e2:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80022e6:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80022ea:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80022ee:	4b9d      	ldr	r3, [pc, #628]	@ (8002564 <_printf_float+0x2cc>)
 80022f0:	f04f 32ff 	mov.w	r2, #4294967295
 80022f4:	f7fe fc1a 	bl	8000b2c <__aeabi_dcmpun>
 80022f8:	bb70      	cbnz	r0, 8002358 <_printf_float+0xc0>
 80022fa:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80022fe:	4b99      	ldr	r3, [pc, #612]	@ (8002564 <_printf_float+0x2cc>)
 8002300:	f04f 32ff 	mov.w	r2, #4294967295
 8002304:	f7fe fbf4 	bl	8000af0 <__aeabi_dcmple>
 8002308:	bb30      	cbnz	r0, 8002358 <_printf_float+0xc0>
 800230a:	2200      	movs	r2, #0
 800230c:	2300      	movs	r3, #0
 800230e:	4640      	mov	r0, r8
 8002310:	4649      	mov	r1, r9
 8002312:	f7fe fbe3 	bl	8000adc <__aeabi_dcmplt>
 8002316:	b110      	cbz	r0, 800231e <_printf_float+0x86>
 8002318:	232d      	movs	r3, #45	@ 0x2d
 800231a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800231e:	4a92      	ldr	r2, [pc, #584]	@ (8002568 <_printf_float+0x2d0>)
 8002320:	4b92      	ldr	r3, [pc, #584]	@ (800256c <_printf_float+0x2d4>)
 8002322:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8002326:	bf8c      	ite	hi
 8002328:	4690      	movhi	r8, r2
 800232a:	4698      	movls	r8, r3
 800232c:	2303      	movs	r3, #3
 800232e:	6123      	str	r3, [r4, #16]
 8002330:	f02b 0304 	bic.w	r3, fp, #4
 8002334:	6023      	str	r3, [r4, #0]
 8002336:	f04f 0900 	mov.w	r9, #0
 800233a:	9700      	str	r7, [sp, #0]
 800233c:	4633      	mov	r3, r6
 800233e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8002340:	4621      	mov	r1, r4
 8002342:	4628      	mov	r0, r5
 8002344:	f000 f9d4 	bl	80026f0 <_printf_common>
 8002348:	3001      	adds	r0, #1
 800234a:	f040 808f 	bne.w	800246c <_printf_float+0x1d4>
 800234e:	f04f 30ff 	mov.w	r0, #4294967295
 8002352:	b011      	add	sp, #68	@ 0x44
 8002354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002358:	4642      	mov	r2, r8
 800235a:	464b      	mov	r3, r9
 800235c:	4640      	mov	r0, r8
 800235e:	4649      	mov	r1, r9
 8002360:	f7fe fbe4 	bl	8000b2c <__aeabi_dcmpun>
 8002364:	b140      	cbz	r0, 8002378 <_printf_float+0xe0>
 8002366:	464b      	mov	r3, r9
 8002368:	2b00      	cmp	r3, #0
 800236a:	bfbc      	itt	lt
 800236c:	232d      	movlt	r3, #45	@ 0x2d
 800236e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8002372:	4a7f      	ldr	r2, [pc, #508]	@ (8002570 <_printf_float+0x2d8>)
 8002374:	4b7f      	ldr	r3, [pc, #508]	@ (8002574 <_printf_float+0x2dc>)
 8002376:	e7d4      	b.n	8002322 <_printf_float+0x8a>
 8002378:	6863      	ldr	r3, [r4, #4]
 800237a:	1c5a      	adds	r2, r3, #1
 800237c:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002380:	d13f      	bne.n	8002402 <_printf_float+0x16a>
 8002382:	2306      	movs	r3, #6
 8002384:	6063      	str	r3, [r4, #4]
 8002386:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 800238a:	2200      	movs	r2, #0
 800238c:	6023      	str	r3, [r4, #0]
 800238e:	9206      	str	r2, [sp, #24]
 8002390:	aa0e      	add	r2, sp, #56	@ 0x38
 8002392:	e9cd a204 	strd	sl, r2, [sp, #16]
 8002396:	aa0d      	add	r2, sp, #52	@ 0x34
 8002398:	9203      	str	r2, [sp, #12]
 800239a:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 800239e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80023a2:	6863      	ldr	r3, [r4, #4]
 80023a4:	9300      	str	r3, [sp, #0]
 80023a6:	4642      	mov	r2, r8
 80023a8:	464b      	mov	r3, r9
 80023aa:	4628      	mov	r0, r5
 80023ac:	910a      	str	r1, [sp, #40]	@ 0x28
 80023ae:	f7ff fed4 	bl	800215a <__cvt>
 80023b2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80023b4:	2947      	cmp	r1, #71	@ 0x47
 80023b6:	4680      	mov	r8, r0
 80023b8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80023ba:	d128      	bne.n	800240e <_printf_float+0x176>
 80023bc:	1cc8      	adds	r0, r1, #3
 80023be:	db02      	blt.n	80023c6 <_printf_float+0x12e>
 80023c0:	6863      	ldr	r3, [r4, #4]
 80023c2:	4299      	cmp	r1, r3
 80023c4:	dd40      	ble.n	8002448 <_printf_float+0x1b0>
 80023c6:	f1aa 0a02 	sub.w	sl, sl, #2
 80023ca:	fa5f fa8a 	uxtb.w	sl, sl
 80023ce:	3901      	subs	r1, #1
 80023d0:	4652      	mov	r2, sl
 80023d2:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80023d6:	910d      	str	r1, [sp, #52]	@ 0x34
 80023d8:	f7ff ff23 	bl	8002222 <__exponent>
 80023dc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80023de:	1813      	adds	r3, r2, r0
 80023e0:	2a01      	cmp	r2, #1
 80023e2:	4681      	mov	r9, r0
 80023e4:	6123      	str	r3, [r4, #16]
 80023e6:	dc02      	bgt.n	80023ee <_printf_float+0x156>
 80023e8:	6822      	ldr	r2, [r4, #0]
 80023ea:	07d2      	lsls	r2, r2, #31
 80023ec:	d501      	bpl.n	80023f2 <_printf_float+0x15a>
 80023ee:	3301      	adds	r3, #1
 80023f0:	6123      	str	r3, [r4, #16]
 80023f2:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d09f      	beq.n	800233a <_printf_float+0xa2>
 80023fa:	232d      	movs	r3, #45	@ 0x2d
 80023fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002400:	e79b      	b.n	800233a <_printf_float+0xa2>
 8002402:	2947      	cmp	r1, #71	@ 0x47
 8002404:	d1bf      	bne.n	8002386 <_printf_float+0xee>
 8002406:	2b00      	cmp	r3, #0
 8002408:	d1bd      	bne.n	8002386 <_printf_float+0xee>
 800240a:	2301      	movs	r3, #1
 800240c:	e7ba      	b.n	8002384 <_printf_float+0xec>
 800240e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002412:	d9dc      	bls.n	80023ce <_printf_float+0x136>
 8002414:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002418:	d118      	bne.n	800244c <_printf_float+0x1b4>
 800241a:	2900      	cmp	r1, #0
 800241c:	6863      	ldr	r3, [r4, #4]
 800241e:	dd0b      	ble.n	8002438 <_printf_float+0x1a0>
 8002420:	6121      	str	r1, [r4, #16]
 8002422:	b913      	cbnz	r3, 800242a <_printf_float+0x192>
 8002424:	6822      	ldr	r2, [r4, #0]
 8002426:	07d0      	lsls	r0, r2, #31
 8002428:	d502      	bpl.n	8002430 <_printf_float+0x198>
 800242a:	3301      	adds	r3, #1
 800242c:	440b      	add	r3, r1
 800242e:	6123      	str	r3, [r4, #16]
 8002430:	65a1      	str	r1, [r4, #88]	@ 0x58
 8002432:	f04f 0900 	mov.w	r9, #0
 8002436:	e7dc      	b.n	80023f2 <_printf_float+0x15a>
 8002438:	b913      	cbnz	r3, 8002440 <_printf_float+0x1a8>
 800243a:	6822      	ldr	r2, [r4, #0]
 800243c:	07d2      	lsls	r2, r2, #31
 800243e:	d501      	bpl.n	8002444 <_printf_float+0x1ac>
 8002440:	3302      	adds	r3, #2
 8002442:	e7f4      	b.n	800242e <_printf_float+0x196>
 8002444:	2301      	movs	r3, #1
 8002446:	e7f2      	b.n	800242e <_printf_float+0x196>
 8002448:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800244c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800244e:	4299      	cmp	r1, r3
 8002450:	db05      	blt.n	800245e <_printf_float+0x1c6>
 8002452:	6823      	ldr	r3, [r4, #0]
 8002454:	6121      	str	r1, [r4, #16]
 8002456:	07d8      	lsls	r0, r3, #31
 8002458:	d5ea      	bpl.n	8002430 <_printf_float+0x198>
 800245a:	1c4b      	adds	r3, r1, #1
 800245c:	e7e7      	b.n	800242e <_printf_float+0x196>
 800245e:	2900      	cmp	r1, #0
 8002460:	bfd4      	ite	le
 8002462:	f1c1 0202 	rsble	r2, r1, #2
 8002466:	2201      	movgt	r2, #1
 8002468:	4413      	add	r3, r2
 800246a:	e7e0      	b.n	800242e <_printf_float+0x196>
 800246c:	6823      	ldr	r3, [r4, #0]
 800246e:	055a      	lsls	r2, r3, #21
 8002470:	d407      	bmi.n	8002482 <_printf_float+0x1ea>
 8002472:	6923      	ldr	r3, [r4, #16]
 8002474:	4642      	mov	r2, r8
 8002476:	4631      	mov	r1, r6
 8002478:	4628      	mov	r0, r5
 800247a:	47b8      	blx	r7
 800247c:	3001      	adds	r0, #1
 800247e:	d12b      	bne.n	80024d8 <_printf_float+0x240>
 8002480:	e765      	b.n	800234e <_printf_float+0xb6>
 8002482:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002486:	f240 80dd 	bls.w	8002644 <_printf_float+0x3ac>
 800248a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800248e:	2200      	movs	r2, #0
 8002490:	2300      	movs	r3, #0
 8002492:	f7fe fb19 	bl	8000ac8 <__aeabi_dcmpeq>
 8002496:	2800      	cmp	r0, #0
 8002498:	d033      	beq.n	8002502 <_printf_float+0x26a>
 800249a:	4a37      	ldr	r2, [pc, #220]	@ (8002578 <_printf_float+0x2e0>)
 800249c:	2301      	movs	r3, #1
 800249e:	4631      	mov	r1, r6
 80024a0:	4628      	mov	r0, r5
 80024a2:	47b8      	blx	r7
 80024a4:	3001      	adds	r0, #1
 80024a6:	f43f af52 	beq.w	800234e <_printf_float+0xb6>
 80024aa:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80024ae:	4543      	cmp	r3, r8
 80024b0:	db02      	blt.n	80024b8 <_printf_float+0x220>
 80024b2:	6823      	ldr	r3, [r4, #0]
 80024b4:	07d8      	lsls	r0, r3, #31
 80024b6:	d50f      	bpl.n	80024d8 <_printf_float+0x240>
 80024b8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80024bc:	4631      	mov	r1, r6
 80024be:	4628      	mov	r0, r5
 80024c0:	47b8      	blx	r7
 80024c2:	3001      	adds	r0, #1
 80024c4:	f43f af43 	beq.w	800234e <_printf_float+0xb6>
 80024c8:	f04f 0900 	mov.w	r9, #0
 80024cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80024d0:	f104 0a1a 	add.w	sl, r4, #26
 80024d4:	45c8      	cmp	r8, r9
 80024d6:	dc09      	bgt.n	80024ec <_printf_float+0x254>
 80024d8:	6823      	ldr	r3, [r4, #0]
 80024da:	079b      	lsls	r3, r3, #30
 80024dc:	f100 8103 	bmi.w	80026e6 <_printf_float+0x44e>
 80024e0:	68e0      	ldr	r0, [r4, #12]
 80024e2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80024e4:	4298      	cmp	r0, r3
 80024e6:	bfb8      	it	lt
 80024e8:	4618      	movlt	r0, r3
 80024ea:	e732      	b.n	8002352 <_printf_float+0xba>
 80024ec:	2301      	movs	r3, #1
 80024ee:	4652      	mov	r2, sl
 80024f0:	4631      	mov	r1, r6
 80024f2:	4628      	mov	r0, r5
 80024f4:	47b8      	blx	r7
 80024f6:	3001      	adds	r0, #1
 80024f8:	f43f af29 	beq.w	800234e <_printf_float+0xb6>
 80024fc:	f109 0901 	add.w	r9, r9, #1
 8002500:	e7e8      	b.n	80024d4 <_printf_float+0x23c>
 8002502:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002504:	2b00      	cmp	r3, #0
 8002506:	dc39      	bgt.n	800257c <_printf_float+0x2e4>
 8002508:	4a1b      	ldr	r2, [pc, #108]	@ (8002578 <_printf_float+0x2e0>)
 800250a:	2301      	movs	r3, #1
 800250c:	4631      	mov	r1, r6
 800250e:	4628      	mov	r0, r5
 8002510:	47b8      	blx	r7
 8002512:	3001      	adds	r0, #1
 8002514:	f43f af1b 	beq.w	800234e <_printf_float+0xb6>
 8002518:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 800251c:	ea59 0303 	orrs.w	r3, r9, r3
 8002520:	d102      	bne.n	8002528 <_printf_float+0x290>
 8002522:	6823      	ldr	r3, [r4, #0]
 8002524:	07d9      	lsls	r1, r3, #31
 8002526:	d5d7      	bpl.n	80024d8 <_printf_float+0x240>
 8002528:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800252c:	4631      	mov	r1, r6
 800252e:	4628      	mov	r0, r5
 8002530:	47b8      	blx	r7
 8002532:	3001      	adds	r0, #1
 8002534:	f43f af0b 	beq.w	800234e <_printf_float+0xb6>
 8002538:	f04f 0a00 	mov.w	sl, #0
 800253c:	f104 0b1a 	add.w	fp, r4, #26
 8002540:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002542:	425b      	negs	r3, r3
 8002544:	4553      	cmp	r3, sl
 8002546:	dc01      	bgt.n	800254c <_printf_float+0x2b4>
 8002548:	464b      	mov	r3, r9
 800254a:	e793      	b.n	8002474 <_printf_float+0x1dc>
 800254c:	2301      	movs	r3, #1
 800254e:	465a      	mov	r2, fp
 8002550:	4631      	mov	r1, r6
 8002552:	4628      	mov	r0, r5
 8002554:	47b8      	blx	r7
 8002556:	3001      	adds	r0, #1
 8002558:	f43f aef9 	beq.w	800234e <_printf_float+0xb6>
 800255c:	f10a 0a01 	add.w	sl, sl, #1
 8002560:	e7ee      	b.n	8002540 <_printf_float+0x2a8>
 8002562:	bf00      	nop
 8002564:	7fefffff 	.word	0x7fefffff
 8002568:	080050b1 	.word	0x080050b1
 800256c:	080050ad 	.word	0x080050ad
 8002570:	080050b9 	.word	0x080050b9
 8002574:	080050b5 	.word	0x080050b5
 8002578:	080050bd 	.word	0x080050bd
 800257c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800257e:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002582:	4553      	cmp	r3, sl
 8002584:	bfa8      	it	ge
 8002586:	4653      	movge	r3, sl
 8002588:	2b00      	cmp	r3, #0
 800258a:	4699      	mov	r9, r3
 800258c:	dc36      	bgt.n	80025fc <_printf_float+0x364>
 800258e:	f04f 0b00 	mov.w	fp, #0
 8002592:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002596:	f104 021a 	add.w	r2, r4, #26
 800259a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800259c:	930a      	str	r3, [sp, #40]	@ 0x28
 800259e:	eba3 0309 	sub.w	r3, r3, r9
 80025a2:	455b      	cmp	r3, fp
 80025a4:	dc31      	bgt.n	800260a <_printf_float+0x372>
 80025a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025a8:	459a      	cmp	sl, r3
 80025aa:	dc3a      	bgt.n	8002622 <_printf_float+0x38a>
 80025ac:	6823      	ldr	r3, [r4, #0]
 80025ae:	07da      	lsls	r2, r3, #31
 80025b0:	d437      	bmi.n	8002622 <_printf_float+0x38a>
 80025b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025b4:	ebaa 0903 	sub.w	r9, sl, r3
 80025b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80025ba:	ebaa 0303 	sub.w	r3, sl, r3
 80025be:	4599      	cmp	r9, r3
 80025c0:	bfa8      	it	ge
 80025c2:	4699      	movge	r9, r3
 80025c4:	f1b9 0f00 	cmp.w	r9, #0
 80025c8:	dc33      	bgt.n	8002632 <_printf_float+0x39a>
 80025ca:	f04f 0800 	mov.w	r8, #0
 80025ce:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80025d2:	f104 0b1a 	add.w	fp, r4, #26
 80025d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025d8:	ebaa 0303 	sub.w	r3, sl, r3
 80025dc:	eba3 0309 	sub.w	r3, r3, r9
 80025e0:	4543      	cmp	r3, r8
 80025e2:	f77f af79 	ble.w	80024d8 <_printf_float+0x240>
 80025e6:	2301      	movs	r3, #1
 80025e8:	465a      	mov	r2, fp
 80025ea:	4631      	mov	r1, r6
 80025ec:	4628      	mov	r0, r5
 80025ee:	47b8      	blx	r7
 80025f0:	3001      	adds	r0, #1
 80025f2:	f43f aeac 	beq.w	800234e <_printf_float+0xb6>
 80025f6:	f108 0801 	add.w	r8, r8, #1
 80025fa:	e7ec      	b.n	80025d6 <_printf_float+0x33e>
 80025fc:	4642      	mov	r2, r8
 80025fe:	4631      	mov	r1, r6
 8002600:	4628      	mov	r0, r5
 8002602:	47b8      	blx	r7
 8002604:	3001      	adds	r0, #1
 8002606:	d1c2      	bne.n	800258e <_printf_float+0x2f6>
 8002608:	e6a1      	b.n	800234e <_printf_float+0xb6>
 800260a:	2301      	movs	r3, #1
 800260c:	4631      	mov	r1, r6
 800260e:	4628      	mov	r0, r5
 8002610:	920a      	str	r2, [sp, #40]	@ 0x28
 8002612:	47b8      	blx	r7
 8002614:	3001      	adds	r0, #1
 8002616:	f43f ae9a 	beq.w	800234e <_printf_float+0xb6>
 800261a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800261c:	f10b 0b01 	add.w	fp, fp, #1
 8002620:	e7bb      	b.n	800259a <_printf_float+0x302>
 8002622:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002626:	4631      	mov	r1, r6
 8002628:	4628      	mov	r0, r5
 800262a:	47b8      	blx	r7
 800262c:	3001      	adds	r0, #1
 800262e:	d1c0      	bne.n	80025b2 <_printf_float+0x31a>
 8002630:	e68d      	b.n	800234e <_printf_float+0xb6>
 8002632:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002634:	464b      	mov	r3, r9
 8002636:	4442      	add	r2, r8
 8002638:	4631      	mov	r1, r6
 800263a:	4628      	mov	r0, r5
 800263c:	47b8      	blx	r7
 800263e:	3001      	adds	r0, #1
 8002640:	d1c3      	bne.n	80025ca <_printf_float+0x332>
 8002642:	e684      	b.n	800234e <_printf_float+0xb6>
 8002644:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002648:	f1ba 0f01 	cmp.w	sl, #1
 800264c:	dc01      	bgt.n	8002652 <_printf_float+0x3ba>
 800264e:	07db      	lsls	r3, r3, #31
 8002650:	d536      	bpl.n	80026c0 <_printf_float+0x428>
 8002652:	2301      	movs	r3, #1
 8002654:	4642      	mov	r2, r8
 8002656:	4631      	mov	r1, r6
 8002658:	4628      	mov	r0, r5
 800265a:	47b8      	blx	r7
 800265c:	3001      	adds	r0, #1
 800265e:	f43f ae76 	beq.w	800234e <_printf_float+0xb6>
 8002662:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002666:	4631      	mov	r1, r6
 8002668:	4628      	mov	r0, r5
 800266a:	47b8      	blx	r7
 800266c:	3001      	adds	r0, #1
 800266e:	f43f ae6e 	beq.w	800234e <_printf_float+0xb6>
 8002672:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002676:	2200      	movs	r2, #0
 8002678:	2300      	movs	r3, #0
 800267a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800267e:	f7fe fa23 	bl	8000ac8 <__aeabi_dcmpeq>
 8002682:	b9c0      	cbnz	r0, 80026b6 <_printf_float+0x41e>
 8002684:	4653      	mov	r3, sl
 8002686:	f108 0201 	add.w	r2, r8, #1
 800268a:	4631      	mov	r1, r6
 800268c:	4628      	mov	r0, r5
 800268e:	47b8      	blx	r7
 8002690:	3001      	adds	r0, #1
 8002692:	d10c      	bne.n	80026ae <_printf_float+0x416>
 8002694:	e65b      	b.n	800234e <_printf_float+0xb6>
 8002696:	2301      	movs	r3, #1
 8002698:	465a      	mov	r2, fp
 800269a:	4631      	mov	r1, r6
 800269c:	4628      	mov	r0, r5
 800269e:	47b8      	blx	r7
 80026a0:	3001      	adds	r0, #1
 80026a2:	f43f ae54 	beq.w	800234e <_printf_float+0xb6>
 80026a6:	f108 0801 	add.w	r8, r8, #1
 80026aa:	45d0      	cmp	r8, sl
 80026ac:	dbf3      	blt.n	8002696 <_printf_float+0x3fe>
 80026ae:	464b      	mov	r3, r9
 80026b0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80026b4:	e6df      	b.n	8002476 <_printf_float+0x1de>
 80026b6:	f04f 0800 	mov.w	r8, #0
 80026ba:	f104 0b1a 	add.w	fp, r4, #26
 80026be:	e7f4      	b.n	80026aa <_printf_float+0x412>
 80026c0:	2301      	movs	r3, #1
 80026c2:	4642      	mov	r2, r8
 80026c4:	e7e1      	b.n	800268a <_printf_float+0x3f2>
 80026c6:	2301      	movs	r3, #1
 80026c8:	464a      	mov	r2, r9
 80026ca:	4631      	mov	r1, r6
 80026cc:	4628      	mov	r0, r5
 80026ce:	47b8      	blx	r7
 80026d0:	3001      	adds	r0, #1
 80026d2:	f43f ae3c 	beq.w	800234e <_printf_float+0xb6>
 80026d6:	f108 0801 	add.w	r8, r8, #1
 80026da:	68e3      	ldr	r3, [r4, #12]
 80026dc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80026de:	1a5b      	subs	r3, r3, r1
 80026e0:	4543      	cmp	r3, r8
 80026e2:	dcf0      	bgt.n	80026c6 <_printf_float+0x42e>
 80026e4:	e6fc      	b.n	80024e0 <_printf_float+0x248>
 80026e6:	f04f 0800 	mov.w	r8, #0
 80026ea:	f104 0919 	add.w	r9, r4, #25
 80026ee:	e7f4      	b.n	80026da <_printf_float+0x442>

080026f0 <_printf_common>:
 80026f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80026f4:	4616      	mov	r6, r2
 80026f6:	4698      	mov	r8, r3
 80026f8:	688a      	ldr	r2, [r1, #8]
 80026fa:	690b      	ldr	r3, [r1, #16]
 80026fc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002700:	4293      	cmp	r3, r2
 8002702:	bfb8      	it	lt
 8002704:	4613      	movlt	r3, r2
 8002706:	6033      	str	r3, [r6, #0]
 8002708:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800270c:	4607      	mov	r7, r0
 800270e:	460c      	mov	r4, r1
 8002710:	b10a      	cbz	r2, 8002716 <_printf_common+0x26>
 8002712:	3301      	adds	r3, #1
 8002714:	6033      	str	r3, [r6, #0]
 8002716:	6823      	ldr	r3, [r4, #0]
 8002718:	0699      	lsls	r1, r3, #26
 800271a:	bf42      	ittt	mi
 800271c:	6833      	ldrmi	r3, [r6, #0]
 800271e:	3302      	addmi	r3, #2
 8002720:	6033      	strmi	r3, [r6, #0]
 8002722:	6825      	ldr	r5, [r4, #0]
 8002724:	f015 0506 	ands.w	r5, r5, #6
 8002728:	d106      	bne.n	8002738 <_printf_common+0x48>
 800272a:	f104 0a19 	add.w	sl, r4, #25
 800272e:	68e3      	ldr	r3, [r4, #12]
 8002730:	6832      	ldr	r2, [r6, #0]
 8002732:	1a9b      	subs	r3, r3, r2
 8002734:	42ab      	cmp	r3, r5
 8002736:	dc26      	bgt.n	8002786 <_printf_common+0x96>
 8002738:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800273c:	6822      	ldr	r2, [r4, #0]
 800273e:	3b00      	subs	r3, #0
 8002740:	bf18      	it	ne
 8002742:	2301      	movne	r3, #1
 8002744:	0692      	lsls	r2, r2, #26
 8002746:	d42b      	bmi.n	80027a0 <_printf_common+0xb0>
 8002748:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800274c:	4641      	mov	r1, r8
 800274e:	4638      	mov	r0, r7
 8002750:	47c8      	blx	r9
 8002752:	3001      	adds	r0, #1
 8002754:	d01e      	beq.n	8002794 <_printf_common+0xa4>
 8002756:	6823      	ldr	r3, [r4, #0]
 8002758:	6922      	ldr	r2, [r4, #16]
 800275a:	f003 0306 	and.w	r3, r3, #6
 800275e:	2b04      	cmp	r3, #4
 8002760:	bf02      	ittt	eq
 8002762:	68e5      	ldreq	r5, [r4, #12]
 8002764:	6833      	ldreq	r3, [r6, #0]
 8002766:	1aed      	subeq	r5, r5, r3
 8002768:	68a3      	ldr	r3, [r4, #8]
 800276a:	bf0c      	ite	eq
 800276c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002770:	2500      	movne	r5, #0
 8002772:	4293      	cmp	r3, r2
 8002774:	bfc4      	itt	gt
 8002776:	1a9b      	subgt	r3, r3, r2
 8002778:	18ed      	addgt	r5, r5, r3
 800277a:	2600      	movs	r6, #0
 800277c:	341a      	adds	r4, #26
 800277e:	42b5      	cmp	r5, r6
 8002780:	d11a      	bne.n	80027b8 <_printf_common+0xc8>
 8002782:	2000      	movs	r0, #0
 8002784:	e008      	b.n	8002798 <_printf_common+0xa8>
 8002786:	2301      	movs	r3, #1
 8002788:	4652      	mov	r2, sl
 800278a:	4641      	mov	r1, r8
 800278c:	4638      	mov	r0, r7
 800278e:	47c8      	blx	r9
 8002790:	3001      	adds	r0, #1
 8002792:	d103      	bne.n	800279c <_printf_common+0xac>
 8002794:	f04f 30ff 	mov.w	r0, #4294967295
 8002798:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800279c:	3501      	adds	r5, #1
 800279e:	e7c6      	b.n	800272e <_printf_common+0x3e>
 80027a0:	18e1      	adds	r1, r4, r3
 80027a2:	1c5a      	adds	r2, r3, #1
 80027a4:	2030      	movs	r0, #48	@ 0x30
 80027a6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80027aa:	4422      	add	r2, r4
 80027ac:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80027b0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80027b4:	3302      	adds	r3, #2
 80027b6:	e7c7      	b.n	8002748 <_printf_common+0x58>
 80027b8:	2301      	movs	r3, #1
 80027ba:	4622      	mov	r2, r4
 80027bc:	4641      	mov	r1, r8
 80027be:	4638      	mov	r0, r7
 80027c0:	47c8      	blx	r9
 80027c2:	3001      	adds	r0, #1
 80027c4:	d0e6      	beq.n	8002794 <_printf_common+0xa4>
 80027c6:	3601      	adds	r6, #1
 80027c8:	e7d9      	b.n	800277e <_printf_common+0x8e>
	...

080027cc <_printf_i>:
 80027cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80027d0:	7e0f      	ldrb	r7, [r1, #24]
 80027d2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80027d4:	2f78      	cmp	r7, #120	@ 0x78
 80027d6:	4691      	mov	r9, r2
 80027d8:	4680      	mov	r8, r0
 80027da:	460c      	mov	r4, r1
 80027dc:	469a      	mov	sl, r3
 80027de:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80027e2:	d807      	bhi.n	80027f4 <_printf_i+0x28>
 80027e4:	2f62      	cmp	r7, #98	@ 0x62
 80027e6:	d80a      	bhi.n	80027fe <_printf_i+0x32>
 80027e8:	2f00      	cmp	r7, #0
 80027ea:	f000 80d1 	beq.w	8002990 <_printf_i+0x1c4>
 80027ee:	2f58      	cmp	r7, #88	@ 0x58
 80027f0:	f000 80b8 	beq.w	8002964 <_printf_i+0x198>
 80027f4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80027f8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80027fc:	e03a      	b.n	8002874 <_printf_i+0xa8>
 80027fe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002802:	2b15      	cmp	r3, #21
 8002804:	d8f6      	bhi.n	80027f4 <_printf_i+0x28>
 8002806:	a101      	add	r1, pc, #4	@ (adr r1, 800280c <_printf_i+0x40>)
 8002808:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800280c:	08002865 	.word	0x08002865
 8002810:	08002879 	.word	0x08002879
 8002814:	080027f5 	.word	0x080027f5
 8002818:	080027f5 	.word	0x080027f5
 800281c:	080027f5 	.word	0x080027f5
 8002820:	080027f5 	.word	0x080027f5
 8002824:	08002879 	.word	0x08002879
 8002828:	080027f5 	.word	0x080027f5
 800282c:	080027f5 	.word	0x080027f5
 8002830:	080027f5 	.word	0x080027f5
 8002834:	080027f5 	.word	0x080027f5
 8002838:	08002977 	.word	0x08002977
 800283c:	080028a3 	.word	0x080028a3
 8002840:	08002931 	.word	0x08002931
 8002844:	080027f5 	.word	0x080027f5
 8002848:	080027f5 	.word	0x080027f5
 800284c:	08002999 	.word	0x08002999
 8002850:	080027f5 	.word	0x080027f5
 8002854:	080028a3 	.word	0x080028a3
 8002858:	080027f5 	.word	0x080027f5
 800285c:	080027f5 	.word	0x080027f5
 8002860:	08002939 	.word	0x08002939
 8002864:	6833      	ldr	r3, [r6, #0]
 8002866:	1d1a      	adds	r2, r3, #4
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	6032      	str	r2, [r6, #0]
 800286c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002870:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002874:	2301      	movs	r3, #1
 8002876:	e09c      	b.n	80029b2 <_printf_i+0x1e6>
 8002878:	6833      	ldr	r3, [r6, #0]
 800287a:	6820      	ldr	r0, [r4, #0]
 800287c:	1d19      	adds	r1, r3, #4
 800287e:	6031      	str	r1, [r6, #0]
 8002880:	0606      	lsls	r6, r0, #24
 8002882:	d501      	bpl.n	8002888 <_printf_i+0xbc>
 8002884:	681d      	ldr	r5, [r3, #0]
 8002886:	e003      	b.n	8002890 <_printf_i+0xc4>
 8002888:	0645      	lsls	r5, r0, #25
 800288a:	d5fb      	bpl.n	8002884 <_printf_i+0xb8>
 800288c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002890:	2d00      	cmp	r5, #0
 8002892:	da03      	bge.n	800289c <_printf_i+0xd0>
 8002894:	232d      	movs	r3, #45	@ 0x2d
 8002896:	426d      	negs	r5, r5
 8002898:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800289c:	4858      	ldr	r0, [pc, #352]	@ (8002a00 <_printf_i+0x234>)
 800289e:	230a      	movs	r3, #10
 80028a0:	e011      	b.n	80028c6 <_printf_i+0xfa>
 80028a2:	6821      	ldr	r1, [r4, #0]
 80028a4:	6833      	ldr	r3, [r6, #0]
 80028a6:	0608      	lsls	r0, r1, #24
 80028a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80028ac:	d402      	bmi.n	80028b4 <_printf_i+0xe8>
 80028ae:	0649      	lsls	r1, r1, #25
 80028b0:	bf48      	it	mi
 80028b2:	b2ad      	uxthmi	r5, r5
 80028b4:	2f6f      	cmp	r7, #111	@ 0x6f
 80028b6:	4852      	ldr	r0, [pc, #328]	@ (8002a00 <_printf_i+0x234>)
 80028b8:	6033      	str	r3, [r6, #0]
 80028ba:	bf14      	ite	ne
 80028bc:	230a      	movne	r3, #10
 80028be:	2308      	moveq	r3, #8
 80028c0:	2100      	movs	r1, #0
 80028c2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80028c6:	6866      	ldr	r6, [r4, #4]
 80028c8:	60a6      	str	r6, [r4, #8]
 80028ca:	2e00      	cmp	r6, #0
 80028cc:	db05      	blt.n	80028da <_printf_i+0x10e>
 80028ce:	6821      	ldr	r1, [r4, #0]
 80028d0:	432e      	orrs	r6, r5
 80028d2:	f021 0104 	bic.w	r1, r1, #4
 80028d6:	6021      	str	r1, [r4, #0]
 80028d8:	d04b      	beq.n	8002972 <_printf_i+0x1a6>
 80028da:	4616      	mov	r6, r2
 80028dc:	fbb5 f1f3 	udiv	r1, r5, r3
 80028e0:	fb03 5711 	mls	r7, r3, r1, r5
 80028e4:	5dc7      	ldrb	r7, [r0, r7]
 80028e6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80028ea:	462f      	mov	r7, r5
 80028ec:	42bb      	cmp	r3, r7
 80028ee:	460d      	mov	r5, r1
 80028f0:	d9f4      	bls.n	80028dc <_printf_i+0x110>
 80028f2:	2b08      	cmp	r3, #8
 80028f4:	d10b      	bne.n	800290e <_printf_i+0x142>
 80028f6:	6823      	ldr	r3, [r4, #0]
 80028f8:	07df      	lsls	r7, r3, #31
 80028fa:	d508      	bpl.n	800290e <_printf_i+0x142>
 80028fc:	6923      	ldr	r3, [r4, #16]
 80028fe:	6861      	ldr	r1, [r4, #4]
 8002900:	4299      	cmp	r1, r3
 8002902:	bfde      	ittt	le
 8002904:	2330      	movle	r3, #48	@ 0x30
 8002906:	f806 3c01 	strble.w	r3, [r6, #-1]
 800290a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800290e:	1b92      	subs	r2, r2, r6
 8002910:	6122      	str	r2, [r4, #16]
 8002912:	f8cd a000 	str.w	sl, [sp]
 8002916:	464b      	mov	r3, r9
 8002918:	aa03      	add	r2, sp, #12
 800291a:	4621      	mov	r1, r4
 800291c:	4640      	mov	r0, r8
 800291e:	f7ff fee7 	bl	80026f0 <_printf_common>
 8002922:	3001      	adds	r0, #1
 8002924:	d14a      	bne.n	80029bc <_printf_i+0x1f0>
 8002926:	f04f 30ff 	mov.w	r0, #4294967295
 800292a:	b004      	add	sp, #16
 800292c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002930:	6823      	ldr	r3, [r4, #0]
 8002932:	f043 0320 	orr.w	r3, r3, #32
 8002936:	6023      	str	r3, [r4, #0]
 8002938:	4832      	ldr	r0, [pc, #200]	@ (8002a04 <_printf_i+0x238>)
 800293a:	2778      	movs	r7, #120	@ 0x78
 800293c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002940:	6823      	ldr	r3, [r4, #0]
 8002942:	6831      	ldr	r1, [r6, #0]
 8002944:	061f      	lsls	r7, r3, #24
 8002946:	f851 5b04 	ldr.w	r5, [r1], #4
 800294a:	d402      	bmi.n	8002952 <_printf_i+0x186>
 800294c:	065f      	lsls	r7, r3, #25
 800294e:	bf48      	it	mi
 8002950:	b2ad      	uxthmi	r5, r5
 8002952:	6031      	str	r1, [r6, #0]
 8002954:	07d9      	lsls	r1, r3, #31
 8002956:	bf44      	itt	mi
 8002958:	f043 0320 	orrmi.w	r3, r3, #32
 800295c:	6023      	strmi	r3, [r4, #0]
 800295e:	b11d      	cbz	r5, 8002968 <_printf_i+0x19c>
 8002960:	2310      	movs	r3, #16
 8002962:	e7ad      	b.n	80028c0 <_printf_i+0xf4>
 8002964:	4826      	ldr	r0, [pc, #152]	@ (8002a00 <_printf_i+0x234>)
 8002966:	e7e9      	b.n	800293c <_printf_i+0x170>
 8002968:	6823      	ldr	r3, [r4, #0]
 800296a:	f023 0320 	bic.w	r3, r3, #32
 800296e:	6023      	str	r3, [r4, #0]
 8002970:	e7f6      	b.n	8002960 <_printf_i+0x194>
 8002972:	4616      	mov	r6, r2
 8002974:	e7bd      	b.n	80028f2 <_printf_i+0x126>
 8002976:	6833      	ldr	r3, [r6, #0]
 8002978:	6825      	ldr	r5, [r4, #0]
 800297a:	6961      	ldr	r1, [r4, #20]
 800297c:	1d18      	adds	r0, r3, #4
 800297e:	6030      	str	r0, [r6, #0]
 8002980:	062e      	lsls	r6, r5, #24
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	d501      	bpl.n	800298a <_printf_i+0x1be>
 8002986:	6019      	str	r1, [r3, #0]
 8002988:	e002      	b.n	8002990 <_printf_i+0x1c4>
 800298a:	0668      	lsls	r0, r5, #25
 800298c:	d5fb      	bpl.n	8002986 <_printf_i+0x1ba>
 800298e:	8019      	strh	r1, [r3, #0]
 8002990:	2300      	movs	r3, #0
 8002992:	6123      	str	r3, [r4, #16]
 8002994:	4616      	mov	r6, r2
 8002996:	e7bc      	b.n	8002912 <_printf_i+0x146>
 8002998:	6833      	ldr	r3, [r6, #0]
 800299a:	1d1a      	adds	r2, r3, #4
 800299c:	6032      	str	r2, [r6, #0]
 800299e:	681e      	ldr	r6, [r3, #0]
 80029a0:	6862      	ldr	r2, [r4, #4]
 80029a2:	2100      	movs	r1, #0
 80029a4:	4630      	mov	r0, r6
 80029a6:	f7fd fc13 	bl	80001d0 <memchr>
 80029aa:	b108      	cbz	r0, 80029b0 <_printf_i+0x1e4>
 80029ac:	1b80      	subs	r0, r0, r6
 80029ae:	6060      	str	r0, [r4, #4]
 80029b0:	6863      	ldr	r3, [r4, #4]
 80029b2:	6123      	str	r3, [r4, #16]
 80029b4:	2300      	movs	r3, #0
 80029b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80029ba:	e7aa      	b.n	8002912 <_printf_i+0x146>
 80029bc:	6923      	ldr	r3, [r4, #16]
 80029be:	4632      	mov	r2, r6
 80029c0:	4649      	mov	r1, r9
 80029c2:	4640      	mov	r0, r8
 80029c4:	47d0      	blx	sl
 80029c6:	3001      	adds	r0, #1
 80029c8:	d0ad      	beq.n	8002926 <_printf_i+0x15a>
 80029ca:	6823      	ldr	r3, [r4, #0]
 80029cc:	079b      	lsls	r3, r3, #30
 80029ce:	d413      	bmi.n	80029f8 <_printf_i+0x22c>
 80029d0:	68e0      	ldr	r0, [r4, #12]
 80029d2:	9b03      	ldr	r3, [sp, #12]
 80029d4:	4298      	cmp	r0, r3
 80029d6:	bfb8      	it	lt
 80029d8:	4618      	movlt	r0, r3
 80029da:	e7a6      	b.n	800292a <_printf_i+0x15e>
 80029dc:	2301      	movs	r3, #1
 80029de:	4632      	mov	r2, r6
 80029e0:	4649      	mov	r1, r9
 80029e2:	4640      	mov	r0, r8
 80029e4:	47d0      	blx	sl
 80029e6:	3001      	adds	r0, #1
 80029e8:	d09d      	beq.n	8002926 <_printf_i+0x15a>
 80029ea:	3501      	adds	r5, #1
 80029ec:	68e3      	ldr	r3, [r4, #12]
 80029ee:	9903      	ldr	r1, [sp, #12]
 80029f0:	1a5b      	subs	r3, r3, r1
 80029f2:	42ab      	cmp	r3, r5
 80029f4:	dcf2      	bgt.n	80029dc <_printf_i+0x210>
 80029f6:	e7eb      	b.n	80029d0 <_printf_i+0x204>
 80029f8:	2500      	movs	r5, #0
 80029fa:	f104 0619 	add.w	r6, r4, #25
 80029fe:	e7f5      	b.n	80029ec <_printf_i+0x220>
 8002a00:	080050bf 	.word	0x080050bf
 8002a04:	080050d0 	.word	0x080050d0

08002a08 <std>:
 8002a08:	2300      	movs	r3, #0
 8002a0a:	b510      	push	{r4, lr}
 8002a0c:	4604      	mov	r4, r0
 8002a0e:	e9c0 3300 	strd	r3, r3, [r0]
 8002a12:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002a16:	6083      	str	r3, [r0, #8]
 8002a18:	8181      	strh	r1, [r0, #12]
 8002a1a:	6643      	str	r3, [r0, #100]	@ 0x64
 8002a1c:	81c2      	strh	r2, [r0, #14]
 8002a1e:	6183      	str	r3, [r0, #24]
 8002a20:	4619      	mov	r1, r3
 8002a22:	2208      	movs	r2, #8
 8002a24:	305c      	adds	r0, #92	@ 0x5c
 8002a26:	f000 f9f9 	bl	8002e1c <memset>
 8002a2a:	4b0d      	ldr	r3, [pc, #52]	@ (8002a60 <std+0x58>)
 8002a2c:	6263      	str	r3, [r4, #36]	@ 0x24
 8002a2e:	4b0d      	ldr	r3, [pc, #52]	@ (8002a64 <std+0x5c>)
 8002a30:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002a32:	4b0d      	ldr	r3, [pc, #52]	@ (8002a68 <std+0x60>)
 8002a34:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002a36:	4b0d      	ldr	r3, [pc, #52]	@ (8002a6c <std+0x64>)
 8002a38:	6323      	str	r3, [r4, #48]	@ 0x30
 8002a3a:	4b0d      	ldr	r3, [pc, #52]	@ (8002a70 <std+0x68>)
 8002a3c:	6224      	str	r4, [r4, #32]
 8002a3e:	429c      	cmp	r4, r3
 8002a40:	d006      	beq.n	8002a50 <std+0x48>
 8002a42:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002a46:	4294      	cmp	r4, r2
 8002a48:	d002      	beq.n	8002a50 <std+0x48>
 8002a4a:	33d0      	adds	r3, #208	@ 0xd0
 8002a4c:	429c      	cmp	r4, r3
 8002a4e:	d105      	bne.n	8002a5c <std+0x54>
 8002a50:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002a58:	f000 ba5c 	b.w	8002f14 <__retarget_lock_init_recursive>
 8002a5c:	bd10      	pop	{r4, pc}
 8002a5e:	bf00      	nop
 8002a60:	08002c6d 	.word	0x08002c6d
 8002a64:	08002c8f 	.word	0x08002c8f
 8002a68:	08002cc7 	.word	0x08002cc7
 8002a6c:	08002ceb 	.word	0x08002ceb
 8002a70:	20000228 	.word	0x20000228

08002a74 <stdio_exit_handler>:
 8002a74:	4a02      	ldr	r2, [pc, #8]	@ (8002a80 <stdio_exit_handler+0xc>)
 8002a76:	4903      	ldr	r1, [pc, #12]	@ (8002a84 <stdio_exit_handler+0x10>)
 8002a78:	4803      	ldr	r0, [pc, #12]	@ (8002a88 <stdio_exit_handler+0x14>)
 8002a7a:	f000 b869 	b.w	8002b50 <_fwalk_sglue>
 8002a7e:	bf00      	nop
 8002a80:	20000000 	.word	0x20000000
 8002a84:	08004841 	.word	0x08004841
 8002a88:	20000010 	.word	0x20000010

08002a8c <cleanup_stdio>:
 8002a8c:	6841      	ldr	r1, [r0, #4]
 8002a8e:	4b0c      	ldr	r3, [pc, #48]	@ (8002ac0 <cleanup_stdio+0x34>)
 8002a90:	4299      	cmp	r1, r3
 8002a92:	b510      	push	{r4, lr}
 8002a94:	4604      	mov	r4, r0
 8002a96:	d001      	beq.n	8002a9c <cleanup_stdio+0x10>
 8002a98:	f001 fed2 	bl	8004840 <_fflush_r>
 8002a9c:	68a1      	ldr	r1, [r4, #8]
 8002a9e:	4b09      	ldr	r3, [pc, #36]	@ (8002ac4 <cleanup_stdio+0x38>)
 8002aa0:	4299      	cmp	r1, r3
 8002aa2:	d002      	beq.n	8002aaa <cleanup_stdio+0x1e>
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	f001 fecb 	bl	8004840 <_fflush_r>
 8002aaa:	68e1      	ldr	r1, [r4, #12]
 8002aac:	4b06      	ldr	r3, [pc, #24]	@ (8002ac8 <cleanup_stdio+0x3c>)
 8002aae:	4299      	cmp	r1, r3
 8002ab0:	d004      	beq.n	8002abc <cleanup_stdio+0x30>
 8002ab2:	4620      	mov	r0, r4
 8002ab4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ab8:	f001 bec2 	b.w	8004840 <_fflush_r>
 8002abc:	bd10      	pop	{r4, pc}
 8002abe:	bf00      	nop
 8002ac0:	20000228 	.word	0x20000228
 8002ac4:	20000290 	.word	0x20000290
 8002ac8:	200002f8 	.word	0x200002f8

08002acc <global_stdio_init.part.0>:
 8002acc:	b510      	push	{r4, lr}
 8002ace:	4b0b      	ldr	r3, [pc, #44]	@ (8002afc <global_stdio_init.part.0+0x30>)
 8002ad0:	4c0b      	ldr	r4, [pc, #44]	@ (8002b00 <global_stdio_init.part.0+0x34>)
 8002ad2:	4a0c      	ldr	r2, [pc, #48]	@ (8002b04 <global_stdio_init.part.0+0x38>)
 8002ad4:	601a      	str	r2, [r3, #0]
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	2200      	movs	r2, #0
 8002ada:	2104      	movs	r1, #4
 8002adc:	f7ff ff94 	bl	8002a08 <std>
 8002ae0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002ae4:	2201      	movs	r2, #1
 8002ae6:	2109      	movs	r1, #9
 8002ae8:	f7ff ff8e 	bl	8002a08 <std>
 8002aec:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002af0:	2202      	movs	r2, #2
 8002af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002af6:	2112      	movs	r1, #18
 8002af8:	f7ff bf86 	b.w	8002a08 <std>
 8002afc:	20000360 	.word	0x20000360
 8002b00:	20000228 	.word	0x20000228
 8002b04:	08002a75 	.word	0x08002a75

08002b08 <__sfp_lock_acquire>:
 8002b08:	4801      	ldr	r0, [pc, #4]	@ (8002b10 <__sfp_lock_acquire+0x8>)
 8002b0a:	f000 ba04 	b.w	8002f16 <__retarget_lock_acquire_recursive>
 8002b0e:	bf00      	nop
 8002b10:	20000369 	.word	0x20000369

08002b14 <__sfp_lock_release>:
 8002b14:	4801      	ldr	r0, [pc, #4]	@ (8002b1c <__sfp_lock_release+0x8>)
 8002b16:	f000 b9ff 	b.w	8002f18 <__retarget_lock_release_recursive>
 8002b1a:	bf00      	nop
 8002b1c:	20000369 	.word	0x20000369

08002b20 <__sinit>:
 8002b20:	b510      	push	{r4, lr}
 8002b22:	4604      	mov	r4, r0
 8002b24:	f7ff fff0 	bl	8002b08 <__sfp_lock_acquire>
 8002b28:	6a23      	ldr	r3, [r4, #32]
 8002b2a:	b11b      	cbz	r3, 8002b34 <__sinit+0x14>
 8002b2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b30:	f7ff bff0 	b.w	8002b14 <__sfp_lock_release>
 8002b34:	4b04      	ldr	r3, [pc, #16]	@ (8002b48 <__sinit+0x28>)
 8002b36:	6223      	str	r3, [r4, #32]
 8002b38:	4b04      	ldr	r3, [pc, #16]	@ (8002b4c <__sinit+0x2c>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	d1f5      	bne.n	8002b2c <__sinit+0xc>
 8002b40:	f7ff ffc4 	bl	8002acc <global_stdio_init.part.0>
 8002b44:	e7f2      	b.n	8002b2c <__sinit+0xc>
 8002b46:	bf00      	nop
 8002b48:	08002a8d 	.word	0x08002a8d
 8002b4c:	20000360 	.word	0x20000360

08002b50 <_fwalk_sglue>:
 8002b50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002b54:	4607      	mov	r7, r0
 8002b56:	4688      	mov	r8, r1
 8002b58:	4614      	mov	r4, r2
 8002b5a:	2600      	movs	r6, #0
 8002b5c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002b60:	f1b9 0901 	subs.w	r9, r9, #1
 8002b64:	d505      	bpl.n	8002b72 <_fwalk_sglue+0x22>
 8002b66:	6824      	ldr	r4, [r4, #0]
 8002b68:	2c00      	cmp	r4, #0
 8002b6a:	d1f7      	bne.n	8002b5c <_fwalk_sglue+0xc>
 8002b6c:	4630      	mov	r0, r6
 8002b6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002b72:	89ab      	ldrh	r3, [r5, #12]
 8002b74:	2b01      	cmp	r3, #1
 8002b76:	d907      	bls.n	8002b88 <_fwalk_sglue+0x38>
 8002b78:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002b7c:	3301      	adds	r3, #1
 8002b7e:	d003      	beq.n	8002b88 <_fwalk_sglue+0x38>
 8002b80:	4629      	mov	r1, r5
 8002b82:	4638      	mov	r0, r7
 8002b84:	47c0      	blx	r8
 8002b86:	4306      	orrs	r6, r0
 8002b88:	3568      	adds	r5, #104	@ 0x68
 8002b8a:	e7e9      	b.n	8002b60 <_fwalk_sglue+0x10>

08002b8c <iprintf>:
 8002b8c:	b40f      	push	{r0, r1, r2, r3}
 8002b8e:	b507      	push	{r0, r1, r2, lr}
 8002b90:	4906      	ldr	r1, [pc, #24]	@ (8002bac <iprintf+0x20>)
 8002b92:	ab04      	add	r3, sp, #16
 8002b94:	6808      	ldr	r0, [r1, #0]
 8002b96:	f853 2b04 	ldr.w	r2, [r3], #4
 8002b9a:	6881      	ldr	r1, [r0, #8]
 8002b9c:	9301      	str	r3, [sp, #4]
 8002b9e:	f001 fcb7 	bl	8004510 <_vfiprintf_r>
 8002ba2:	b003      	add	sp, #12
 8002ba4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ba8:	b004      	add	sp, #16
 8002baa:	4770      	bx	lr
 8002bac:	2000000c 	.word	0x2000000c

08002bb0 <_puts_r>:
 8002bb0:	6a03      	ldr	r3, [r0, #32]
 8002bb2:	b570      	push	{r4, r5, r6, lr}
 8002bb4:	6884      	ldr	r4, [r0, #8]
 8002bb6:	4605      	mov	r5, r0
 8002bb8:	460e      	mov	r6, r1
 8002bba:	b90b      	cbnz	r3, 8002bc0 <_puts_r+0x10>
 8002bbc:	f7ff ffb0 	bl	8002b20 <__sinit>
 8002bc0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002bc2:	07db      	lsls	r3, r3, #31
 8002bc4:	d405      	bmi.n	8002bd2 <_puts_r+0x22>
 8002bc6:	89a3      	ldrh	r3, [r4, #12]
 8002bc8:	0598      	lsls	r0, r3, #22
 8002bca:	d402      	bmi.n	8002bd2 <_puts_r+0x22>
 8002bcc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002bce:	f000 f9a2 	bl	8002f16 <__retarget_lock_acquire_recursive>
 8002bd2:	89a3      	ldrh	r3, [r4, #12]
 8002bd4:	0719      	lsls	r1, r3, #28
 8002bd6:	d502      	bpl.n	8002bde <_puts_r+0x2e>
 8002bd8:	6923      	ldr	r3, [r4, #16]
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d135      	bne.n	8002c4a <_puts_r+0x9a>
 8002bde:	4621      	mov	r1, r4
 8002be0:	4628      	mov	r0, r5
 8002be2:	f000 f8c5 	bl	8002d70 <__swsetup_r>
 8002be6:	b380      	cbz	r0, 8002c4a <_puts_r+0x9a>
 8002be8:	f04f 35ff 	mov.w	r5, #4294967295
 8002bec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002bee:	07da      	lsls	r2, r3, #31
 8002bf0:	d405      	bmi.n	8002bfe <_puts_r+0x4e>
 8002bf2:	89a3      	ldrh	r3, [r4, #12]
 8002bf4:	059b      	lsls	r3, r3, #22
 8002bf6:	d402      	bmi.n	8002bfe <_puts_r+0x4e>
 8002bf8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002bfa:	f000 f98d 	bl	8002f18 <__retarget_lock_release_recursive>
 8002bfe:	4628      	mov	r0, r5
 8002c00:	bd70      	pop	{r4, r5, r6, pc}
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	da04      	bge.n	8002c10 <_puts_r+0x60>
 8002c06:	69a2      	ldr	r2, [r4, #24]
 8002c08:	429a      	cmp	r2, r3
 8002c0a:	dc17      	bgt.n	8002c3c <_puts_r+0x8c>
 8002c0c:	290a      	cmp	r1, #10
 8002c0e:	d015      	beq.n	8002c3c <_puts_r+0x8c>
 8002c10:	6823      	ldr	r3, [r4, #0]
 8002c12:	1c5a      	adds	r2, r3, #1
 8002c14:	6022      	str	r2, [r4, #0]
 8002c16:	7019      	strb	r1, [r3, #0]
 8002c18:	68a3      	ldr	r3, [r4, #8]
 8002c1a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002c1e:	3b01      	subs	r3, #1
 8002c20:	60a3      	str	r3, [r4, #8]
 8002c22:	2900      	cmp	r1, #0
 8002c24:	d1ed      	bne.n	8002c02 <_puts_r+0x52>
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	da11      	bge.n	8002c4e <_puts_r+0x9e>
 8002c2a:	4622      	mov	r2, r4
 8002c2c:	210a      	movs	r1, #10
 8002c2e:	4628      	mov	r0, r5
 8002c30:	f000 f85f 	bl	8002cf2 <__swbuf_r>
 8002c34:	3001      	adds	r0, #1
 8002c36:	d0d7      	beq.n	8002be8 <_puts_r+0x38>
 8002c38:	250a      	movs	r5, #10
 8002c3a:	e7d7      	b.n	8002bec <_puts_r+0x3c>
 8002c3c:	4622      	mov	r2, r4
 8002c3e:	4628      	mov	r0, r5
 8002c40:	f000 f857 	bl	8002cf2 <__swbuf_r>
 8002c44:	3001      	adds	r0, #1
 8002c46:	d1e7      	bne.n	8002c18 <_puts_r+0x68>
 8002c48:	e7ce      	b.n	8002be8 <_puts_r+0x38>
 8002c4a:	3e01      	subs	r6, #1
 8002c4c:	e7e4      	b.n	8002c18 <_puts_r+0x68>
 8002c4e:	6823      	ldr	r3, [r4, #0]
 8002c50:	1c5a      	adds	r2, r3, #1
 8002c52:	6022      	str	r2, [r4, #0]
 8002c54:	220a      	movs	r2, #10
 8002c56:	701a      	strb	r2, [r3, #0]
 8002c58:	e7ee      	b.n	8002c38 <_puts_r+0x88>
	...

08002c5c <puts>:
 8002c5c:	4b02      	ldr	r3, [pc, #8]	@ (8002c68 <puts+0xc>)
 8002c5e:	4601      	mov	r1, r0
 8002c60:	6818      	ldr	r0, [r3, #0]
 8002c62:	f7ff bfa5 	b.w	8002bb0 <_puts_r>
 8002c66:	bf00      	nop
 8002c68:	2000000c 	.word	0x2000000c

08002c6c <__sread>:
 8002c6c:	b510      	push	{r4, lr}
 8002c6e:	460c      	mov	r4, r1
 8002c70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002c74:	f000 f900 	bl	8002e78 <_read_r>
 8002c78:	2800      	cmp	r0, #0
 8002c7a:	bfab      	itete	ge
 8002c7c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002c7e:	89a3      	ldrhlt	r3, [r4, #12]
 8002c80:	181b      	addge	r3, r3, r0
 8002c82:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002c86:	bfac      	ite	ge
 8002c88:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002c8a:	81a3      	strhlt	r3, [r4, #12]
 8002c8c:	bd10      	pop	{r4, pc}

08002c8e <__swrite>:
 8002c8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c92:	461f      	mov	r7, r3
 8002c94:	898b      	ldrh	r3, [r1, #12]
 8002c96:	05db      	lsls	r3, r3, #23
 8002c98:	4605      	mov	r5, r0
 8002c9a:	460c      	mov	r4, r1
 8002c9c:	4616      	mov	r6, r2
 8002c9e:	d505      	bpl.n	8002cac <__swrite+0x1e>
 8002ca0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002ca4:	2302      	movs	r3, #2
 8002ca6:	2200      	movs	r2, #0
 8002ca8:	f000 f8d4 	bl	8002e54 <_lseek_r>
 8002cac:	89a3      	ldrh	r3, [r4, #12]
 8002cae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002cb2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002cb6:	81a3      	strh	r3, [r4, #12]
 8002cb8:	4632      	mov	r2, r6
 8002cba:	463b      	mov	r3, r7
 8002cbc:	4628      	mov	r0, r5
 8002cbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002cc2:	f000 b8eb 	b.w	8002e9c <_write_r>

08002cc6 <__sseek>:
 8002cc6:	b510      	push	{r4, lr}
 8002cc8:	460c      	mov	r4, r1
 8002cca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cce:	f000 f8c1 	bl	8002e54 <_lseek_r>
 8002cd2:	1c43      	adds	r3, r0, #1
 8002cd4:	89a3      	ldrh	r3, [r4, #12]
 8002cd6:	bf15      	itete	ne
 8002cd8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002cda:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002cde:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002ce2:	81a3      	strheq	r3, [r4, #12]
 8002ce4:	bf18      	it	ne
 8002ce6:	81a3      	strhne	r3, [r4, #12]
 8002ce8:	bd10      	pop	{r4, pc}

08002cea <__sclose>:
 8002cea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cee:	f000 b8a1 	b.w	8002e34 <_close_r>

08002cf2 <__swbuf_r>:
 8002cf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cf4:	460e      	mov	r6, r1
 8002cf6:	4614      	mov	r4, r2
 8002cf8:	4605      	mov	r5, r0
 8002cfa:	b118      	cbz	r0, 8002d04 <__swbuf_r+0x12>
 8002cfc:	6a03      	ldr	r3, [r0, #32]
 8002cfe:	b90b      	cbnz	r3, 8002d04 <__swbuf_r+0x12>
 8002d00:	f7ff ff0e 	bl	8002b20 <__sinit>
 8002d04:	69a3      	ldr	r3, [r4, #24]
 8002d06:	60a3      	str	r3, [r4, #8]
 8002d08:	89a3      	ldrh	r3, [r4, #12]
 8002d0a:	071a      	lsls	r2, r3, #28
 8002d0c:	d501      	bpl.n	8002d12 <__swbuf_r+0x20>
 8002d0e:	6923      	ldr	r3, [r4, #16]
 8002d10:	b943      	cbnz	r3, 8002d24 <__swbuf_r+0x32>
 8002d12:	4621      	mov	r1, r4
 8002d14:	4628      	mov	r0, r5
 8002d16:	f000 f82b 	bl	8002d70 <__swsetup_r>
 8002d1a:	b118      	cbz	r0, 8002d24 <__swbuf_r+0x32>
 8002d1c:	f04f 37ff 	mov.w	r7, #4294967295
 8002d20:	4638      	mov	r0, r7
 8002d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d24:	6823      	ldr	r3, [r4, #0]
 8002d26:	6922      	ldr	r2, [r4, #16]
 8002d28:	1a98      	subs	r0, r3, r2
 8002d2a:	6963      	ldr	r3, [r4, #20]
 8002d2c:	b2f6      	uxtb	r6, r6
 8002d2e:	4283      	cmp	r3, r0
 8002d30:	4637      	mov	r7, r6
 8002d32:	dc05      	bgt.n	8002d40 <__swbuf_r+0x4e>
 8002d34:	4621      	mov	r1, r4
 8002d36:	4628      	mov	r0, r5
 8002d38:	f001 fd82 	bl	8004840 <_fflush_r>
 8002d3c:	2800      	cmp	r0, #0
 8002d3e:	d1ed      	bne.n	8002d1c <__swbuf_r+0x2a>
 8002d40:	68a3      	ldr	r3, [r4, #8]
 8002d42:	3b01      	subs	r3, #1
 8002d44:	60a3      	str	r3, [r4, #8]
 8002d46:	6823      	ldr	r3, [r4, #0]
 8002d48:	1c5a      	adds	r2, r3, #1
 8002d4a:	6022      	str	r2, [r4, #0]
 8002d4c:	701e      	strb	r6, [r3, #0]
 8002d4e:	6962      	ldr	r2, [r4, #20]
 8002d50:	1c43      	adds	r3, r0, #1
 8002d52:	429a      	cmp	r2, r3
 8002d54:	d004      	beq.n	8002d60 <__swbuf_r+0x6e>
 8002d56:	89a3      	ldrh	r3, [r4, #12]
 8002d58:	07db      	lsls	r3, r3, #31
 8002d5a:	d5e1      	bpl.n	8002d20 <__swbuf_r+0x2e>
 8002d5c:	2e0a      	cmp	r6, #10
 8002d5e:	d1df      	bne.n	8002d20 <__swbuf_r+0x2e>
 8002d60:	4621      	mov	r1, r4
 8002d62:	4628      	mov	r0, r5
 8002d64:	f001 fd6c 	bl	8004840 <_fflush_r>
 8002d68:	2800      	cmp	r0, #0
 8002d6a:	d0d9      	beq.n	8002d20 <__swbuf_r+0x2e>
 8002d6c:	e7d6      	b.n	8002d1c <__swbuf_r+0x2a>
	...

08002d70 <__swsetup_r>:
 8002d70:	b538      	push	{r3, r4, r5, lr}
 8002d72:	4b29      	ldr	r3, [pc, #164]	@ (8002e18 <__swsetup_r+0xa8>)
 8002d74:	4605      	mov	r5, r0
 8002d76:	6818      	ldr	r0, [r3, #0]
 8002d78:	460c      	mov	r4, r1
 8002d7a:	b118      	cbz	r0, 8002d84 <__swsetup_r+0x14>
 8002d7c:	6a03      	ldr	r3, [r0, #32]
 8002d7e:	b90b      	cbnz	r3, 8002d84 <__swsetup_r+0x14>
 8002d80:	f7ff fece 	bl	8002b20 <__sinit>
 8002d84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002d88:	0719      	lsls	r1, r3, #28
 8002d8a:	d422      	bmi.n	8002dd2 <__swsetup_r+0x62>
 8002d8c:	06da      	lsls	r2, r3, #27
 8002d8e:	d407      	bmi.n	8002da0 <__swsetup_r+0x30>
 8002d90:	2209      	movs	r2, #9
 8002d92:	602a      	str	r2, [r5, #0]
 8002d94:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002d98:	81a3      	strh	r3, [r4, #12]
 8002d9a:	f04f 30ff 	mov.w	r0, #4294967295
 8002d9e:	e033      	b.n	8002e08 <__swsetup_r+0x98>
 8002da0:	0758      	lsls	r0, r3, #29
 8002da2:	d512      	bpl.n	8002dca <__swsetup_r+0x5a>
 8002da4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8002da6:	b141      	cbz	r1, 8002dba <__swsetup_r+0x4a>
 8002da8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002dac:	4299      	cmp	r1, r3
 8002dae:	d002      	beq.n	8002db6 <__swsetup_r+0x46>
 8002db0:	4628      	mov	r0, r5
 8002db2:	f000 ff0d 	bl	8003bd0 <_free_r>
 8002db6:	2300      	movs	r3, #0
 8002db8:	6363      	str	r3, [r4, #52]	@ 0x34
 8002dba:	89a3      	ldrh	r3, [r4, #12]
 8002dbc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8002dc0:	81a3      	strh	r3, [r4, #12]
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	6063      	str	r3, [r4, #4]
 8002dc6:	6923      	ldr	r3, [r4, #16]
 8002dc8:	6023      	str	r3, [r4, #0]
 8002dca:	89a3      	ldrh	r3, [r4, #12]
 8002dcc:	f043 0308 	orr.w	r3, r3, #8
 8002dd0:	81a3      	strh	r3, [r4, #12]
 8002dd2:	6923      	ldr	r3, [r4, #16]
 8002dd4:	b94b      	cbnz	r3, 8002dea <__swsetup_r+0x7a>
 8002dd6:	89a3      	ldrh	r3, [r4, #12]
 8002dd8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8002ddc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002de0:	d003      	beq.n	8002dea <__swsetup_r+0x7a>
 8002de2:	4621      	mov	r1, r4
 8002de4:	4628      	mov	r0, r5
 8002de6:	f001 fd79 	bl	80048dc <__smakebuf_r>
 8002dea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002dee:	f013 0201 	ands.w	r2, r3, #1
 8002df2:	d00a      	beq.n	8002e0a <__swsetup_r+0x9a>
 8002df4:	2200      	movs	r2, #0
 8002df6:	60a2      	str	r2, [r4, #8]
 8002df8:	6962      	ldr	r2, [r4, #20]
 8002dfa:	4252      	negs	r2, r2
 8002dfc:	61a2      	str	r2, [r4, #24]
 8002dfe:	6922      	ldr	r2, [r4, #16]
 8002e00:	b942      	cbnz	r2, 8002e14 <__swsetup_r+0xa4>
 8002e02:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8002e06:	d1c5      	bne.n	8002d94 <__swsetup_r+0x24>
 8002e08:	bd38      	pop	{r3, r4, r5, pc}
 8002e0a:	0799      	lsls	r1, r3, #30
 8002e0c:	bf58      	it	pl
 8002e0e:	6962      	ldrpl	r2, [r4, #20]
 8002e10:	60a2      	str	r2, [r4, #8]
 8002e12:	e7f4      	b.n	8002dfe <__swsetup_r+0x8e>
 8002e14:	2000      	movs	r0, #0
 8002e16:	e7f7      	b.n	8002e08 <__swsetup_r+0x98>
 8002e18:	2000000c 	.word	0x2000000c

08002e1c <memset>:
 8002e1c:	4402      	add	r2, r0
 8002e1e:	4603      	mov	r3, r0
 8002e20:	4293      	cmp	r3, r2
 8002e22:	d100      	bne.n	8002e26 <memset+0xa>
 8002e24:	4770      	bx	lr
 8002e26:	f803 1b01 	strb.w	r1, [r3], #1
 8002e2a:	e7f9      	b.n	8002e20 <memset+0x4>

08002e2c <_localeconv_r>:
 8002e2c:	4800      	ldr	r0, [pc, #0]	@ (8002e30 <_localeconv_r+0x4>)
 8002e2e:	4770      	bx	lr
 8002e30:	2000014c 	.word	0x2000014c

08002e34 <_close_r>:
 8002e34:	b538      	push	{r3, r4, r5, lr}
 8002e36:	4d06      	ldr	r5, [pc, #24]	@ (8002e50 <_close_r+0x1c>)
 8002e38:	2300      	movs	r3, #0
 8002e3a:	4604      	mov	r4, r0
 8002e3c:	4608      	mov	r0, r1
 8002e3e:	602b      	str	r3, [r5, #0]
 8002e40:	f7ff f8fb 	bl	800203a <_close>
 8002e44:	1c43      	adds	r3, r0, #1
 8002e46:	d102      	bne.n	8002e4e <_close_r+0x1a>
 8002e48:	682b      	ldr	r3, [r5, #0]
 8002e4a:	b103      	cbz	r3, 8002e4e <_close_r+0x1a>
 8002e4c:	6023      	str	r3, [r4, #0]
 8002e4e:	bd38      	pop	{r3, r4, r5, pc}
 8002e50:	20000364 	.word	0x20000364

08002e54 <_lseek_r>:
 8002e54:	b538      	push	{r3, r4, r5, lr}
 8002e56:	4d07      	ldr	r5, [pc, #28]	@ (8002e74 <_lseek_r+0x20>)
 8002e58:	4604      	mov	r4, r0
 8002e5a:	4608      	mov	r0, r1
 8002e5c:	4611      	mov	r1, r2
 8002e5e:	2200      	movs	r2, #0
 8002e60:	602a      	str	r2, [r5, #0]
 8002e62:	461a      	mov	r2, r3
 8002e64:	f7ff f90d 	bl	8002082 <_lseek>
 8002e68:	1c43      	adds	r3, r0, #1
 8002e6a:	d102      	bne.n	8002e72 <_lseek_r+0x1e>
 8002e6c:	682b      	ldr	r3, [r5, #0]
 8002e6e:	b103      	cbz	r3, 8002e72 <_lseek_r+0x1e>
 8002e70:	6023      	str	r3, [r4, #0]
 8002e72:	bd38      	pop	{r3, r4, r5, pc}
 8002e74:	20000364 	.word	0x20000364

08002e78 <_read_r>:
 8002e78:	b538      	push	{r3, r4, r5, lr}
 8002e7a:	4d07      	ldr	r5, [pc, #28]	@ (8002e98 <_read_r+0x20>)
 8002e7c:	4604      	mov	r4, r0
 8002e7e:	4608      	mov	r0, r1
 8002e80:	4611      	mov	r1, r2
 8002e82:	2200      	movs	r2, #0
 8002e84:	602a      	str	r2, [r5, #0]
 8002e86:	461a      	mov	r2, r3
 8002e88:	f7ff f89e 	bl	8001fc8 <_read>
 8002e8c:	1c43      	adds	r3, r0, #1
 8002e8e:	d102      	bne.n	8002e96 <_read_r+0x1e>
 8002e90:	682b      	ldr	r3, [r5, #0]
 8002e92:	b103      	cbz	r3, 8002e96 <_read_r+0x1e>
 8002e94:	6023      	str	r3, [r4, #0]
 8002e96:	bd38      	pop	{r3, r4, r5, pc}
 8002e98:	20000364 	.word	0x20000364

08002e9c <_write_r>:
 8002e9c:	b538      	push	{r3, r4, r5, lr}
 8002e9e:	4d07      	ldr	r5, [pc, #28]	@ (8002ebc <_write_r+0x20>)
 8002ea0:	4604      	mov	r4, r0
 8002ea2:	4608      	mov	r0, r1
 8002ea4:	4611      	mov	r1, r2
 8002ea6:	2200      	movs	r2, #0
 8002ea8:	602a      	str	r2, [r5, #0]
 8002eaa:	461a      	mov	r2, r3
 8002eac:	f7ff f8a9 	bl	8002002 <_write>
 8002eb0:	1c43      	adds	r3, r0, #1
 8002eb2:	d102      	bne.n	8002eba <_write_r+0x1e>
 8002eb4:	682b      	ldr	r3, [r5, #0]
 8002eb6:	b103      	cbz	r3, 8002eba <_write_r+0x1e>
 8002eb8:	6023      	str	r3, [r4, #0]
 8002eba:	bd38      	pop	{r3, r4, r5, pc}
 8002ebc:	20000364 	.word	0x20000364

08002ec0 <__errno>:
 8002ec0:	4b01      	ldr	r3, [pc, #4]	@ (8002ec8 <__errno+0x8>)
 8002ec2:	6818      	ldr	r0, [r3, #0]
 8002ec4:	4770      	bx	lr
 8002ec6:	bf00      	nop
 8002ec8:	2000000c 	.word	0x2000000c

08002ecc <__libc_init_array>:
 8002ecc:	b570      	push	{r4, r5, r6, lr}
 8002ece:	4d0d      	ldr	r5, [pc, #52]	@ (8002f04 <__libc_init_array+0x38>)
 8002ed0:	4c0d      	ldr	r4, [pc, #52]	@ (8002f08 <__libc_init_array+0x3c>)
 8002ed2:	1b64      	subs	r4, r4, r5
 8002ed4:	10a4      	asrs	r4, r4, #2
 8002ed6:	2600      	movs	r6, #0
 8002ed8:	42a6      	cmp	r6, r4
 8002eda:	d109      	bne.n	8002ef0 <__libc_init_array+0x24>
 8002edc:	4d0b      	ldr	r5, [pc, #44]	@ (8002f0c <__libc_init_array+0x40>)
 8002ede:	4c0c      	ldr	r4, [pc, #48]	@ (8002f10 <__libc_init_array+0x44>)
 8002ee0:	f002 f802 	bl	8004ee8 <_init>
 8002ee4:	1b64      	subs	r4, r4, r5
 8002ee6:	10a4      	asrs	r4, r4, #2
 8002ee8:	2600      	movs	r6, #0
 8002eea:	42a6      	cmp	r6, r4
 8002eec:	d105      	bne.n	8002efa <__libc_init_array+0x2e>
 8002eee:	bd70      	pop	{r4, r5, r6, pc}
 8002ef0:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ef4:	4798      	blx	r3
 8002ef6:	3601      	adds	r6, #1
 8002ef8:	e7ee      	b.n	8002ed8 <__libc_init_array+0xc>
 8002efa:	f855 3b04 	ldr.w	r3, [r5], #4
 8002efe:	4798      	blx	r3
 8002f00:	3601      	adds	r6, #1
 8002f02:	e7f2      	b.n	8002eea <__libc_init_array+0x1e>
 8002f04:	08005434 	.word	0x08005434
 8002f08:	08005434 	.word	0x08005434
 8002f0c:	08005434 	.word	0x08005434
 8002f10:	08005438 	.word	0x08005438

08002f14 <__retarget_lock_init_recursive>:
 8002f14:	4770      	bx	lr

08002f16 <__retarget_lock_acquire_recursive>:
 8002f16:	4770      	bx	lr

08002f18 <__retarget_lock_release_recursive>:
 8002f18:	4770      	bx	lr

08002f1a <quorem>:
 8002f1a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f1e:	6903      	ldr	r3, [r0, #16]
 8002f20:	690c      	ldr	r4, [r1, #16]
 8002f22:	42a3      	cmp	r3, r4
 8002f24:	4607      	mov	r7, r0
 8002f26:	db7e      	blt.n	8003026 <quorem+0x10c>
 8002f28:	3c01      	subs	r4, #1
 8002f2a:	f101 0814 	add.w	r8, r1, #20
 8002f2e:	00a3      	lsls	r3, r4, #2
 8002f30:	f100 0514 	add.w	r5, r0, #20
 8002f34:	9300      	str	r3, [sp, #0]
 8002f36:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002f3a:	9301      	str	r3, [sp, #4]
 8002f3c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002f40:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002f44:	3301      	adds	r3, #1
 8002f46:	429a      	cmp	r2, r3
 8002f48:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002f4c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002f50:	d32e      	bcc.n	8002fb0 <quorem+0x96>
 8002f52:	f04f 0a00 	mov.w	sl, #0
 8002f56:	46c4      	mov	ip, r8
 8002f58:	46ae      	mov	lr, r5
 8002f5a:	46d3      	mov	fp, sl
 8002f5c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002f60:	b298      	uxth	r0, r3
 8002f62:	fb06 a000 	mla	r0, r6, r0, sl
 8002f66:	0c02      	lsrs	r2, r0, #16
 8002f68:	0c1b      	lsrs	r3, r3, #16
 8002f6a:	fb06 2303 	mla	r3, r6, r3, r2
 8002f6e:	f8de 2000 	ldr.w	r2, [lr]
 8002f72:	b280      	uxth	r0, r0
 8002f74:	b292      	uxth	r2, r2
 8002f76:	1a12      	subs	r2, r2, r0
 8002f78:	445a      	add	r2, fp
 8002f7a:	f8de 0000 	ldr.w	r0, [lr]
 8002f7e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002f82:	b29b      	uxth	r3, r3
 8002f84:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002f88:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002f8c:	b292      	uxth	r2, r2
 8002f8e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002f92:	45e1      	cmp	r9, ip
 8002f94:	f84e 2b04 	str.w	r2, [lr], #4
 8002f98:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002f9c:	d2de      	bcs.n	8002f5c <quorem+0x42>
 8002f9e:	9b00      	ldr	r3, [sp, #0]
 8002fa0:	58eb      	ldr	r3, [r5, r3]
 8002fa2:	b92b      	cbnz	r3, 8002fb0 <quorem+0x96>
 8002fa4:	9b01      	ldr	r3, [sp, #4]
 8002fa6:	3b04      	subs	r3, #4
 8002fa8:	429d      	cmp	r5, r3
 8002faa:	461a      	mov	r2, r3
 8002fac:	d32f      	bcc.n	800300e <quorem+0xf4>
 8002fae:	613c      	str	r4, [r7, #16]
 8002fb0:	4638      	mov	r0, r7
 8002fb2:	f001 f97f 	bl	80042b4 <__mcmp>
 8002fb6:	2800      	cmp	r0, #0
 8002fb8:	db25      	blt.n	8003006 <quorem+0xec>
 8002fba:	4629      	mov	r1, r5
 8002fbc:	2000      	movs	r0, #0
 8002fbe:	f858 2b04 	ldr.w	r2, [r8], #4
 8002fc2:	f8d1 c000 	ldr.w	ip, [r1]
 8002fc6:	fa1f fe82 	uxth.w	lr, r2
 8002fca:	fa1f f38c 	uxth.w	r3, ip
 8002fce:	eba3 030e 	sub.w	r3, r3, lr
 8002fd2:	4403      	add	r3, r0
 8002fd4:	0c12      	lsrs	r2, r2, #16
 8002fd6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002fda:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002fde:	b29b      	uxth	r3, r3
 8002fe0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002fe4:	45c1      	cmp	r9, r8
 8002fe6:	f841 3b04 	str.w	r3, [r1], #4
 8002fea:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002fee:	d2e6      	bcs.n	8002fbe <quorem+0xa4>
 8002ff0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002ff4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002ff8:	b922      	cbnz	r2, 8003004 <quorem+0xea>
 8002ffa:	3b04      	subs	r3, #4
 8002ffc:	429d      	cmp	r5, r3
 8002ffe:	461a      	mov	r2, r3
 8003000:	d30b      	bcc.n	800301a <quorem+0x100>
 8003002:	613c      	str	r4, [r7, #16]
 8003004:	3601      	adds	r6, #1
 8003006:	4630      	mov	r0, r6
 8003008:	b003      	add	sp, #12
 800300a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800300e:	6812      	ldr	r2, [r2, #0]
 8003010:	3b04      	subs	r3, #4
 8003012:	2a00      	cmp	r2, #0
 8003014:	d1cb      	bne.n	8002fae <quorem+0x94>
 8003016:	3c01      	subs	r4, #1
 8003018:	e7c6      	b.n	8002fa8 <quorem+0x8e>
 800301a:	6812      	ldr	r2, [r2, #0]
 800301c:	3b04      	subs	r3, #4
 800301e:	2a00      	cmp	r2, #0
 8003020:	d1ef      	bne.n	8003002 <quorem+0xe8>
 8003022:	3c01      	subs	r4, #1
 8003024:	e7ea      	b.n	8002ffc <quorem+0xe2>
 8003026:	2000      	movs	r0, #0
 8003028:	e7ee      	b.n	8003008 <quorem+0xee>
 800302a:	0000      	movs	r0, r0
 800302c:	0000      	movs	r0, r0
	...

08003030 <_dtoa_r>:
 8003030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003034:	69c7      	ldr	r7, [r0, #28]
 8003036:	b097      	sub	sp, #92	@ 0x5c
 8003038:	4614      	mov	r4, r2
 800303a:	461d      	mov	r5, r3
 800303c:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8003040:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8003042:	4681      	mov	r9, r0
 8003044:	b97f      	cbnz	r7, 8003066 <_dtoa_r+0x36>
 8003046:	2010      	movs	r0, #16
 8003048:	f000 fe0c 	bl	8003c64 <malloc>
 800304c:	4602      	mov	r2, r0
 800304e:	f8c9 001c 	str.w	r0, [r9, #28]
 8003052:	b920      	cbnz	r0, 800305e <_dtoa_r+0x2e>
 8003054:	4baa      	ldr	r3, [pc, #680]	@ (8003300 <_dtoa_r+0x2d0>)
 8003056:	21ef      	movs	r1, #239	@ 0xef
 8003058:	48aa      	ldr	r0, [pc, #680]	@ (8003304 <_dtoa_r+0x2d4>)
 800305a:	f001 fcbb 	bl	80049d4 <__assert_func>
 800305e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8003062:	6007      	str	r7, [r0, #0]
 8003064:	60c7      	str	r7, [r0, #12]
 8003066:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800306a:	6819      	ldr	r1, [r3, #0]
 800306c:	b159      	cbz	r1, 8003086 <_dtoa_r+0x56>
 800306e:	685a      	ldr	r2, [r3, #4]
 8003070:	604a      	str	r2, [r1, #4]
 8003072:	2301      	movs	r3, #1
 8003074:	4093      	lsls	r3, r2
 8003076:	608b      	str	r3, [r1, #8]
 8003078:	4648      	mov	r0, r9
 800307a:	f000 fee9 	bl	8003e50 <_Bfree>
 800307e:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003082:	2200      	movs	r2, #0
 8003084:	601a      	str	r2, [r3, #0]
 8003086:	1e2b      	subs	r3, r5, #0
 8003088:	bfb9      	ittee	lt
 800308a:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800308e:	9307      	strlt	r3, [sp, #28]
 8003090:	2300      	movge	r3, #0
 8003092:	6033      	strge	r3, [r6, #0]
 8003094:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8003098:	4b9b      	ldr	r3, [pc, #620]	@ (8003308 <_dtoa_r+0x2d8>)
 800309a:	bfbc      	itt	lt
 800309c:	2201      	movlt	r2, #1
 800309e:	6032      	strlt	r2, [r6, #0]
 80030a0:	ea33 0308 	bics.w	r3, r3, r8
 80030a4:	d112      	bne.n	80030cc <_dtoa_r+0x9c>
 80030a6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80030a8:	f242 730f 	movw	r3, #9999	@ 0x270f
 80030ac:	6013      	str	r3, [r2, #0]
 80030ae:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80030b2:	4323      	orrs	r3, r4
 80030b4:	f000 855b 	beq.w	8003b6e <_dtoa_r+0xb3e>
 80030b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80030ba:	f8df a250 	ldr.w	sl, [pc, #592]	@ 800330c <_dtoa_r+0x2dc>
 80030be:	2b00      	cmp	r3, #0
 80030c0:	f000 855d 	beq.w	8003b7e <_dtoa_r+0xb4e>
 80030c4:	f10a 0303 	add.w	r3, sl, #3
 80030c8:	f000 bd57 	b.w	8003b7a <_dtoa_r+0xb4a>
 80030cc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80030d0:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80030d4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80030d8:	2200      	movs	r2, #0
 80030da:	2300      	movs	r3, #0
 80030dc:	f7fd fcf4 	bl	8000ac8 <__aeabi_dcmpeq>
 80030e0:	4607      	mov	r7, r0
 80030e2:	b158      	cbz	r0, 80030fc <_dtoa_r+0xcc>
 80030e4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80030e6:	2301      	movs	r3, #1
 80030e8:	6013      	str	r3, [r2, #0]
 80030ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80030ec:	b113      	cbz	r3, 80030f4 <_dtoa_r+0xc4>
 80030ee:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80030f0:	4b87      	ldr	r3, [pc, #540]	@ (8003310 <_dtoa_r+0x2e0>)
 80030f2:	6013      	str	r3, [r2, #0]
 80030f4:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 8003314 <_dtoa_r+0x2e4>
 80030f8:	f000 bd41 	b.w	8003b7e <_dtoa_r+0xb4e>
 80030fc:	ab14      	add	r3, sp, #80	@ 0x50
 80030fe:	9301      	str	r3, [sp, #4]
 8003100:	ab15      	add	r3, sp, #84	@ 0x54
 8003102:	9300      	str	r3, [sp, #0]
 8003104:	4648      	mov	r0, r9
 8003106:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800310a:	f001 f981 	bl	8004410 <__d2b>
 800310e:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8003112:	9003      	str	r0, [sp, #12]
 8003114:	2e00      	cmp	r6, #0
 8003116:	d077      	beq.n	8003208 <_dtoa_r+0x1d8>
 8003118:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800311a:	9712      	str	r7, [sp, #72]	@ 0x48
 800311c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003120:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003124:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003128:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800312c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003130:	4619      	mov	r1, r3
 8003132:	2200      	movs	r2, #0
 8003134:	4b78      	ldr	r3, [pc, #480]	@ (8003318 <_dtoa_r+0x2e8>)
 8003136:	f7fd f8a7 	bl	8000288 <__aeabi_dsub>
 800313a:	a36b      	add	r3, pc, #428	@ (adr r3, 80032e8 <_dtoa_r+0x2b8>)
 800313c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003140:	f7fd fa5a 	bl	80005f8 <__aeabi_dmul>
 8003144:	a36a      	add	r3, pc, #424	@ (adr r3, 80032f0 <_dtoa_r+0x2c0>)
 8003146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800314a:	f7fd f89f 	bl	800028c <__adddf3>
 800314e:	4604      	mov	r4, r0
 8003150:	4630      	mov	r0, r6
 8003152:	460d      	mov	r5, r1
 8003154:	f7fd f9e6 	bl	8000524 <__aeabi_i2d>
 8003158:	a367      	add	r3, pc, #412	@ (adr r3, 80032f8 <_dtoa_r+0x2c8>)
 800315a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800315e:	f7fd fa4b 	bl	80005f8 <__aeabi_dmul>
 8003162:	4602      	mov	r2, r0
 8003164:	460b      	mov	r3, r1
 8003166:	4620      	mov	r0, r4
 8003168:	4629      	mov	r1, r5
 800316a:	f7fd f88f 	bl	800028c <__adddf3>
 800316e:	4604      	mov	r4, r0
 8003170:	460d      	mov	r5, r1
 8003172:	f7fd fcf1 	bl	8000b58 <__aeabi_d2iz>
 8003176:	2200      	movs	r2, #0
 8003178:	4607      	mov	r7, r0
 800317a:	2300      	movs	r3, #0
 800317c:	4620      	mov	r0, r4
 800317e:	4629      	mov	r1, r5
 8003180:	f7fd fcac 	bl	8000adc <__aeabi_dcmplt>
 8003184:	b140      	cbz	r0, 8003198 <_dtoa_r+0x168>
 8003186:	4638      	mov	r0, r7
 8003188:	f7fd f9cc 	bl	8000524 <__aeabi_i2d>
 800318c:	4622      	mov	r2, r4
 800318e:	462b      	mov	r3, r5
 8003190:	f7fd fc9a 	bl	8000ac8 <__aeabi_dcmpeq>
 8003194:	b900      	cbnz	r0, 8003198 <_dtoa_r+0x168>
 8003196:	3f01      	subs	r7, #1
 8003198:	2f16      	cmp	r7, #22
 800319a:	d853      	bhi.n	8003244 <_dtoa_r+0x214>
 800319c:	4b5f      	ldr	r3, [pc, #380]	@ (800331c <_dtoa_r+0x2ec>)
 800319e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80031a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031a6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80031aa:	f7fd fc97 	bl	8000adc <__aeabi_dcmplt>
 80031ae:	2800      	cmp	r0, #0
 80031b0:	d04a      	beq.n	8003248 <_dtoa_r+0x218>
 80031b2:	3f01      	subs	r7, #1
 80031b4:	2300      	movs	r3, #0
 80031b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80031b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80031ba:	1b9b      	subs	r3, r3, r6
 80031bc:	1e5a      	subs	r2, r3, #1
 80031be:	bf45      	ittet	mi
 80031c0:	f1c3 0301 	rsbmi	r3, r3, #1
 80031c4:	9304      	strmi	r3, [sp, #16]
 80031c6:	2300      	movpl	r3, #0
 80031c8:	2300      	movmi	r3, #0
 80031ca:	9209      	str	r2, [sp, #36]	@ 0x24
 80031cc:	bf54      	ite	pl
 80031ce:	9304      	strpl	r3, [sp, #16]
 80031d0:	9309      	strmi	r3, [sp, #36]	@ 0x24
 80031d2:	2f00      	cmp	r7, #0
 80031d4:	db3a      	blt.n	800324c <_dtoa_r+0x21c>
 80031d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031d8:	970e      	str	r7, [sp, #56]	@ 0x38
 80031da:	443b      	add	r3, r7
 80031dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80031de:	2300      	movs	r3, #0
 80031e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80031e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80031e4:	2b09      	cmp	r3, #9
 80031e6:	d864      	bhi.n	80032b2 <_dtoa_r+0x282>
 80031e8:	2b05      	cmp	r3, #5
 80031ea:	bfc4      	itt	gt
 80031ec:	3b04      	subgt	r3, #4
 80031ee:	9320      	strgt	r3, [sp, #128]	@ 0x80
 80031f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80031f2:	f1a3 0302 	sub.w	r3, r3, #2
 80031f6:	bfcc      	ite	gt
 80031f8:	2400      	movgt	r4, #0
 80031fa:	2401      	movle	r4, #1
 80031fc:	2b03      	cmp	r3, #3
 80031fe:	d864      	bhi.n	80032ca <_dtoa_r+0x29a>
 8003200:	e8df f003 	tbb	[pc, r3]
 8003204:	2c385553 	.word	0x2c385553
 8003208:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800320c:	441e      	add	r6, r3
 800320e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8003212:	2b20      	cmp	r3, #32
 8003214:	bfc1      	itttt	gt
 8003216:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800321a:	fa08 f803 	lslgt.w	r8, r8, r3
 800321e:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8003222:	fa24 f303 	lsrgt.w	r3, r4, r3
 8003226:	bfd6      	itet	le
 8003228:	f1c3 0320 	rsble	r3, r3, #32
 800322c:	ea48 0003 	orrgt.w	r0, r8, r3
 8003230:	fa04 f003 	lslle.w	r0, r4, r3
 8003234:	f7fd f966 	bl	8000504 <__aeabi_ui2d>
 8003238:	2201      	movs	r2, #1
 800323a:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800323e:	3e01      	subs	r6, #1
 8003240:	9212      	str	r2, [sp, #72]	@ 0x48
 8003242:	e775      	b.n	8003130 <_dtoa_r+0x100>
 8003244:	2301      	movs	r3, #1
 8003246:	e7b6      	b.n	80031b6 <_dtoa_r+0x186>
 8003248:	900f      	str	r0, [sp, #60]	@ 0x3c
 800324a:	e7b5      	b.n	80031b8 <_dtoa_r+0x188>
 800324c:	9b04      	ldr	r3, [sp, #16]
 800324e:	1bdb      	subs	r3, r3, r7
 8003250:	9304      	str	r3, [sp, #16]
 8003252:	427b      	negs	r3, r7
 8003254:	930a      	str	r3, [sp, #40]	@ 0x28
 8003256:	2300      	movs	r3, #0
 8003258:	930e      	str	r3, [sp, #56]	@ 0x38
 800325a:	e7c2      	b.n	80031e2 <_dtoa_r+0x1b2>
 800325c:	2301      	movs	r3, #1
 800325e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003260:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003262:	eb07 0b03 	add.w	fp, r7, r3
 8003266:	f10b 0301 	add.w	r3, fp, #1
 800326a:	2b01      	cmp	r3, #1
 800326c:	9308      	str	r3, [sp, #32]
 800326e:	bfb8      	it	lt
 8003270:	2301      	movlt	r3, #1
 8003272:	e006      	b.n	8003282 <_dtoa_r+0x252>
 8003274:	2301      	movs	r3, #1
 8003276:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003278:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800327a:	2b00      	cmp	r3, #0
 800327c:	dd28      	ble.n	80032d0 <_dtoa_r+0x2a0>
 800327e:	469b      	mov	fp, r3
 8003280:	9308      	str	r3, [sp, #32]
 8003282:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8003286:	2100      	movs	r1, #0
 8003288:	2204      	movs	r2, #4
 800328a:	f102 0514 	add.w	r5, r2, #20
 800328e:	429d      	cmp	r5, r3
 8003290:	d926      	bls.n	80032e0 <_dtoa_r+0x2b0>
 8003292:	6041      	str	r1, [r0, #4]
 8003294:	4648      	mov	r0, r9
 8003296:	f000 fd9b 	bl	8003dd0 <_Balloc>
 800329a:	4682      	mov	sl, r0
 800329c:	2800      	cmp	r0, #0
 800329e:	d141      	bne.n	8003324 <_dtoa_r+0x2f4>
 80032a0:	4b1f      	ldr	r3, [pc, #124]	@ (8003320 <_dtoa_r+0x2f0>)
 80032a2:	4602      	mov	r2, r0
 80032a4:	f240 11af 	movw	r1, #431	@ 0x1af
 80032a8:	e6d6      	b.n	8003058 <_dtoa_r+0x28>
 80032aa:	2300      	movs	r3, #0
 80032ac:	e7e3      	b.n	8003276 <_dtoa_r+0x246>
 80032ae:	2300      	movs	r3, #0
 80032b0:	e7d5      	b.n	800325e <_dtoa_r+0x22e>
 80032b2:	2401      	movs	r4, #1
 80032b4:	2300      	movs	r3, #0
 80032b6:	9320      	str	r3, [sp, #128]	@ 0x80
 80032b8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80032ba:	f04f 3bff 	mov.w	fp, #4294967295
 80032be:	2200      	movs	r2, #0
 80032c0:	f8cd b020 	str.w	fp, [sp, #32]
 80032c4:	2312      	movs	r3, #18
 80032c6:	9221      	str	r2, [sp, #132]	@ 0x84
 80032c8:	e7db      	b.n	8003282 <_dtoa_r+0x252>
 80032ca:	2301      	movs	r3, #1
 80032cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80032ce:	e7f4      	b.n	80032ba <_dtoa_r+0x28a>
 80032d0:	f04f 0b01 	mov.w	fp, #1
 80032d4:	f8cd b020 	str.w	fp, [sp, #32]
 80032d8:	465b      	mov	r3, fp
 80032da:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 80032de:	e7d0      	b.n	8003282 <_dtoa_r+0x252>
 80032e0:	3101      	adds	r1, #1
 80032e2:	0052      	lsls	r2, r2, #1
 80032e4:	e7d1      	b.n	800328a <_dtoa_r+0x25a>
 80032e6:	bf00      	nop
 80032e8:	636f4361 	.word	0x636f4361
 80032ec:	3fd287a7 	.word	0x3fd287a7
 80032f0:	8b60c8b3 	.word	0x8b60c8b3
 80032f4:	3fc68a28 	.word	0x3fc68a28
 80032f8:	509f79fb 	.word	0x509f79fb
 80032fc:	3fd34413 	.word	0x3fd34413
 8003300:	080050ee 	.word	0x080050ee
 8003304:	08005105 	.word	0x08005105
 8003308:	7ff00000 	.word	0x7ff00000
 800330c:	080050ea 	.word	0x080050ea
 8003310:	080050be 	.word	0x080050be
 8003314:	080050bd 	.word	0x080050bd
 8003318:	3ff80000 	.word	0x3ff80000
 800331c:	08005258 	.word	0x08005258
 8003320:	0800515d 	.word	0x0800515d
 8003324:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003328:	6018      	str	r0, [r3, #0]
 800332a:	9b08      	ldr	r3, [sp, #32]
 800332c:	2b0e      	cmp	r3, #14
 800332e:	f200 80a1 	bhi.w	8003474 <_dtoa_r+0x444>
 8003332:	2c00      	cmp	r4, #0
 8003334:	f000 809e 	beq.w	8003474 <_dtoa_r+0x444>
 8003338:	2f00      	cmp	r7, #0
 800333a:	dd33      	ble.n	80033a4 <_dtoa_r+0x374>
 800333c:	4b9c      	ldr	r3, [pc, #624]	@ (80035b0 <_dtoa_r+0x580>)
 800333e:	f007 020f 	and.w	r2, r7, #15
 8003342:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003346:	e9d3 3400 	ldrd	r3, r4, [r3]
 800334a:	05f8      	lsls	r0, r7, #23
 800334c:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8003350:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003354:	d516      	bpl.n	8003384 <_dtoa_r+0x354>
 8003356:	4b97      	ldr	r3, [pc, #604]	@ (80035b4 <_dtoa_r+0x584>)
 8003358:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800335c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003360:	f7fd fa74 	bl	800084c <__aeabi_ddiv>
 8003364:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003368:	f004 040f 	and.w	r4, r4, #15
 800336c:	2603      	movs	r6, #3
 800336e:	4d91      	ldr	r5, [pc, #580]	@ (80035b4 <_dtoa_r+0x584>)
 8003370:	b954      	cbnz	r4, 8003388 <_dtoa_r+0x358>
 8003372:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003376:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800337a:	f7fd fa67 	bl	800084c <__aeabi_ddiv>
 800337e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003382:	e028      	b.n	80033d6 <_dtoa_r+0x3a6>
 8003384:	2602      	movs	r6, #2
 8003386:	e7f2      	b.n	800336e <_dtoa_r+0x33e>
 8003388:	07e1      	lsls	r1, r4, #31
 800338a:	d508      	bpl.n	800339e <_dtoa_r+0x36e>
 800338c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003390:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003394:	f7fd f930 	bl	80005f8 <__aeabi_dmul>
 8003398:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800339c:	3601      	adds	r6, #1
 800339e:	1064      	asrs	r4, r4, #1
 80033a0:	3508      	adds	r5, #8
 80033a2:	e7e5      	b.n	8003370 <_dtoa_r+0x340>
 80033a4:	f000 80af 	beq.w	8003506 <_dtoa_r+0x4d6>
 80033a8:	427c      	negs	r4, r7
 80033aa:	4b81      	ldr	r3, [pc, #516]	@ (80035b0 <_dtoa_r+0x580>)
 80033ac:	4d81      	ldr	r5, [pc, #516]	@ (80035b4 <_dtoa_r+0x584>)
 80033ae:	f004 020f 	and.w	r2, r4, #15
 80033b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80033b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033ba:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80033be:	f7fd f91b 	bl	80005f8 <__aeabi_dmul>
 80033c2:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80033c6:	1124      	asrs	r4, r4, #4
 80033c8:	2300      	movs	r3, #0
 80033ca:	2602      	movs	r6, #2
 80033cc:	2c00      	cmp	r4, #0
 80033ce:	f040 808f 	bne.w	80034f0 <_dtoa_r+0x4c0>
 80033d2:	2b00      	cmp	r3, #0
 80033d4:	d1d3      	bne.n	800337e <_dtoa_r+0x34e>
 80033d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80033d8:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 80033dc:	2b00      	cmp	r3, #0
 80033de:	f000 8094 	beq.w	800350a <_dtoa_r+0x4da>
 80033e2:	4b75      	ldr	r3, [pc, #468]	@ (80035b8 <_dtoa_r+0x588>)
 80033e4:	2200      	movs	r2, #0
 80033e6:	4620      	mov	r0, r4
 80033e8:	4629      	mov	r1, r5
 80033ea:	f7fd fb77 	bl	8000adc <__aeabi_dcmplt>
 80033ee:	2800      	cmp	r0, #0
 80033f0:	f000 808b 	beq.w	800350a <_dtoa_r+0x4da>
 80033f4:	9b08      	ldr	r3, [sp, #32]
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	f000 8087 	beq.w	800350a <_dtoa_r+0x4da>
 80033fc:	f1bb 0f00 	cmp.w	fp, #0
 8003400:	dd34      	ble.n	800346c <_dtoa_r+0x43c>
 8003402:	4620      	mov	r0, r4
 8003404:	4b6d      	ldr	r3, [pc, #436]	@ (80035bc <_dtoa_r+0x58c>)
 8003406:	2200      	movs	r2, #0
 8003408:	4629      	mov	r1, r5
 800340a:	f7fd f8f5 	bl	80005f8 <__aeabi_dmul>
 800340e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003412:	f107 38ff 	add.w	r8, r7, #4294967295
 8003416:	3601      	adds	r6, #1
 8003418:	465c      	mov	r4, fp
 800341a:	4630      	mov	r0, r6
 800341c:	f7fd f882 	bl	8000524 <__aeabi_i2d>
 8003420:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003424:	f7fd f8e8 	bl	80005f8 <__aeabi_dmul>
 8003428:	4b65      	ldr	r3, [pc, #404]	@ (80035c0 <_dtoa_r+0x590>)
 800342a:	2200      	movs	r2, #0
 800342c:	f7fc ff2e 	bl	800028c <__adddf3>
 8003430:	4605      	mov	r5, r0
 8003432:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8003436:	2c00      	cmp	r4, #0
 8003438:	d16a      	bne.n	8003510 <_dtoa_r+0x4e0>
 800343a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800343e:	4b61      	ldr	r3, [pc, #388]	@ (80035c4 <_dtoa_r+0x594>)
 8003440:	2200      	movs	r2, #0
 8003442:	f7fc ff21 	bl	8000288 <__aeabi_dsub>
 8003446:	4602      	mov	r2, r0
 8003448:	460b      	mov	r3, r1
 800344a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800344e:	462a      	mov	r2, r5
 8003450:	4633      	mov	r3, r6
 8003452:	f7fd fb61 	bl	8000b18 <__aeabi_dcmpgt>
 8003456:	2800      	cmp	r0, #0
 8003458:	f040 8298 	bne.w	800398c <_dtoa_r+0x95c>
 800345c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003460:	462a      	mov	r2, r5
 8003462:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003466:	f7fd fb39 	bl	8000adc <__aeabi_dcmplt>
 800346a:	bb38      	cbnz	r0, 80034bc <_dtoa_r+0x48c>
 800346c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003470:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8003474:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003476:	2b00      	cmp	r3, #0
 8003478:	f2c0 8157 	blt.w	800372a <_dtoa_r+0x6fa>
 800347c:	2f0e      	cmp	r7, #14
 800347e:	f300 8154 	bgt.w	800372a <_dtoa_r+0x6fa>
 8003482:	4b4b      	ldr	r3, [pc, #300]	@ (80035b0 <_dtoa_r+0x580>)
 8003484:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003488:	e9d3 3400 	ldrd	r3, r4, [r3]
 800348c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003490:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003492:	2b00      	cmp	r3, #0
 8003494:	f280 80e5 	bge.w	8003662 <_dtoa_r+0x632>
 8003498:	9b08      	ldr	r3, [sp, #32]
 800349a:	2b00      	cmp	r3, #0
 800349c:	f300 80e1 	bgt.w	8003662 <_dtoa_r+0x632>
 80034a0:	d10c      	bne.n	80034bc <_dtoa_r+0x48c>
 80034a2:	4b48      	ldr	r3, [pc, #288]	@ (80035c4 <_dtoa_r+0x594>)
 80034a4:	2200      	movs	r2, #0
 80034a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80034aa:	f7fd f8a5 	bl	80005f8 <__aeabi_dmul>
 80034ae:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80034b2:	f7fd fb27 	bl	8000b04 <__aeabi_dcmpge>
 80034b6:	2800      	cmp	r0, #0
 80034b8:	f000 8266 	beq.w	8003988 <_dtoa_r+0x958>
 80034bc:	2400      	movs	r4, #0
 80034be:	4625      	mov	r5, r4
 80034c0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80034c2:	4656      	mov	r6, sl
 80034c4:	ea6f 0803 	mvn.w	r8, r3
 80034c8:	2700      	movs	r7, #0
 80034ca:	4621      	mov	r1, r4
 80034cc:	4648      	mov	r0, r9
 80034ce:	f000 fcbf 	bl	8003e50 <_Bfree>
 80034d2:	2d00      	cmp	r5, #0
 80034d4:	f000 80bd 	beq.w	8003652 <_dtoa_r+0x622>
 80034d8:	b12f      	cbz	r7, 80034e6 <_dtoa_r+0x4b6>
 80034da:	42af      	cmp	r7, r5
 80034dc:	d003      	beq.n	80034e6 <_dtoa_r+0x4b6>
 80034de:	4639      	mov	r1, r7
 80034e0:	4648      	mov	r0, r9
 80034e2:	f000 fcb5 	bl	8003e50 <_Bfree>
 80034e6:	4629      	mov	r1, r5
 80034e8:	4648      	mov	r0, r9
 80034ea:	f000 fcb1 	bl	8003e50 <_Bfree>
 80034ee:	e0b0      	b.n	8003652 <_dtoa_r+0x622>
 80034f0:	07e2      	lsls	r2, r4, #31
 80034f2:	d505      	bpl.n	8003500 <_dtoa_r+0x4d0>
 80034f4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80034f8:	f7fd f87e 	bl	80005f8 <__aeabi_dmul>
 80034fc:	3601      	adds	r6, #1
 80034fe:	2301      	movs	r3, #1
 8003500:	1064      	asrs	r4, r4, #1
 8003502:	3508      	adds	r5, #8
 8003504:	e762      	b.n	80033cc <_dtoa_r+0x39c>
 8003506:	2602      	movs	r6, #2
 8003508:	e765      	b.n	80033d6 <_dtoa_r+0x3a6>
 800350a:	9c08      	ldr	r4, [sp, #32]
 800350c:	46b8      	mov	r8, r7
 800350e:	e784      	b.n	800341a <_dtoa_r+0x3ea>
 8003510:	4b27      	ldr	r3, [pc, #156]	@ (80035b0 <_dtoa_r+0x580>)
 8003512:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003514:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003518:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800351c:	4454      	add	r4, sl
 800351e:	2900      	cmp	r1, #0
 8003520:	d054      	beq.n	80035cc <_dtoa_r+0x59c>
 8003522:	4929      	ldr	r1, [pc, #164]	@ (80035c8 <_dtoa_r+0x598>)
 8003524:	2000      	movs	r0, #0
 8003526:	f7fd f991 	bl	800084c <__aeabi_ddiv>
 800352a:	4633      	mov	r3, r6
 800352c:	462a      	mov	r2, r5
 800352e:	f7fc feab 	bl	8000288 <__aeabi_dsub>
 8003532:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003536:	4656      	mov	r6, sl
 8003538:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800353c:	f7fd fb0c 	bl	8000b58 <__aeabi_d2iz>
 8003540:	4605      	mov	r5, r0
 8003542:	f7fc ffef 	bl	8000524 <__aeabi_i2d>
 8003546:	4602      	mov	r2, r0
 8003548:	460b      	mov	r3, r1
 800354a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800354e:	f7fc fe9b 	bl	8000288 <__aeabi_dsub>
 8003552:	3530      	adds	r5, #48	@ 0x30
 8003554:	4602      	mov	r2, r0
 8003556:	460b      	mov	r3, r1
 8003558:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800355c:	f806 5b01 	strb.w	r5, [r6], #1
 8003560:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003564:	f7fd faba 	bl	8000adc <__aeabi_dcmplt>
 8003568:	2800      	cmp	r0, #0
 800356a:	d172      	bne.n	8003652 <_dtoa_r+0x622>
 800356c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003570:	4911      	ldr	r1, [pc, #68]	@ (80035b8 <_dtoa_r+0x588>)
 8003572:	2000      	movs	r0, #0
 8003574:	f7fc fe88 	bl	8000288 <__aeabi_dsub>
 8003578:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800357c:	f7fd faae 	bl	8000adc <__aeabi_dcmplt>
 8003580:	2800      	cmp	r0, #0
 8003582:	f040 80b4 	bne.w	80036ee <_dtoa_r+0x6be>
 8003586:	42a6      	cmp	r6, r4
 8003588:	f43f af70 	beq.w	800346c <_dtoa_r+0x43c>
 800358c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003590:	4b0a      	ldr	r3, [pc, #40]	@ (80035bc <_dtoa_r+0x58c>)
 8003592:	2200      	movs	r2, #0
 8003594:	f7fd f830 	bl	80005f8 <__aeabi_dmul>
 8003598:	4b08      	ldr	r3, [pc, #32]	@ (80035bc <_dtoa_r+0x58c>)
 800359a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800359e:	2200      	movs	r2, #0
 80035a0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80035a4:	f7fd f828 	bl	80005f8 <__aeabi_dmul>
 80035a8:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80035ac:	e7c4      	b.n	8003538 <_dtoa_r+0x508>
 80035ae:	bf00      	nop
 80035b0:	08005258 	.word	0x08005258
 80035b4:	08005230 	.word	0x08005230
 80035b8:	3ff00000 	.word	0x3ff00000
 80035bc:	40240000 	.word	0x40240000
 80035c0:	401c0000 	.word	0x401c0000
 80035c4:	40140000 	.word	0x40140000
 80035c8:	3fe00000 	.word	0x3fe00000
 80035cc:	4631      	mov	r1, r6
 80035ce:	4628      	mov	r0, r5
 80035d0:	f7fd f812 	bl	80005f8 <__aeabi_dmul>
 80035d4:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80035d8:	9413      	str	r4, [sp, #76]	@ 0x4c
 80035da:	4656      	mov	r6, sl
 80035dc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80035e0:	f7fd faba 	bl	8000b58 <__aeabi_d2iz>
 80035e4:	4605      	mov	r5, r0
 80035e6:	f7fc ff9d 	bl	8000524 <__aeabi_i2d>
 80035ea:	4602      	mov	r2, r0
 80035ec:	460b      	mov	r3, r1
 80035ee:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80035f2:	f7fc fe49 	bl	8000288 <__aeabi_dsub>
 80035f6:	3530      	adds	r5, #48	@ 0x30
 80035f8:	f806 5b01 	strb.w	r5, [r6], #1
 80035fc:	4602      	mov	r2, r0
 80035fe:	460b      	mov	r3, r1
 8003600:	42a6      	cmp	r6, r4
 8003602:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003606:	f04f 0200 	mov.w	r2, #0
 800360a:	d124      	bne.n	8003656 <_dtoa_r+0x626>
 800360c:	4baf      	ldr	r3, [pc, #700]	@ (80038cc <_dtoa_r+0x89c>)
 800360e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003612:	f7fc fe3b 	bl	800028c <__adddf3>
 8003616:	4602      	mov	r2, r0
 8003618:	460b      	mov	r3, r1
 800361a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800361e:	f7fd fa7b 	bl	8000b18 <__aeabi_dcmpgt>
 8003622:	2800      	cmp	r0, #0
 8003624:	d163      	bne.n	80036ee <_dtoa_r+0x6be>
 8003626:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800362a:	49a8      	ldr	r1, [pc, #672]	@ (80038cc <_dtoa_r+0x89c>)
 800362c:	2000      	movs	r0, #0
 800362e:	f7fc fe2b 	bl	8000288 <__aeabi_dsub>
 8003632:	4602      	mov	r2, r0
 8003634:	460b      	mov	r3, r1
 8003636:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800363a:	f7fd fa4f 	bl	8000adc <__aeabi_dcmplt>
 800363e:	2800      	cmp	r0, #0
 8003640:	f43f af14 	beq.w	800346c <_dtoa_r+0x43c>
 8003644:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8003646:	1e73      	subs	r3, r6, #1
 8003648:	9313      	str	r3, [sp, #76]	@ 0x4c
 800364a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800364e:	2b30      	cmp	r3, #48	@ 0x30
 8003650:	d0f8      	beq.n	8003644 <_dtoa_r+0x614>
 8003652:	4647      	mov	r7, r8
 8003654:	e03b      	b.n	80036ce <_dtoa_r+0x69e>
 8003656:	4b9e      	ldr	r3, [pc, #632]	@ (80038d0 <_dtoa_r+0x8a0>)
 8003658:	f7fc ffce 	bl	80005f8 <__aeabi_dmul>
 800365c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003660:	e7bc      	b.n	80035dc <_dtoa_r+0x5ac>
 8003662:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8003666:	4656      	mov	r6, sl
 8003668:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800366c:	4620      	mov	r0, r4
 800366e:	4629      	mov	r1, r5
 8003670:	f7fd f8ec 	bl	800084c <__aeabi_ddiv>
 8003674:	f7fd fa70 	bl	8000b58 <__aeabi_d2iz>
 8003678:	4680      	mov	r8, r0
 800367a:	f7fc ff53 	bl	8000524 <__aeabi_i2d>
 800367e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003682:	f7fc ffb9 	bl	80005f8 <__aeabi_dmul>
 8003686:	4602      	mov	r2, r0
 8003688:	460b      	mov	r3, r1
 800368a:	4620      	mov	r0, r4
 800368c:	4629      	mov	r1, r5
 800368e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003692:	f7fc fdf9 	bl	8000288 <__aeabi_dsub>
 8003696:	f806 4b01 	strb.w	r4, [r6], #1
 800369a:	9d08      	ldr	r5, [sp, #32]
 800369c:	eba6 040a 	sub.w	r4, r6, sl
 80036a0:	42a5      	cmp	r5, r4
 80036a2:	4602      	mov	r2, r0
 80036a4:	460b      	mov	r3, r1
 80036a6:	d133      	bne.n	8003710 <_dtoa_r+0x6e0>
 80036a8:	f7fc fdf0 	bl	800028c <__adddf3>
 80036ac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80036b0:	4604      	mov	r4, r0
 80036b2:	460d      	mov	r5, r1
 80036b4:	f7fd fa30 	bl	8000b18 <__aeabi_dcmpgt>
 80036b8:	b9c0      	cbnz	r0, 80036ec <_dtoa_r+0x6bc>
 80036ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80036be:	4620      	mov	r0, r4
 80036c0:	4629      	mov	r1, r5
 80036c2:	f7fd fa01 	bl	8000ac8 <__aeabi_dcmpeq>
 80036c6:	b110      	cbz	r0, 80036ce <_dtoa_r+0x69e>
 80036c8:	f018 0f01 	tst.w	r8, #1
 80036cc:	d10e      	bne.n	80036ec <_dtoa_r+0x6bc>
 80036ce:	9903      	ldr	r1, [sp, #12]
 80036d0:	4648      	mov	r0, r9
 80036d2:	f000 fbbd 	bl	8003e50 <_Bfree>
 80036d6:	2300      	movs	r3, #0
 80036d8:	7033      	strb	r3, [r6, #0]
 80036da:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80036dc:	3701      	adds	r7, #1
 80036de:	601f      	str	r7, [r3, #0]
 80036e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	f000 824b 	beq.w	8003b7e <_dtoa_r+0xb4e>
 80036e8:	601e      	str	r6, [r3, #0]
 80036ea:	e248      	b.n	8003b7e <_dtoa_r+0xb4e>
 80036ec:	46b8      	mov	r8, r7
 80036ee:	4633      	mov	r3, r6
 80036f0:	461e      	mov	r6, r3
 80036f2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80036f6:	2a39      	cmp	r2, #57	@ 0x39
 80036f8:	d106      	bne.n	8003708 <_dtoa_r+0x6d8>
 80036fa:	459a      	cmp	sl, r3
 80036fc:	d1f8      	bne.n	80036f0 <_dtoa_r+0x6c0>
 80036fe:	2230      	movs	r2, #48	@ 0x30
 8003700:	f108 0801 	add.w	r8, r8, #1
 8003704:	f88a 2000 	strb.w	r2, [sl]
 8003708:	781a      	ldrb	r2, [r3, #0]
 800370a:	3201      	adds	r2, #1
 800370c:	701a      	strb	r2, [r3, #0]
 800370e:	e7a0      	b.n	8003652 <_dtoa_r+0x622>
 8003710:	4b6f      	ldr	r3, [pc, #444]	@ (80038d0 <_dtoa_r+0x8a0>)
 8003712:	2200      	movs	r2, #0
 8003714:	f7fc ff70 	bl	80005f8 <__aeabi_dmul>
 8003718:	2200      	movs	r2, #0
 800371a:	2300      	movs	r3, #0
 800371c:	4604      	mov	r4, r0
 800371e:	460d      	mov	r5, r1
 8003720:	f7fd f9d2 	bl	8000ac8 <__aeabi_dcmpeq>
 8003724:	2800      	cmp	r0, #0
 8003726:	d09f      	beq.n	8003668 <_dtoa_r+0x638>
 8003728:	e7d1      	b.n	80036ce <_dtoa_r+0x69e>
 800372a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800372c:	2a00      	cmp	r2, #0
 800372e:	f000 80ea 	beq.w	8003906 <_dtoa_r+0x8d6>
 8003732:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003734:	2a01      	cmp	r2, #1
 8003736:	f300 80cd 	bgt.w	80038d4 <_dtoa_r+0x8a4>
 800373a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800373c:	2a00      	cmp	r2, #0
 800373e:	f000 80c1 	beq.w	80038c4 <_dtoa_r+0x894>
 8003742:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003746:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003748:	9e04      	ldr	r6, [sp, #16]
 800374a:	9a04      	ldr	r2, [sp, #16]
 800374c:	441a      	add	r2, r3
 800374e:	9204      	str	r2, [sp, #16]
 8003750:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003752:	2101      	movs	r1, #1
 8003754:	441a      	add	r2, r3
 8003756:	4648      	mov	r0, r9
 8003758:	9209      	str	r2, [sp, #36]	@ 0x24
 800375a:	f000 fc2d 	bl	8003fb8 <__i2b>
 800375e:	4605      	mov	r5, r0
 8003760:	b166      	cbz	r6, 800377c <_dtoa_r+0x74c>
 8003762:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003764:	2b00      	cmp	r3, #0
 8003766:	dd09      	ble.n	800377c <_dtoa_r+0x74c>
 8003768:	42b3      	cmp	r3, r6
 800376a:	9a04      	ldr	r2, [sp, #16]
 800376c:	bfa8      	it	ge
 800376e:	4633      	movge	r3, r6
 8003770:	1ad2      	subs	r2, r2, r3
 8003772:	9204      	str	r2, [sp, #16]
 8003774:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003776:	1af6      	subs	r6, r6, r3
 8003778:	1ad3      	subs	r3, r2, r3
 800377a:	9309      	str	r3, [sp, #36]	@ 0x24
 800377c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800377e:	b30b      	cbz	r3, 80037c4 <_dtoa_r+0x794>
 8003780:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003782:	2b00      	cmp	r3, #0
 8003784:	f000 80c6 	beq.w	8003914 <_dtoa_r+0x8e4>
 8003788:	2c00      	cmp	r4, #0
 800378a:	f000 80c0 	beq.w	800390e <_dtoa_r+0x8de>
 800378e:	4629      	mov	r1, r5
 8003790:	4622      	mov	r2, r4
 8003792:	4648      	mov	r0, r9
 8003794:	f000 fcc8 	bl	8004128 <__pow5mult>
 8003798:	9a03      	ldr	r2, [sp, #12]
 800379a:	4601      	mov	r1, r0
 800379c:	4605      	mov	r5, r0
 800379e:	4648      	mov	r0, r9
 80037a0:	f000 fc20 	bl	8003fe4 <__multiply>
 80037a4:	9903      	ldr	r1, [sp, #12]
 80037a6:	4680      	mov	r8, r0
 80037a8:	4648      	mov	r0, r9
 80037aa:	f000 fb51 	bl	8003e50 <_Bfree>
 80037ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80037b0:	1b1b      	subs	r3, r3, r4
 80037b2:	930a      	str	r3, [sp, #40]	@ 0x28
 80037b4:	f000 80b1 	beq.w	800391a <_dtoa_r+0x8ea>
 80037b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80037ba:	4641      	mov	r1, r8
 80037bc:	4648      	mov	r0, r9
 80037be:	f000 fcb3 	bl	8004128 <__pow5mult>
 80037c2:	9003      	str	r0, [sp, #12]
 80037c4:	2101      	movs	r1, #1
 80037c6:	4648      	mov	r0, r9
 80037c8:	f000 fbf6 	bl	8003fb8 <__i2b>
 80037cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80037ce:	4604      	mov	r4, r0
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	f000 81d8 	beq.w	8003b86 <_dtoa_r+0xb56>
 80037d6:	461a      	mov	r2, r3
 80037d8:	4601      	mov	r1, r0
 80037da:	4648      	mov	r0, r9
 80037dc:	f000 fca4 	bl	8004128 <__pow5mult>
 80037e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80037e2:	2b01      	cmp	r3, #1
 80037e4:	4604      	mov	r4, r0
 80037e6:	f300 809f 	bgt.w	8003928 <_dtoa_r+0x8f8>
 80037ea:	9b06      	ldr	r3, [sp, #24]
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	f040 8097 	bne.w	8003920 <_dtoa_r+0x8f0>
 80037f2:	9b07      	ldr	r3, [sp, #28]
 80037f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	f040 8093 	bne.w	8003924 <_dtoa_r+0x8f4>
 80037fe:	9b07      	ldr	r3, [sp, #28]
 8003800:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003804:	0d1b      	lsrs	r3, r3, #20
 8003806:	051b      	lsls	r3, r3, #20
 8003808:	b133      	cbz	r3, 8003818 <_dtoa_r+0x7e8>
 800380a:	9b04      	ldr	r3, [sp, #16]
 800380c:	3301      	adds	r3, #1
 800380e:	9304      	str	r3, [sp, #16]
 8003810:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003812:	3301      	adds	r3, #1
 8003814:	9309      	str	r3, [sp, #36]	@ 0x24
 8003816:	2301      	movs	r3, #1
 8003818:	930a      	str	r3, [sp, #40]	@ 0x28
 800381a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800381c:	2b00      	cmp	r3, #0
 800381e:	f000 81b8 	beq.w	8003b92 <_dtoa_r+0xb62>
 8003822:	6923      	ldr	r3, [r4, #16]
 8003824:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003828:	6918      	ldr	r0, [r3, #16]
 800382a:	f000 fb79 	bl	8003f20 <__hi0bits>
 800382e:	f1c0 0020 	rsb	r0, r0, #32
 8003832:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003834:	4418      	add	r0, r3
 8003836:	f010 001f 	ands.w	r0, r0, #31
 800383a:	f000 8082 	beq.w	8003942 <_dtoa_r+0x912>
 800383e:	f1c0 0320 	rsb	r3, r0, #32
 8003842:	2b04      	cmp	r3, #4
 8003844:	dd73      	ble.n	800392e <_dtoa_r+0x8fe>
 8003846:	9b04      	ldr	r3, [sp, #16]
 8003848:	f1c0 001c 	rsb	r0, r0, #28
 800384c:	4403      	add	r3, r0
 800384e:	9304      	str	r3, [sp, #16]
 8003850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003852:	4403      	add	r3, r0
 8003854:	4406      	add	r6, r0
 8003856:	9309      	str	r3, [sp, #36]	@ 0x24
 8003858:	9b04      	ldr	r3, [sp, #16]
 800385a:	2b00      	cmp	r3, #0
 800385c:	dd05      	ble.n	800386a <_dtoa_r+0x83a>
 800385e:	9903      	ldr	r1, [sp, #12]
 8003860:	461a      	mov	r2, r3
 8003862:	4648      	mov	r0, r9
 8003864:	f000 fcba 	bl	80041dc <__lshift>
 8003868:	9003      	str	r0, [sp, #12]
 800386a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800386c:	2b00      	cmp	r3, #0
 800386e:	dd05      	ble.n	800387c <_dtoa_r+0x84c>
 8003870:	4621      	mov	r1, r4
 8003872:	461a      	mov	r2, r3
 8003874:	4648      	mov	r0, r9
 8003876:	f000 fcb1 	bl	80041dc <__lshift>
 800387a:	4604      	mov	r4, r0
 800387c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800387e:	2b00      	cmp	r3, #0
 8003880:	d061      	beq.n	8003946 <_dtoa_r+0x916>
 8003882:	9803      	ldr	r0, [sp, #12]
 8003884:	4621      	mov	r1, r4
 8003886:	f000 fd15 	bl	80042b4 <__mcmp>
 800388a:	2800      	cmp	r0, #0
 800388c:	da5b      	bge.n	8003946 <_dtoa_r+0x916>
 800388e:	2300      	movs	r3, #0
 8003890:	9903      	ldr	r1, [sp, #12]
 8003892:	220a      	movs	r2, #10
 8003894:	4648      	mov	r0, r9
 8003896:	f000 fafd 	bl	8003e94 <__multadd>
 800389a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800389c:	9003      	str	r0, [sp, #12]
 800389e:	f107 38ff 	add.w	r8, r7, #4294967295
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	f000 8177 	beq.w	8003b96 <_dtoa_r+0xb66>
 80038a8:	4629      	mov	r1, r5
 80038aa:	2300      	movs	r3, #0
 80038ac:	220a      	movs	r2, #10
 80038ae:	4648      	mov	r0, r9
 80038b0:	f000 faf0 	bl	8003e94 <__multadd>
 80038b4:	f1bb 0f00 	cmp.w	fp, #0
 80038b8:	4605      	mov	r5, r0
 80038ba:	dc6f      	bgt.n	800399c <_dtoa_r+0x96c>
 80038bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80038be:	2b02      	cmp	r3, #2
 80038c0:	dc49      	bgt.n	8003956 <_dtoa_r+0x926>
 80038c2:	e06b      	b.n	800399c <_dtoa_r+0x96c>
 80038c4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80038c6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80038ca:	e73c      	b.n	8003746 <_dtoa_r+0x716>
 80038cc:	3fe00000 	.word	0x3fe00000
 80038d0:	40240000 	.word	0x40240000
 80038d4:	9b08      	ldr	r3, [sp, #32]
 80038d6:	1e5c      	subs	r4, r3, #1
 80038d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80038da:	42a3      	cmp	r3, r4
 80038dc:	db09      	blt.n	80038f2 <_dtoa_r+0x8c2>
 80038de:	1b1c      	subs	r4, r3, r4
 80038e0:	9b08      	ldr	r3, [sp, #32]
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	f6bf af30 	bge.w	8003748 <_dtoa_r+0x718>
 80038e8:	9b04      	ldr	r3, [sp, #16]
 80038ea:	9a08      	ldr	r2, [sp, #32]
 80038ec:	1a9e      	subs	r6, r3, r2
 80038ee:	2300      	movs	r3, #0
 80038f0:	e72b      	b.n	800374a <_dtoa_r+0x71a>
 80038f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80038f4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80038f6:	940a      	str	r4, [sp, #40]	@ 0x28
 80038f8:	1ae3      	subs	r3, r4, r3
 80038fa:	441a      	add	r2, r3
 80038fc:	9e04      	ldr	r6, [sp, #16]
 80038fe:	9b08      	ldr	r3, [sp, #32]
 8003900:	920e      	str	r2, [sp, #56]	@ 0x38
 8003902:	2400      	movs	r4, #0
 8003904:	e721      	b.n	800374a <_dtoa_r+0x71a>
 8003906:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003908:	9e04      	ldr	r6, [sp, #16]
 800390a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800390c:	e728      	b.n	8003760 <_dtoa_r+0x730>
 800390e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003912:	e751      	b.n	80037b8 <_dtoa_r+0x788>
 8003914:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003916:	9903      	ldr	r1, [sp, #12]
 8003918:	e750      	b.n	80037bc <_dtoa_r+0x78c>
 800391a:	f8cd 800c 	str.w	r8, [sp, #12]
 800391e:	e751      	b.n	80037c4 <_dtoa_r+0x794>
 8003920:	2300      	movs	r3, #0
 8003922:	e779      	b.n	8003818 <_dtoa_r+0x7e8>
 8003924:	9b06      	ldr	r3, [sp, #24]
 8003926:	e777      	b.n	8003818 <_dtoa_r+0x7e8>
 8003928:	2300      	movs	r3, #0
 800392a:	930a      	str	r3, [sp, #40]	@ 0x28
 800392c:	e779      	b.n	8003822 <_dtoa_r+0x7f2>
 800392e:	d093      	beq.n	8003858 <_dtoa_r+0x828>
 8003930:	9a04      	ldr	r2, [sp, #16]
 8003932:	331c      	adds	r3, #28
 8003934:	441a      	add	r2, r3
 8003936:	9204      	str	r2, [sp, #16]
 8003938:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800393a:	441a      	add	r2, r3
 800393c:	441e      	add	r6, r3
 800393e:	9209      	str	r2, [sp, #36]	@ 0x24
 8003940:	e78a      	b.n	8003858 <_dtoa_r+0x828>
 8003942:	4603      	mov	r3, r0
 8003944:	e7f4      	b.n	8003930 <_dtoa_r+0x900>
 8003946:	9b08      	ldr	r3, [sp, #32]
 8003948:	2b00      	cmp	r3, #0
 800394a:	46b8      	mov	r8, r7
 800394c:	dc20      	bgt.n	8003990 <_dtoa_r+0x960>
 800394e:	469b      	mov	fp, r3
 8003950:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003952:	2b02      	cmp	r3, #2
 8003954:	dd1e      	ble.n	8003994 <_dtoa_r+0x964>
 8003956:	f1bb 0f00 	cmp.w	fp, #0
 800395a:	f47f adb1 	bne.w	80034c0 <_dtoa_r+0x490>
 800395e:	4621      	mov	r1, r4
 8003960:	465b      	mov	r3, fp
 8003962:	2205      	movs	r2, #5
 8003964:	4648      	mov	r0, r9
 8003966:	f000 fa95 	bl	8003e94 <__multadd>
 800396a:	4601      	mov	r1, r0
 800396c:	4604      	mov	r4, r0
 800396e:	9803      	ldr	r0, [sp, #12]
 8003970:	f000 fca0 	bl	80042b4 <__mcmp>
 8003974:	2800      	cmp	r0, #0
 8003976:	f77f ada3 	ble.w	80034c0 <_dtoa_r+0x490>
 800397a:	4656      	mov	r6, sl
 800397c:	2331      	movs	r3, #49	@ 0x31
 800397e:	f806 3b01 	strb.w	r3, [r6], #1
 8003982:	f108 0801 	add.w	r8, r8, #1
 8003986:	e59f      	b.n	80034c8 <_dtoa_r+0x498>
 8003988:	9c08      	ldr	r4, [sp, #32]
 800398a:	46b8      	mov	r8, r7
 800398c:	4625      	mov	r5, r4
 800398e:	e7f4      	b.n	800397a <_dtoa_r+0x94a>
 8003990:	f8dd b020 	ldr.w	fp, [sp, #32]
 8003994:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003996:	2b00      	cmp	r3, #0
 8003998:	f000 8101 	beq.w	8003b9e <_dtoa_r+0xb6e>
 800399c:	2e00      	cmp	r6, #0
 800399e:	dd05      	ble.n	80039ac <_dtoa_r+0x97c>
 80039a0:	4629      	mov	r1, r5
 80039a2:	4632      	mov	r2, r6
 80039a4:	4648      	mov	r0, r9
 80039a6:	f000 fc19 	bl	80041dc <__lshift>
 80039aa:	4605      	mov	r5, r0
 80039ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d05c      	beq.n	8003a6c <_dtoa_r+0xa3c>
 80039b2:	6869      	ldr	r1, [r5, #4]
 80039b4:	4648      	mov	r0, r9
 80039b6:	f000 fa0b 	bl	8003dd0 <_Balloc>
 80039ba:	4606      	mov	r6, r0
 80039bc:	b928      	cbnz	r0, 80039ca <_dtoa_r+0x99a>
 80039be:	4b82      	ldr	r3, [pc, #520]	@ (8003bc8 <_dtoa_r+0xb98>)
 80039c0:	4602      	mov	r2, r0
 80039c2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80039c6:	f7ff bb47 	b.w	8003058 <_dtoa_r+0x28>
 80039ca:	692a      	ldr	r2, [r5, #16]
 80039cc:	3202      	adds	r2, #2
 80039ce:	0092      	lsls	r2, r2, #2
 80039d0:	f105 010c 	add.w	r1, r5, #12
 80039d4:	300c      	adds	r0, #12
 80039d6:	f000 ffef 	bl	80049b8 <memcpy>
 80039da:	2201      	movs	r2, #1
 80039dc:	4631      	mov	r1, r6
 80039de:	4648      	mov	r0, r9
 80039e0:	f000 fbfc 	bl	80041dc <__lshift>
 80039e4:	f10a 0301 	add.w	r3, sl, #1
 80039e8:	9304      	str	r3, [sp, #16]
 80039ea:	eb0a 030b 	add.w	r3, sl, fp
 80039ee:	930a      	str	r3, [sp, #40]	@ 0x28
 80039f0:	9b06      	ldr	r3, [sp, #24]
 80039f2:	f003 0301 	and.w	r3, r3, #1
 80039f6:	462f      	mov	r7, r5
 80039f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80039fa:	4605      	mov	r5, r0
 80039fc:	9b04      	ldr	r3, [sp, #16]
 80039fe:	9803      	ldr	r0, [sp, #12]
 8003a00:	4621      	mov	r1, r4
 8003a02:	f103 3bff 	add.w	fp, r3, #4294967295
 8003a06:	f7ff fa88 	bl	8002f1a <quorem>
 8003a0a:	4603      	mov	r3, r0
 8003a0c:	3330      	adds	r3, #48	@ 0x30
 8003a0e:	9006      	str	r0, [sp, #24]
 8003a10:	4639      	mov	r1, r7
 8003a12:	9803      	ldr	r0, [sp, #12]
 8003a14:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003a16:	f000 fc4d 	bl	80042b4 <__mcmp>
 8003a1a:	462a      	mov	r2, r5
 8003a1c:	9008      	str	r0, [sp, #32]
 8003a1e:	4621      	mov	r1, r4
 8003a20:	4648      	mov	r0, r9
 8003a22:	f000 fc63 	bl	80042ec <__mdiff>
 8003a26:	68c2      	ldr	r2, [r0, #12]
 8003a28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a2a:	4606      	mov	r6, r0
 8003a2c:	bb02      	cbnz	r2, 8003a70 <_dtoa_r+0xa40>
 8003a2e:	4601      	mov	r1, r0
 8003a30:	9803      	ldr	r0, [sp, #12]
 8003a32:	f000 fc3f 	bl	80042b4 <__mcmp>
 8003a36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a38:	4602      	mov	r2, r0
 8003a3a:	4631      	mov	r1, r6
 8003a3c:	4648      	mov	r0, r9
 8003a3e:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 8003a42:	f000 fa05 	bl	8003e50 <_Bfree>
 8003a46:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003a48:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003a4a:	9e04      	ldr	r6, [sp, #16]
 8003a4c:	ea42 0103 	orr.w	r1, r2, r3
 8003a50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a52:	4319      	orrs	r1, r3
 8003a54:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a56:	d10d      	bne.n	8003a74 <_dtoa_r+0xa44>
 8003a58:	2b39      	cmp	r3, #57	@ 0x39
 8003a5a:	d027      	beq.n	8003aac <_dtoa_r+0xa7c>
 8003a5c:	9a08      	ldr	r2, [sp, #32]
 8003a5e:	2a00      	cmp	r2, #0
 8003a60:	dd01      	ble.n	8003a66 <_dtoa_r+0xa36>
 8003a62:	9b06      	ldr	r3, [sp, #24]
 8003a64:	3331      	adds	r3, #49	@ 0x31
 8003a66:	f88b 3000 	strb.w	r3, [fp]
 8003a6a:	e52e      	b.n	80034ca <_dtoa_r+0x49a>
 8003a6c:	4628      	mov	r0, r5
 8003a6e:	e7b9      	b.n	80039e4 <_dtoa_r+0x9b4>
 8003a70:	2201      	movs	r2, #1
 8003a72:	e7e2      	b.n	8003a3a <_dtoa_r+0xa0a>
 8003a74:	9908      	ldr	r1, [sp, #32]
 8003a76:	2900      	cmp	r1, #0
 8003a78:	db04      	blt.n	8003a84 <_dtoa_r+0xa54>
 8003a7a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8003a7c:	4301      	orrs	r1, r0
 8003a7e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003a80:	4301      	orrs	r1, r0
 8003a82:	d120      	bne.n	8003ac6 <_dtoa_r+0xa96>
 8003a84:	2a00      	cmp	r2, #0
 8003a86:	ddee      	ble.n	8003a66 <_dtoa_r+0xa36>
 8003a88:	9903      	ldr	r1, [sp, #12]
 8003a8a:	9304      	str	r3, [sp, #16]
 8003a8c:	2201      	movs	r2, #1
 8003a8e:	4648      	mov	r0, r9
 8003a90:	f000 fba4 	bl	80041dc <__lshift>
 8003a94:	4621      	mov	r1, r4
 8003a96:	9003      	str	r0, [sp, #12]
 8003a98:	f000 fc0c 	bl	80042b4 <__mcmp>
 8003a9c:	2800      	cmp	r0, #0
 8003a9e:	9b04      	ldr	r3, [sp, #16]
 8003aa0:	dc02      	bgt.n	8003aa8 <_dtoa_r+0xa78>
 8003aa2:	d1e0      	bne.n	8003a66 <_dtoa_r+0xa36>
 8003aa4:	07da      	lsls	r2, r3, #31
 8003aa6:	d5de      	bpl.n	8003a66 <_dtoa_r+0xa36>
 8003aa8:	2b39      	cmp	r3, #57	@ 0x39
 8003aaa:	d1da      	bne.n	8003a62 <_dtoa_r+0xa32>
 8003aac:	2339      	movs	r3, #57	@ 0x39
 8003aae:	f88b 3000 	strb.w	r3, [fp]
 8003ab2:	4633      	mov	r3, r6
 8003ab4:	461e      	mov	r6, r3
 8003ab6:	3b01      	subs	r3, #1
 8003ab8:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003abc:	2a39      	cmp	r2, #57	@ 0x39
 8003abe:	d04e      	beq.n	8003b5e <_dtoa_r+0xb2e>
 8003ac0:	3201      	adds	r2, #1
 8003ac2:	701a      	strb	r2, [r3, #0]
 8003ac4:	e501      	b.n	80034ca <_dtoa_r+0x49a>
 8003ac6:	2a00      	cmp	r2, #0
 8003ac8:	dd03      	ble.n	8003ad2 <_dtoa_r+0xaa2>
 8003aca:	2b39      	cmp	r3, #57	@ 0x39
 8003acc:	d0ee      	beq.n	8003aac <_dtoa_r+0xa7c>
 8003ace:	3301      	adds	r3, #1
 8003ad0:	e7c9      	b.n	8003a66 <_dtoa_r+0xa36>
 8003ad2:	9a04      	ldr	r2, [sp, #16]
 8003ad4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003ad6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003ada:	428a      	cmp	r2, r1
 8003adc:	d028      	beq.n	8003b30 <_dtoa_r+0xb00>
 8003ade:	9903      	ldr	r1, [sp, #12]
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	220a      	movs	r2, #10
 8003ae4:	4648      	mov	r0, r9
 8003ae6:	f000 f9d5 	bl	8003e94 <__multadd>
 8003aea:	42af      	cmp	r7, r5
 8003aec:	9003      	str	r0, [sp, #12]
 8003aee:	f04f 0300 	mov.w	r3, #0
 8003af2:	f04f 020a 	mov.w	r2, #10
 8003af6:	4639      	mov	r1, r7
 8003af8:	4648      	mov	r0, r9
 8003afa:	d107      	bne.n	8003b0c <_dtoa_r+0xadc>
 8003afc:	f000 f9ca 	bl	8003e94 <__multadd>
 8003b00:	4607      	mov	r7, r0
 8003b02:	4605      	mov	r5, r0
 8003b04:	9b04      	ldr	r3, [sp, #16]
 8003b06:	3301      	adds	r3, #1
 8003b08:	9304      	str	r3, [sp, #16]
 8003b0a:	e777      	b.n	80039fc <_dtoa_r+0x9cc>
 8003b0c:	f000 f9c2 	bl	8003e94 <__multadd>
 8003b10:	4629      	mov	r1, r5
 8003b12:	4607      	mov	r7, r0
 8003b14:	2300      	movs	r3, #0
 8003b16:	220a      	movs	r2, #10
 8003b18:	4648      	mov	r0, r9
 8003b1a:	f000 f9bb 	bl	8003e94 <__multadd>
 8003b1e:	4605      	mov	r5, r0
 8003b20:	e7f0      	b.n	8003b04 <_dtoa_r+0xad4>
 8003b22:	f1bb 0f00 	cmp.w	fp, #0
 8003b26:	bfcc      	ite	gt
 8003b28:	465e      	movgt	r6, fp
 8003b2a:	2601      	movle	r6, #1
 8003b2c:	4456      	add	r6, sl
 8003b2e:	2700      	movs	r7, #0
 8003b30:	9903      	ldr	r1, [sp, #12]
 8003b32:	9304      	str	r3, [sp, #16]
 8003b34:	2201      	movs	r2, #1
 8003b36:	4648      	mov	r0, r9
 8003b38:	f000 fb50 	bl	80041dc <__lshift>
 8003b3c:	4621      	mov	r1, r4
 8003b3e:	9003      	str	r0, [sp, #12]
 8003b40:	f000 fbb8 	bl	80042b4 <__mcmp>
 8003b44:	2800      	cmp	r0, #0
 8003b46:	dcb4      	bgt.n	8003ab2 <_dtoa_r+0xa82>
 8003b48:	d102      	bne.n	8003b50 <_dtoa_r+0xb20>
 8003b4a:	9b04      	ldr	r3, [sp, #16]
 8003b4c:	07db      	lsls	r3, r3, #31
 8003b4e:	d4b0      	bmi.n	8003ab2 <_dtoa_r+0xa82>
 8003b50:	4633      	mov	r3, r6
 8003b52:	461e      	mov	r6, r3
 8003b54:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003b58:	2a30      	cmp	r2, #48	@ 0x30
 8003b5a:	d0fa      	beq.n	8003b52 <_dtoa_r+0xb22>
 8003b5c:	e4b5      	b.n	80034ca <_dtoa_r+0x49a>
 8003b5e:	459a      	cmp	sl, r3
 8003b60:	d1a8      	bne.n	8003ab4 <_dtoa_r+0xa84>
 8003b62:	2331      	movs	r3, #49	@ 0x31
 8003b64:	f108 0801 	add.w	r8, r8, #1
 8003b68:	f88a 3000 	strb.w	r3, [sl]
 8003b6c:	e4ad      	b.n	80034ca <_dtoa_r+0x49a>
 8003b6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003b70:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8003bcc <_dtoa_r+0xb9c>
 8003b74:	b11b      	cbz	r3, 8003b7e <_dtoa_r+0xb4e>
 8003b76:	f10a 0308 	add.w	r3, sl, #8
 8003b7a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003b7c:	6013      	str	r3, [r2, #0]
 8003b7e:	4650      	mov	r0, sl
 8003b80:	b017      	add	sp, #92	@ 0x5c
 8003b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003b88:	2b01      	cmp	r3, #1
 8003b8a:	f77f ae2e 	ble.w	80037ea <_dtoa_r+0x7ba>
 8003b8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003b90:	930a      	str	r3, [sp, #40]	@ 0x28
 8003b92:	2001      	movs	r0, #1
 8003b94:	e64d      	b.n	8003832 <_dtoa_r+0x802>
 8003b96:	f1bb 0f00 	cmp.w	fp, #0
 8003b9a:	f77f aed9 	ble.w	8003950 <_dtoa_r+0x920>
 8003b9e:	4656      	mov	r6, sl
 8003ba0:	9803      	ldr	r0, [sp, #12]
 8003ba2:	4621      	mov	r1, r4
 8003ba4:	f7ff f9b9 	bl	8002f1a <quorem>
 8003ba8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003bac:	f806 3b01 	strb.w	r3, [r6], #1
 8003bb0:	eba6 020a 	sub.w	r2, r6, sl
 8003bb4:	4593      	cmp	fp, r2
 8003bb6:	ddb4      	ble.n	8003b22 <_dtoa_r+0xaf2>
 8003bb8:	9903      	ldr	r1, [sp, #12]
 8003bba:	2300      	movs	r3, #0
 8003bbc:	220a      	movs	r2, #10
 8003bbe:	4648      	mov	r0, r9
 8003bc0:	f000 f968 	bl	8003e94 <__multadd>
 8003bc4:	9003      	str	r0, [sp, #12]
 8003bc6:	e7eb      	b.n	8003ba0 <_dtoa_r+0xb70>
 8003bc8:	0800515d 	.word	0x0800515d
 8003bcc:	080050e1 	.word	0x080050e1

08003bd0 <_free_r>:
 8003bd0:	b538      	push	{r3, r4, r5, lr}
 8003bd2:	4605      	mov	r5, r0
 8003bd4:	2900      	cmp	r1, #0
 8003bd6:	d041      	beq.n	8003c5c <_free_r+0x8c>
 8003bd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003bdc:	1f0c      	subs	r4, r1, #4
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	bfb8      	it	lt
 8003be2:	18e4      	addlt	r4, r4, r3
 8003be4:	f000 f8e8 	bl	8003db8 <__malloc_lock>
 8003be8:	4a1d      	ldr	r2, [pc, #116]	@ (8003c60 <_free_r+0x90>)
 8003bea:	6813      	ldr	r3, [r2, #0]
 8003bec:	b933      	cbnz	r3, 8003bfc <_free_r+0x2c>
 8003bee:	6063      	str	r3, [r4, #4]
 8003bf0:	6014      	str	r4, [r2, #0]
 8003bf2:	4628      	mov	r0, r5
 8003bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003bf8:	f000 b8e4 	b.w	8003dc4 <__malloc_unlock>
 8003bfc:	42a3      	cmp	r3, r4
 8003bfe:	d908      	bls.n	8003c12 <_free_r+0x42>
 8003c00:	6820      	ldr	r0, [r4, #0]
 8003c02:	1821      	adds	r1, r4, r0
 8003c04:	428b      	cmp	r3, r1
 8003c06:	bf01      	itttt	eq
 8003c08:	6819      	ldreq	r1, [r3, #0]
 8003c0a:	685b      	ldreq	r3, [r3, #4]
 8003c0c:	1809      	addeq	r1, r1, r0
 8003c0e:	6021      	streq	r1, [r4, #0]
 8003c10:	e7ed      	b.n	8003bee <_free_r+0x1e>
 8003c12:	461a      	mov	r2, r3
 8003c14:	685b      	ldr	r3, [r3, #4]
 8003c16:	b10b      	cbz	r3, 8003c1c <_free_r+0x4c>
 8003c18:	42a3      	cmp	r3, r4
 8003c1a:	d9fa      	bls.n	8003c12 <_free_r+0x42>
 8003c1c:	6811      	ldr	r1, [r2, #0]
 8003c1e:	1850      	adds	r0, r2, r1
 8003c20:	42a0      	cmp	r0, r4
 8003c22:	d10b      	bne.n	8003c3c <_free_r+0x6c>
 8003c24:	6820      	ldr	r0, [r4, #0]
 8003c26:	4401      	add	r1, r0
 8003c28:	1850      	adds	r0, r2, r1
 8003c2a:	4283      	cmp	r3, r0
 8003c2c:	6011      	str	r1, [r2, #0]
 8003c2e:	d1e0      	bne.n	8003bf2 <_free_r+0x22>
 8003c30:	6818      	ldr	r0, [r3, #0]
 8003c32:	685b      	ldr	r3, [r3, #4]
 8003c34:	6053      	str	r3, [r2, #4]
 8003c36:	4408      	add	r0, r1
 8003c38:	6010      	str	r0, [r2, #0]
 8003c3a:	e7da      	b.n	8003bf2 <_free_r+0x22>
 8003c3c:	d902      	bls.n	8003c44 <_free_r+0x74>
 8003c3e:	230c      	movs	r3, #12
 8003c40:	602b      	str	r3, [r5, #0]
 8003c42:	e7d6      	b.n	8003bf2 <_free_r+0x22>
 8003c44:	6820      	ldr	r0, [r4, #0]
 8003c46:	1821      	adds	r1, r4, r0
 8003c48:	428b      	cmp	r3, r1
 8003c4a:	bf04      	itt	eq
 8003c4c:	6819      	ldreq	r1, [r3, #0]
 8003c4e:	685b      	ldreq	r3, [r3, #4]
 8003c50:	6063      	str	r3, [r4, #4]
 8003c52:	bf04      	itt	eq
 8003c54:	1809      	addeq	r1, r1, r0
 8003c56:	6021      	streq	r1, [r4, #0]
 8003c58:	6054      	str	r4, [r2, #4]
 8003c5a:	e7ca      	b.n	8003bf2 <_free_r+0x22>
 8003c5c:	bd38      	pop	{r3, r4, r5, pc}
 8003c5e:	bf00      	nop
 8003c60:	20000370 	.word	0x20000370

08003c64 <malloc>:
 8003c64:	4b02      	ldr	r3, [pc, #8]	@ (8003c70 <malloc+0xc>)
 8003c66:	4601      	mov	r1, r0
 8003c68:	6818      	ldr	r0, [r3, #0]
 8003c6a:	f000 b825 	b.w	8003cb8 <_malloc_r>
 8003c6e:	bf00      	nop
 8003c70:	2000000c 	.word	0x2000000c

08003c74 <sbrk_aligned>:
 8003c74:	b570      	push	{r4, r5, r6, lr}
 8003c76:	4e0f      	ldr	r6, [pc, #60]	@ (8003cb4 <sbrk_aligned+0x40>)
 8003c78:	460c      	mov	r4, r1
 8003c7a:	6831      	ldr	r1, [r6, #0]
 8003c7c:	4605      	mov	r5, r0
 8003c7e:	b911      	cbnz	r1, 8003c86 <sbrk_aligned+0x12>
 8003c80:	f000 fe8a 	bl	8004998 <_sbrk_r>
 8003c84:	6030      	str	r0, [r6, #0]
 8003c86:	4621      	mov	r1, r4
 8003c88:	4628      	mov	r0, r5
 8003c8a:	f000 fe85 	bl	8004998 <_sbrk_r>
 8003c8e:	1c43      	adds	r3, r0, #1
 8003c90:	d103      	bne.n	8003c9a <sbrk_aligned+0x26>
 8003c92:	f04f 34ff 	mov.w	r4, #4294967295
 8003c96:	4620      	mov	r0, r4
 8003c98:	bd70      	pop	{r4, r5, r6, pc}
 8003c9a:	1cc4      	adds	r4, r0, #3
 8003c9c:	f024 0403 	bic.w	r4, r4, #3
 8003ca0:	42a0      	cmp	r0, r4
 8003ca2:	d0f8      	beq.n	8003c96 <sbrk_aligned+0x22>
 8003ca4:	1a21      	subs	r1, r4, r0
 8003ca6:	4628      	mov	r0, r5
 8003ca8:	f000 fe76 	bl	8004998 <_sbrk_r>
 8003cac:	3001      	adds	r0, #1
 8003cae:	d1f2      	bne.n	8003c96 <sbrk_aligned+0x22>
 8003cb0:	e7ef      	b.n	8003c92 <sbrk_aligned+0x1e>
 8003cb2:	bf00      	nop
 8003cb4:	2000036c 	.word	0x2000036c

08003cb8 <_malloc_r>:
 8003cb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003cbc:	1ccd      	adds	r5, r1, #3
 8003cbe:	f025 0503 	bic.w	r5, r5, #3
 8003cc2:	3508      	adds	r5, #8
 8003cc4:	2d0c      	cmp	r5, #12
 8003cc6:	bf38      	it	cc
 8003cc8:	250c      	movcc	r5, #12
 8003cca:	2d00      	cmp	r5, #0
 8003ccc:	4606      	mov	r6, r0
 8003cce:	db01      	blt.n	8003cd4 <_malloc_r+0x1c>
 8003cd0:	42a9      	cmp	r1, r5
 8003cd2:	d904      	bls.n	8003cde <_malloc_r+0x26>
 8003cd4:	230c      	movs	r3, #12
 8003cd6:	6033      	str	r3, [r6, #0]
 8003cd8:	2000      	movs	r0, #0
 8003cda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003cde:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003db4 <_malloc_r+0xfc>
 8003ce2:	f000 f869 	bl	8003db8 <__malloc_lock>
 8003ce6:	f8d8 3000 	ldr.w	r3, [r8]
 8003cea:	461c      	mov	r4, r3
 8003cec:	bb44      	cbnz	r4, 8003d40 <_malloc_r+0x88>
 8003cee:	4629      	mov	r1, r5
 8003cf0:	4630      	mov	r0, r6
 8003cf2:	f7ff ffbf 	bl	8003c74 <sbrk_aligned>
 8003cf6:	1c43      	adds	r3, r0, #1
 8003cf8:	4604      	mov	r4, r0
 8003cfa:	d158      	bne.n	8003dae <_malloc_r+0xf6>
 8003cfc:	f8d8 4000 	ldr.w	r4, [r8]
 8003d00:	4627      	mov	r7, r4
 8003d02:	2f00      	cmp	r7, #0
 8003d04:	d143      	bne.n	8003d8e <_malloc_r+0xd6>
 8003d06:	2c00      	cmp	r4, #0
 8003d08:	d04b      	beq.n	8003da2 <_malloc_r+0xea>
 8003d0a:	6823      	ldr	r3, [r4, #0]
 8003d0c:	4639      	mov	r1, r7
 8003d0e:	4630      	mov	r0, r6
 8003d10:	eb04 0903 	add.w	r9, r4, r3
 8003d14:	f000 fe40 	bl	8004998 <_sbrk_r>
 8003d18:	4581      	cmp	r9, r0
 8003d1a:	d142      	bne.n	8003da2 <_malloc_r+0xea>
 8003d1c:	6821      	ldr	r1, [r4, #0]
 8003d1e:	1a6d      	subs	r5, r5, r1
 8003d20:	4629      	mov	r1, r5
 8003d22:	4630      	mov	r0, r6
 8003d24:	f7ff ffa6 	bl	8003c74 <sbrk_aligned>
 8003d28:	3001      	adds	r0, #1
 8003d2a:	d03a      	beq.n	8003da2 <_malloc_r+0xea>
 8003d2c:	6823      	ldr	r3, [r4, #0]
 8003d2e:	442b      	add	r3, r5
 8003d30:	6023      	str	r3, [r4, #0]
 8003d32:	f8d8 3000 	ldr.w	r3, [r8]
 8003d36:	685a      	ldr	r2, [r3, #4]
 8003d38:	bb62      	cbnz	r2, 8003d94 <_malloc_r+0xdc>
 8003d3a:	f8c8 7000 	str.w	r7, [r8]
 8003d3e:	e00f      	b.n	8003d60 <_malloc_r+0xa8>
 8003d40:	6822      	ldr	r2, [r4, #0]
 8003d42:	1b52      	subs	r2, r2, r5
 8003d44:	d420      	bmi.n	8003d88 <_malloc_r+0xd0>
 8003d46:	2a0b      	cmp	r2, #11
 8003d48:	d917      	bls.n	8003d7a <_malloc_r+0xc2>
 8003d4a:	1961      	adds	r1, r4, r5
 8003d4c:	42a3      	cmp	r3, r4
 8003d4e:	6025      	str	r5, [r4, #0]
 8003d50:	bf18      	it	ne
 8003d52:	6059      	strne	r1, [r3, #4]
 8003d54:	6863      	ldr	r3, [r4, #4]
 8003d56:	bf08      	it	eq
 8003d58:	f8c8 1000 	streq.w	r1, [r8]
 8003d5c:	5162      	str	r2, [r4, r5]
 8003d5e:	604b      	str	r3, [r1, #4]
 8003d60:	4630      	mov	r0, r6
 8003d62:	f000 f82f 	bl	8003dc4 <__malloc_unlock>
 8003d66:	f104 000b 	add.w	r0, r4, #11
 8003d6a:	1d23      	adds	r3, r4, #4
 8003d6c:	f020 0007 	bic.w	r0, r0, #7
 8003d70:	1ac2      	subs	r2, r0, r3
 8003d72:	bf1c      	itt	ne
 8003d74:	1a1b      	subne	r3, r3, r0
 8003d76:	50a3      	strne	r3, [r4, r2]
 8003d78:	e7af      	b.n	8003cda <_malloc_r+0x22>
 8003d7a:	6862      	ldr	r2, [r4, #4]
 8003d7c:	42a3      	cmp	r3, r4
 8003d7e:	bf0c      	ite	eq
 8003d80:	f8c8 2000 	streq.w	r2, [r8]
 8003d84:	605a      	strne	r2, [r3, #4]
 8003d86:	e7eb      	b.n	8003d60 <_malloc_r+0xa8>
 8003d88:	4623      	mov	r3, r4
 8003d8a:	6864      	ldr	r4, [r4, #4]
 8003d8c:	e7ae      	b.n	8003cec <_malloc_r+0x34>
 8003d8e:	463c      	mov	r4, r7
 8003d90:	687f      	ldr	r7, [r7, #4]
 8003d92:	e7b6      	b.n	8003d02 <_malloc_r+0x4a>
 8003d94:	461a      	mov	r2, r3
 8003d96:	685b      	ldr	r3, [r3, #4]
 8003d98:	42a3      	cmp	r3, r4
 8003d9a:	d1fb      	bne.n	8003d94 <_malloc_r+0xdc>
 8003d9c:	2300      	movs	r3, #0
 8003d9e:	6053      	str	r3, [r2, #4]
 8003da0:	e7de      	b.n	8003d60 <_malloc_r+0xa8>
 8003da2:	230c      	movs	r3, #12
 8003da4:	6033      	str	r3, [r6, #0]
 8003da6:	4630      	mov	r0, r6
 8003da8:	f000 f80c 	bl	8003dc4 <__malloc_unlock>
 8003dac:	e794      	b.n	8003cd8 <_malloc_r+0x20>
 8003dae:	6005      	str	r5, [r0, #0]
 8003db0:	e7d6      	b.n	8003d60 <_malloc_r+0xa8>
 8003db2:	bf00      	nop
 8003db4:	20000370 	.word	0x20000370

08003db8 <__malloc_lock>:
 8003db8:	4801      	ldr	r0, [pc, #4]	@ (8003dc0 <__malloc_lock+0x8>)
 8003dba:	f7ff b8ac 	b.w	8002f16 <__retarget_lock_acquire_recursive>
 8003dbe:	bf00      	nop
 8003dc0:	20000368 	.word	0x20000368

08003dc4 <__malloc_unlock>:
 8003dc4:	4801      	ldr	r0, [pc, #4]	@ (8003dcc <__malloc_unlock+0x8>)
 8003dc6:	f7ff b8a7 	b.w	8002f18 <__retarget_lock_release_recursive>
 8003dca:	bf00      	nop
 8003dcc:	20000368 	.word	0x20000368

08003dd0 <_Balloc>:
 8003dd0:	b570      	push	{r4, r5, r6, lr}
 8003dd2:	69c6      	ldr	r6, [r0, #28]
 8003dd4:	4604      	mov	r4, r0
 8003dd6:	460d      	mov	r5, r1
 8003dd8:	b976      	cbnz	r6, 8003df8 <_Balloc+0x28>
 8003dda:	2010      	movs	r0, #16
 8003ddc:	f7ff ff42 	bl	8003c64 <malloc>
 8003de0:	4602      	mov	r2, r0
 8003de2:	61e0      	str	r0, [r4, #28]
 8003de4:	b920      	cbnz	r0, 8003df0 <_Balloc+0x20>
 8003de6:	4b18      	ldr	r3, [pc, #96]	@ (8003e48 <_Balloc+0x78>)
 8003de8:	4818      	ldr	r0, [pc, #96]	@ (8003e4c <_Balloc+0x7c>)
 8003dea:	216b      	movs	r1, #107	@ 0x6b
 8003dec:	f000 fdf2 	bl	80049d4 <__assert_func>
 8003df0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003df4:	6006      	str	r6, [r0, #0]
 8003df6:	60c6      	str	r6, [r0, #12]
 8003df8:	69e6      	ldr	r6, [r4, #28]
 8003dfa:	68f3      	ldr	r3, [r6, #12]
 8003dfc:	b183      	cbz	r3, 8003e20 <_Balloc+0x50>
 8003dfe:	69e3      	ldr	r3, [r4, #28]
 8003e00:	68db      	ldr	r3, [r3, #12]
 8003e02:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003e06:	b9b8      	cbnz	r0, 8003e38 <_Balloc+0x68>
 8003e08:	2101      	movs	r1, #1
 8003e0a:	fa01 f605 	lsl.w	r6, r1, r5
 8003e0e:	1d72      	adds	r2, r6, #5
 8003e10:	0092      	lsls	r2, r2, #2
 8003e12:	4620      	mov	r0, r4
 8003e14:	f000 fdfc 	bl	8004a10 <_calloc_r>
 8003e18:	b160      	cbz	r0, 8003e34 <_Balloc+0x64>
 8003e1a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003e1e:	e00e      	b.n	8003e3e <_Balloc+0x6e>
 8003e20:	2221      	movs	r2, #33	@ 0x21
 8003e22:	2104      	movs	r1, #4
 8003e24:	4620      	mov	r0, r4
 8003e26:	f000 fdf3 	bl	8004a10 <_calloc_r>
 8003e2a:	69e3      	ldr	r3, [r4, #28]
 8003e2c:	60f0      	str	r0, [r6, #12]
 8003e2e:	68db      	ldr	r3, [r3, #12]
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d1e4      	bne.n	8003dfe <_Balloc+0x2e>
 8003e34:	2000      	movs	r0, #0
 8003e36:	bd70      	pop	{r4, r5, r6, pc}
 8003e38:	6802      	ldr	r2, [r0, #0]
 8003e3a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003e3e:	2300      	movs	r3, #0
 8003e40:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003e44:	e7f7      	b.n	8003e36 <_Balloc+0x66>
 8003e46:	bf00      	nop
 8003e48:	080050ee 	.word	0x080050ee
 8003e4c:	0800516e 	.word	0x0800516e

08003e50 <_Bfree>:
 8003e50:	b570      	push	{r4, r5, r6, lr}
 8003e52:	69c6      	ldr	r6, [r0, #28]
 8003e54:	4605      	mov	r5, r0
 8003e56:	460c      	mov	r4, r1
 8003e58:	b976      	cbnz	r6, 8003e78 <_Bfree+0x28>
 8003e5a:	2010      	movs	r0, #16
 8003e5c:	f7ff ff02 	bl	8003c64 <malloc>
 8003e60:	4602      	mov	r2, r0
 8003e62:	61e8      	str	r0, [r5, #28]
 8003e64:	b920      	cbnz	r0, 8003e70 <_Bfree+0x20>
 8003e66:	4b09      	ldr	r3, [pc, #36]	@ (8003e8c <_Bfree+0x3c>)
 8003e68:	4809      	ldr	r0, [pc, #36]	@ (8003e90 <_Bfree+0x40>)
 8003e6a:	218f      	movs	r1, #143	@ 0x8f
 8003e6c:	f000 fdb2 	bl	80049d4 <__assert_func>
 8003e70:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e74:	6006      	str	r6, [r0, #0]
 8003e76:	60c6      	str	r6, [r0, #12]
 8003e78:	b13c      	cbz	r4, 8003e8a <_Bfree+0x3a>
 8003e7a:	69eb      	ldr	r3, [r5, #28]
 8003e7c:	6862      	ldr	r2, [r4, #4]
 8003e7e:	68db      	ldr	r3, [r3, #12]
 8003e80:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003e84:	6021      	str	r1, [r4, #0]
 8003e86:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003e8a:	bd70      	pop	{r4, r5, r6, pc}
 8003e8c:	080050ee 	.word	0x080050ee
 8003e90:	0800516e 	.word	0x0800516e

08003e94 <__multadd>:
 8003e94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e98:	690d      	ldr	r5, [r1, #16]
 8003e9a:	4607      	mov	r7, r0
 8003e9c:	460c      	mov	r4, r1
 8003e9e:	461e      	mov	r6, r3
 8003ea0:	f101 0c14 	add.w	ip, r1, #20
 8003ea4:	2000      	movs	r0, #0
 8003ea6:	f8dc 3000 	ldr.w	r3, [ip]
 8003eaa:	b299      	uxth	r1, r3
 8003eac:	fb02 6101 	mla	r1, r2, r1, r6
 8003eb0:	0c1e      	lsrs	r6, r3, #16
 8003eb2:	0c0b      	lsrs	r3, r1, #16
 8003eb4:	fb02 3306 	mla	r3, r2, r6, r3
 8003eb8:	b289      	uxth	r1, r1
 8003eba:	3001      	adds	r0, #1
 8003ebc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003ec0:	4285      	cmp	r5, r0
 8003ec2:	f84c 1b04 	str.w	r1, [ip], #4
 8003ec6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003eca:	dcec      	bgt.n	8003ea6 <__multadd+0x12>
 8003ecc:	b30e      	cbz	r6, 8003f12 <__multadd+0x7e>
 8003ece:	68a3      	ldr	r3, [r4, #8]
 8003ed0:	42ab      	cmp	r3, r5
 8003ed2:	dc19      	bgt.n	8003f08 <__multadd+0x74>
 8003ed4:	6861      	ldr	r1, [r4, #4]
 8003ed6:	4638      	mov	r0, r7
 8003ed8:	3101      	adds	r1, #1
 8003eda:	f7ff ff79 	bl	8003dd0 <_Balloc>
 8003ede:	4680      	mov	r8, r0
 8003ee0:	b928      	cbnz	r0, 8003eee <__multadd+0x5a>
 8003ee2:	4602      	mov	r2, r0
 8003ee4:	4b0c      	ldr	r3, [pc, #48]	@ (8003f18 <__multadd+0x84>)
 8003ee6:	480d      	ldr	r0, [pc, #52]	@ (8003f1c <__multadd+0x88>)
 8003ee8:	21ba      	movs	r1, #186	@ 0xba
 8003eea:	f000 fd73 	bl	80049d4 <__assert_func>
 8003eee:	6922      	ldr	r2, [r4, #16]
 8003ef0:	3202      	adds	r2, #2
 8003ef2:	f104 010c 	add.w	r1, r4, #12
 8003ef6:	0092      	lsls	r2, r2, #2
 8003ef8:	300c      	adds	r0, #12
 8003efa:	f000 fd5d 	bl	80049b8 <memcpy>
 8003efe:	4621      	mov	r1, r4
 8003f00:	4638      	mov	r0, r7
 8003f02:	f7ff ffa5 	bl	8003e50 <_Bfree>
 8003f06:	4644      	mov	r4, r8
 8003f08:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003f0c:	3501      	adds	r5, #1
 8003f0e:	615e      	str	r6, [r3, #20]
 8003f10:	6125      	str	r5, [r4, #16]
 8003f12:	4620      	mov	r0, r4
 8003f14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f18:	0800515d 	.word	0x0800515d
 8003f1c:	0800516e 	.word	0x0800516e

08003f20 <__hi0bits>:
 8003f20:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003f24:	4603      	mov	r3, r0
 8003f26:	bf36      	itet	cc
 8003f28:	0403      	lslcc	r3, r0, #16
 8003f2a:	2000      	movcs	r0, #0
 8003f2c:	2010      	movcc	r0, #16
 8003f2e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003f32:	bf3c      	itt	cc
 8003f34:	021b      	lslcc	r3, r3, #8
 8003f36:	3008      	addcc	r0, #8
 8003f38:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003f3c:	bf3c      	itt	cc
 8003f3e:	011b      	lslcc	r3, r3, #4
 8003f40:	3004      	addcc	r0, #4
 8003f42:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003f46:	bf3c      	itt	cc
 8003f48:	009b      	lslcc	r3, r3, #2
 8003f4a:	3002      	addcc	r0, #2
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	db05      	blt.n	8003f5c <__hi0bits+0x3c>
 8003f50:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003f54:	f100 0001 	add.w	r0, r0, #1
 8003f58:	bf08      	it	eq
 8003f5a:	2020      	moveq	r0, #32
 8003f5c:	4770      	bx	lr

08003f5e <__lo0bits>:
 8003f5e:	6803      	ldr	r3, [r0, #0]
 8003f60:	4602      	mov	r2, r0
 8003f62:	f013 0007 	ands.w	r0, r3, #7
 8003f66:	d00b      	beq.n	8003f80 <__lo0bits+0x22>
 8003f68:	07d9      	lsls	r1, r3, #31
 8003f6a:	d421      	bmi.n	8003fb0 <__lo0bits+0x52>
 8003f6c:	0798      	lsls	r0, r3, #30
 8003f6e:	bf49      	itett	mi
 8003f70:	085b      	lsrmi	r3, r3, #1
 8003f72:	089b      	lsrpl	r3, r3, #2
 8003f74:	2001      	movmi	r0, #1
 8003f76:	6013      	strmi	r3, [r2, #0]
 8003f78:	bf5c      	itt	pl
 8003f7a:	6013      	strpl	r3, [r2, #0]
 8003f7c:	2002      	movpl	r0, #2
 8003f7e:	4770      	bx	lr
 8003f80:	b299      	uxth	r1, r3
 8003f82:	b909      	cbnz	r1, 8003f88 <__lo0bits+0x2a>
 8003f84:	0c1b      	lsrs	r3, r3, #16
 8003f86:	2010      	movs	r0, #16
 8003f88:	b2d9      	uxtb	r1, r3
 8003f8a:	b909      	cbnz	r1, 8003f90 <__lo0bits+0x32>
 8003f8c:	3008      	adds	r0, #8
 8003f8e:	0a1b      	lsrs	r3, r3, #8
 8003f90:	0719      	lsls	r1, r3, #28
 8003f92:	bf04      	itt	eq
 8003f94:	091b      	lsreq	r3, r3, #4
 8003f96:	3004      	addeq	r0, #4
 8003f98:	0799      	lsls	r1, r3, #30
 8003f9a:	bf04      	itt	eq
 8003f9c:	089b      	lsreq	r3, r3, #2
 8003f9e:	3002      	addeq	r0, #2
 8003fa0:	07d9      	lsls	r1, r3, #31
 8003fa2:	d403      	bmi.n	8003fac <__lo0bits+0x4e>
 8003fa4:	085b      	lsrs	r3, r3, #1
 8003fa6:	f100 0001 	add.w	r0, r0, #1
 8003faa:	d003      	beq.n	8003fb4 <__lo0bits+0x56>
 8003fac:	6013      	str	r3, [r2, #0]
 8003fae:	4770      	bx	lr
 8003fb0:	2000      	movs	r0, #0
 8003fb2:	4770      	bx	lr
 8003fb4:	2020      	movs	r0, #32
 8003fb6:	4770      	bx	lr

08003fb8 <__i2b>:
 8003fb8:	b510      	push	{r4, lr}
 8003fba:	460c      	mov	r4, r1
 8003fbc:	2101      	movs	r1, #1
 8003fbe:	f7ff ff07 	bl	8003dd0 <_Balloc>
 8003fc2:	4602      	mov	r2, r0
 8003fc4:	b928      	cbnz	r0, 8003fd2 <__i2b+0x1a>
 8003fc6:	4b05      	ldr	r3, [pc, #20]	@ (8003fdc <__i2b+0x24>)
 8003fc8:	4805      	ldr	r0, [pc, #20]	@ (8003fe0 <__i2b+0x28>)
 8003fca:	f240 1145 	movw	r1, #325	@ 0x145
 8003fce:	f000 fd01 	bl	80049d4 <__assert_func>
 8003fd2:	2301      	movs	r3, #1
 8003fd4:	6144      	str	r4, [r0, #20]
 8003fd6:	6103      	str	r3, [r0, #16]
 8003fd8:	bd10      	pop	{r4, pc}
 8003fda:	bf00      	nop
 8003fdc:	0800515d 	.word	0x0800515d
 8003fe0:	0800516e 	.word	0x0800516e

08003fe4 <__multiply>:
 8003fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fe8:	4617      	mov	r7, r2
 8003fea:	690a      	ldr	r2, [r1, #16]
 8003fec:	693b      	ldr	r3, [r7, #16]
 8003fee:	429a      	cmp	r2, r3
 8003ff0:	bfa8      	it	ge
 8003ff2:	463b      	movge	r3, r7
 8003ff4:	4689      	mov	r9, r1
 8003ff6:	bfa4      	itt	ge
 8003ff8:	460f      	movge	r7, r1
 8003ffa:	4699      	movge	r9, r3
 8003ffc:	693d      	ldr	r5, [r7, #16]
 8003ffe:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8004002:	68bb      	ldr	r3, [r7, #8]
 8004004:	6879      	ldr	r1, [r7, #4]
 8004006:	eb05 060a 	add.w	r6, r5, sl
 800400a:	42b3      	cmp	r3, r6
 800400c:	b085      	sub	sp, #20
 800400e:	bfb8      	it	lt
 8004010:	3101      	addlt	r1, #1
 8004012:	f7ff fedd 	bl	8003dd0 <_Balloc>
 8004016:	b930      	cbnz	r0, 8004026 <__multiply+0x42>
 8004018:	4602      	mov	r2, r0
 800401a:	4b41      	ldr	r3, [pc, #260]	@ (8004120 <__multiply+0x13c>)
 800401c:	4841      	ldr	r0, [pc, #260]	@ (8004124 <__multiply+0x140>)
 800401e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004022:	f000 fcd7 	bl	80049d4 <__assert_func>
 8004026:	f100 0414 	add.w	r4, r0, #20
 800402a:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800402e:	4623      	mov	r3, r4
 8004030:	2200      	movs	r2, #0
 8004032:	4573      	cmp	r3, lr
 8004034:	d320      	bcc.n	8004078 <__multiply+0x94>
 8004036:	f107 0814 	add.w	r8, r7, #20
 800403a:	f109 0114 	add.w	r1, r9, #20
 800403e:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8004042:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8004046:	9302      	str	r3, [sp, #8]
 8004048:	1beb      	subs	r3, r5, r7
 800404a:	3b15      	subs	r3, #21
 800404c:	f023 0303 	bic.w	r3, r3, #3
 8004050:	3304      	adds	r3, #4
 8004052:	3715      	adds	r7, #21
 8004054:	42bd      	cmp	r5, r7
 8004056:	bf38      	it	cc
 8004058:	2304      	movcc	r3, #4
 800405a:	9301      	str	r3, [sp, #4]
 800405c:	9b02      	ldr	r3, [sp, #8]
 800405e:	9103      	str	r1, [sp, #12]
 8004060:	428b      	cmp	r3, r1
 8004062:	d80c      	bhi.n	800407e <__multiply+0x9a>
 8004064:	2e00      	cmp	r6, #0
 8004066:	dd03      	ble.n	8004070 <__multiply+0x8c>
 8004068:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800406c:	2b00      	cmp	r3, #0
 800406e:	d055      	beq.n	800411c <__multiply+0x138>
 8004070:	6106      	str	r6, [r0, #16]
 8004072:	b005      	add	sp, #20
 8004074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004078:	f843 2b04 	str.w	r2, [r3], #4
 800407c:	e7d9      	b.n	8004032 <__multiply+0x4e>
 800407e:	f8b1 a000 	ldrh.w	sl, [r1]
 8004082:	f1ba 0f00 	cmp.w	sl, #0
 8004086:	d01f      	beq.n	80040c8 <__multiply+0xe4>
 8004088:	46c4      	mov	ip, r8
 800408a:	46a1      	mov	r9, r4
 800408c:	2700      	movs	r7, #0
 800408e:	f85c 2b04 	ldr.w	r2, [ip], #4
 8004092:	f8d9 3000 	ldr.w	r3, [r9]
 8004096:	fa1f fb82 	uxth.w	fp, r2
 800409a:	b29b      	uxth	r3, r3
 800409c:	fb0a 330b 	mla	r3, sl, fp, r3
 80040a0:	443b      	add	r3, r7
 80040a2:	f8d9 7000 	ldr.w	r7, [r9]
 80040a6:	0c12      	lsrs	r2, r2, #16
 80040a8:	0c3f      	lsrs	r7, r7, #16
 80040aa:	fb0a 7202 	mla	r2, sl, r2, r7
 80040ae:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80040b2:	b29b      	uxth	r3, r3
 80040b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80040b8:	4565      	cmp	r5, ip
 80040ba:	f849 3b04 	str.w	r3, [r9], #4
 80040be:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80040c2:	d8e4      	bhi.n	800408e <__multiply+0xaa>
 80040c4:	9b01      	ldr	r3, [sp, #4]
 80040c6:	50e7      	str	r7, [r4, r3]
 80040c8:	9b03      	ldr	r3, [sp, #12]
 80040ca:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80040ce:	3104      	adds	r1, #4
 80040d0:	f1b9 0f00 	cmp.w	r9, #0
 80040d4:	d020      	beq.n	8004118 <__multiply+0x134>
 80040d6:	6823      	ldr	r3, [r4, #0]
 80040d8:	4647      	mov	r7, r8
 80040da:	46a4      	mov	ip, r4
 80040dc:	f04f 0a00 	mov.w	sl, #0
 80040e0:	f8b7 b000 	ldrh.w	fp, [r7]
 80040e4:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80040e8:	fb09 220b 	mla	r2, r9, fp, r2
 80040ec:	4452      	add	r2, sl
 80040ee:	b29b      	uxth	r3, r3
 80040f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80040f4:	f84c 3b04 	str.w	r3, [ip], #4
 80040f8:	f857 3b04 	ldr.w	r3, [r7], #4
 80040fc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004100:	f8bc 3000 	ldrh.w	r3, [ip]
 8004104:	fb09 330a 	mla	r3, r9, sl, r3
 8004108:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800410c:	42bd      	cmp	r5, r7
 800410e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004112:	d8e5      	bhi.n	80040e0 <__multiply+0xfc>
 8004114:	9a01      	ldr	r2, [sp, #4]
 8004116:	50a3      	str	r3, [r4, r2]
 8004118:	3404      	adds	r4, #4
 800411a:	e79f      	b.n	800405c <__multiply+0x78>
 800411c:	3e01      	subs	r6, #1
 800411e:	e7a1      	b.n	8004064 <__multiply+0x80>
 8004120:	0800515d 	.word	0x0800515d
 8004124:	0800516e 	.word	0x0800516e

08004128 <__pow5mult>:
 8004128:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800412c:	4615      	mov	r5, r2
 800412e:	f012 0203 	ands.w	r2, r2, #3
 8004132:	4607      	mov	r7, r0
 8004134:	460e      	mov	r6, r1
 8004136:	d007      	beq.n	8004148 <__pow5mult+0x20>
 8004138:	4c25      	ldr	r4, [pc, #148]	@ (80041d0 <__pow5mult+0xa8>)
 800413a:	3a01      	subs	r2, #1
 800413c:	2300      	movs	r3, #0
 800413e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004142:	f7ff fea7 	bl	8003e94 <__multadd>
 8004146:	4606      	mov	r6, r0
 8004148:	10ad      	asrs	r5, r5, #2
 800414a:	d03d      	beq.n	80041c8 <__pow5mult+0xa0>
 800414c:	69fc      	ldr	r4, [r7, #28]
 800414e:	b97c      	cbnz	r4, 8004170 <__pow5mult+0x48>
 8004150:	2010      	movs	r0, #16
 8004152:	f7ff fd87 	bl	8003c64 <malloc>
 8004156:	4602      	mov	r2, r0
 8004158:	61f8      	str	r0, [r7, #28]
 800415a:	b928      	cbnz	r0, 8004168 <__pow5mult+0x40>
 800415c:	4b1d      	ldr	r3, [pc, #116]	@ (80041d4 <__pow5mult+0xac>)
 800415e:	481e      	ldr	r0, [pc, #120]	@ (80041d8 <__pow5mult+0xb0>)
 8004160:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004164:	f000 fc36 	bl	80049d4 <__assert_func>
 8004168:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800416c:	6004      	str	r4, [r0, #0]
 800416e:	60c4      	str	r4, [r0, #12]
 8004170:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004174:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004178:	b94c      	cbnz	r4, 800418e <__pow5mult+0x66>
 800417a:	f240 2171 	movw	r1, #625	@ 0x271
 800417e:	4638      	mov	r0, r7
 8004180:	f7ff ff1a 	bl	8003fb8 <__i2b>
 8004184:	2300      	movs	r3, #0
 8004186:	f8c8 0008 	str.w	r0, [r8, #8]
 800418a:	4604      	mov	r4, r0
 800418c:	6003      	str	r3, [r0, #0]
 800418e:	f04f 0900 	mov.w	r9, #0
 8004192:	07eb      	lsls	r3, r5, #31
 8004194:	d50a      	bpl.n	80041ac <__pow5mult+0x84>
 8004196:	4631      	mov	r1, r6
 8004198:	4622      	mov	r2, r4
 800419a:	4638      	mov	r0, r7
 800419c:	f7ff ff22 	bl	8003fe4 <__multiply>
 80041a0:	4631      	mov	r1, r6
 80041a2:	4680      	mov	r8, r0
 80041a4:	4638      	mov	r0, r7
 80041a6:	f7ff fe53 	bl	8003e50 <_Bfree>
 80041aa:	4646      	mov	r6, r8
 80041ac:	106d      	asrs	r5, r5, #1
 80041ae:	d00b      	beq.n	80041c8 <__pow5mult+0xa0>
 80041b0:	6820      	ldr	r0, [r4, #0]
 80041b2:	b938      	cbnz	r0, 80041c4 <__pow5mult+0x9c>
 80041b4:	4622      	mov	r2, r4
 80041b6:	4621      	mov	r1, r4
 80041b8:	4638      	mov	r0, r7
 80041ba:	f7ff ff13 	bl	8003fe4 <__multiply>
 80041be:	6020      	str	r0, [r4, #0]
 80041c0:	f8c0 9000 	str.w	r9, [r0]
 80041c4:	4604      	mov	r4, r0
 80041c6:	e7e4      	b.n	8004192 <__pow5mult+0x6a>
 80041c8:	4630      	mov	r0, r6
 80041ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80041ce:	bf00      	nop
 80041d0:	08005220 	.word	0x08005220
 80041d4:	080050ee 	.word	0x080050ee
 80041d8:	0800516e 	.word	0x0800516e

080041dc <__lshift>:
 80041dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041e0:	460c      	mov	r4, r1
 80041e2:	6849      	ldr	r1, [r1, #4]
 80041e4:	6923      	ldr	r3, [r4, #16]
 80041e6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80041ea:	68a3      	ldr	r3, [r4, #8]
 80041ec:	4607      	mov	r7, r0
 80041ee:	4691      	mov	r9, r2
 80041f0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80041f4:	f108 0601 	add.w	r6, r8, #1
 80041f8:	42b3      	cmp	r3, r6
 80041fa:	db0b      	blt.n	8004214 <__lshift+0x38>
 80041fc:	4638      	mov	r0, r7
 80041fe:	f7ff fde7 	bl	8003dd0 <_Balloc>
 8004202:	4605      	mov	r5, r0
 8004204:	b948      	cbnz	r0, 800421a <__lshift+0x3e>
 8004206:	4602      	mov	r2, r0
 8004208:	4b28      	ldr	r3, [pc, #160]	@ (80042ac <__lshift+0xd0>)
 800420a:	4829      	ldr	r0, [pc, #164]	@ (80042b0 <__lshift+0xd4>)
 800420c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004210:	f000 fbe0 	bl	80049d4 <__assert_func>
 8004214:	3101      	adds	r1, #1
 8004216:	005b      	lsls	r3, r3, #1
 8004218:	e7ee      	b.n	80041f8 <__lshift+0x1c>
 800421a:	2300      	movs	r3, #0
 800421c:	f100 0114 	add.w	r1, r0, #20
 8004220:	f100 0210 	add.w	r2, r0, #16
 8004224:	4618      	mov	r0, r3
 8004226:	4553      	cmp	r3, sl
 8004228:	db33      	blt.n	8004292 <__lshift+0xb6>
 800422a:	6920      	ldr	r0, [r4, #16]
 800422c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004230:	f104 0314 	add.w	r3, r4, #20
 8004234:	f019 091f 	ands.w	r9, r9, #31
 8004238:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800423c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004240:	d02b      	beq.n	800429a <__lshift+0xbe>
 8004242:	f1c9 0e20 	rsb	lr, r9, #32
 8004246:	468a      	mov	sl, r1
 8004248:	2200      	movs	r2, #0
 800424a:	6818      	ldr	r0, [r3, #0]
 800424c:	fa00 f009 	lsl.w	r0, r0, r9
 8004250:	4310      	orrs	r0, r2
 8004252:	f84a 0b04 	str.w	r0, [sl], #4
 8004256:	f853 2b04 	ldr.w	r2, [r3], #4
 800425a:	459c      	cmp	ip, r3
 800425c:	fa22 f20e 	lsr.w	r2, r2, lr
 8004260:	d8f3      	bhi.n	800424a <__lshift+0x6e>
 8004262:	ebac 0304 	sub.w	r3, ip, r4
 8004266:	3b15      	subs	r3, #21
 8004268:	f023 0303 	bic.w	r3, r3, #3
 800426c:	3304      	adds	r3, #4
 800426e:	f104 0015 	add.w	r0, r4, #21
 8004272:	4560      	cmp	r0, ip
 8004274:	bf88      	it	hi
 8004276:	2304      	movhi	r3, #4
 8004278:	50ca      	str	r2, [r1, r3]
 800427a:	b10a      	cbz	r2, 8004280 <__lshift+0xa4>
 800427c:	f108 0602 	add.w	r6, r8, #2
 8004280:	3e01      	subs	r6, #1
 8004282:	4638      	mov	r0, r7
 8004284:	612e      	str	r6, [r5, #16]
 8004286:	4621      	mov	r1, r4
 8004288:	f7ff fde2 	bl	8003e50 <_Bfree>
 800428c:	4628      	mov	r0, r5
 800428e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004292:	f842 0f04 	str.w	r0, [r2, #4]!
 8004296:	3301      	adds	r3, #1
 8004298:	e7c5      	b.n	8004226 <__lshift+0x4a>
 800429a:	3904      	subs	r1, #4
 800429c:	f853 2b04 	ldr.w	r2, [r3], #4
 80042a0:	f841 2f04 	str.w	r2, [r1, #4]!
 80042a4:	459c      	cmp	ip, r3
 80042a6:	d8f9      	bhi.n	800429c <__lshift+0xc0>
 80042a8:	e7ea      	b.n	8004280 <__lshift+0xa4>
 80042aa:	bf00      	nop
 80042ac:	0800515d 	.word	0x0800515d
 80042b0:	0800516e 	.word	0x0800516e

080042b4 <__mcmp>:
 80042b4:	690a      	ldr	r2, [r1, #16]
 80042b6:	4603      	mov	r3, r0
 80042b8:	6900      	ldr	r0, [r0, #16]
 80042ba:	1a80      	subs	r0, r0, r2
 80042bc:	b530      	push	{r4, r5, lr}
 80042be:	d10e      	bne.n	80042de <__mcmp+0x2a>
 80042c0:	3314      	adds	r3, #20
 80042c2:	3114      	adds	r1, #20
 80042c4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80042c8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80042cc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80042d0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80042d4:	4295      	cmp	r5, r2
 80042d6:	d003      	beq.n	80042e0 <__mcmp+0x2c>
 80042d8:	d205      	bcs.n	80042e6 <__mcmp+0x32>
 80042da:	f04f 30ff 	mov.w	r0, #4294967295
 80042de:	bd30      	pop	{r4, r5, pc}
 80042e0:	42a3      	cmp	r3, r4
 80042e2:	d3f3      	bcc.n	80042cc <__mcmp+0x18>
 80042e4:	e7fb      	b.n	80042de <__mcmp+0x2a>
 80042e6:	2001      	movs	r0, #1
 80042e8:	e7f9      	b.n	80042de <__mcmp+0x2a>
	...

080042ec <__mdiff>:
 80042ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042f0:	4689      	mov	r9, r1
 80042f2:	4606      	mov	r6, r0
 80042f4:	4611      	mov	r1, r2
 80042f6:	4648      	mov	r0, r9
 80042f8:	4614      	mov	r4, r2
 80042fa:	f7ff ffdb 	bl	80042b4 <__mcmp>
 80042fe:	1e05      	subs	r5, r0, #0
 8004300:	d112      	bne.n	8004328 <__mdiff+0x3c>
 8004302:	4629      	mov	r1, r5
 8004304:	4630      	mov	r0, r6
 8004306:	f7ff fd63 	bl	8003dd0 <_Balloc>
 800430a:	4602      	mov	r2, r0
 800430c:	b928      	cbnz	r0, 800431a <__mdiff+0x2e>
 800430e:	4b3e      	ldr	r3, [pc, #248]	@ (8004408 <__mdiff+0x11c>)
 8004310:	f240 2137 	movw	r1, #567	@ 0x237
 8004314:	483d      	ldr	r0, [pc, #244]	@ (800440c <__mdiff+0x120>)
 8004316:	f000 fb5d 	bl	80049d4 <__assert_func>
 800431a:	2301      	movs	r3, #1
 800431c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004320:	4610      	mov	r0, r2
 8004322:	b003      	add	sp, #12
 8004324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004328:	bfbc      	itt	lt
 800432a:	464b      	movlt	r3, r9
 800432c:	46a1      	movlt	r9, r4
 800432e:	4630      	mov	r0, r6
 8004330:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004334:	bfba      	itte	lt
 8004336:	461c      	movlt	r4, r3
 8004338:	2501      	movlt	r5, #1
 800433a:	2500      	movge	r5, #0
 800433c:	f7ff fd48 	bl	8003dd0 <_Balloc>
 8004340:	4602      	mov	r2, r0
 8004342:	b918      	cbnz	r0, 800434c <__mdiff+0x60>
 8004344:	4b30      	ldr	r3, [pc, #192]	@ (8004408 <__mdiff+0x11c>)
 8004346:	f240 2145 	movw	r1, #581	@ 0x245
 800434a:	e7e3      	b.n	8004314 <__mdiff+0x28>
 800434c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004350:	6926      	ldr	r6, [r4, #16]
 8004352:	60c5      	str	r5, [r0, #12]
 8004354:	f109 0310 	add.w	r3, r9, #16
 8004358:	f109 0514 	add.w	r5, r9, #20
 800435c:	f104 0e14 	add.w	lr, r4, #20
 8004360:	f100 0b14 	add.w	fp, r0, #20
 8004364:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004368:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800436c:	9301      	str	r3, [sp, #4]
 800436e:	46d9      	mov	r9, fp
 8004370:	f04f 0c00 	mov.w	ip, #0
 8004374:	9b01      	ldr	r3, [sp, #4]
 8004376:	f85e 0b04 	ldr.w	r0, [lr], #4
 800437a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800437e:	9301      	str	r3, [sp, #4]
 8004380:	b281      	uxth	r1, r0
 8004382:	fa1f f38a 	uxth.w	r3, sl
 8004386:	1a5b      	subs	r3, r3, r1
 8004388:	0c00      	lsrs	r0, r0, #16
 800438a:	4463      	add	r3, ip
 800438c:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8004390:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004394:	b29b      	uxth	r3, r3
 8004396:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800439a:	4576      	cmp	r6, lr
 800439c:	f849 3b04 	str.w	r3, [r9], #4
 80043a0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80043a4:	d8e6      	bhi.n	8004374 <__mdiff+0x88>
 80043a6:	1b33      	subs	r3, r6, r4
 80043a8:	3b15      	subs	r3, #21
 80043aa:	f023 0303 	bic.w	r3, r3, #3
 80043ae:	3415      	adds	r4, #21
 80043b0:	3304      	adds	r3, #4
 80043b2:	42a6      	cmp	r6, r4
 80043b4:	bf38      	it	cc
 80043b6:	2304      	movcc	r3, #4
 80043b8:	441d      	add	r5, r3
 80043ba:	445b      	add	r3, fp
 80043bc:	461e      	mov	r6, r3
 80043be:	462c      	mov	r4, r5
 80043c0:	4544      	cmp	r4, r8
 80043c2:	d30e      	bcc.n	80043e2 <__mdiff+0xf6>
 80043c4:	f108 0103 	add.w	r1, r8, #3
 80043c8:	1b49      	subs	r1, r1, r5
 80043ca:	f021 0103 	bic.w	r1, r1, #3
 80043ce:	3d03      	subs	r5, #3
 80043d0:	45a8      	cmp	r8, r5
 80043d2:	bf38      	it	cc
 80043d4:	2100      	movcc	r1, #0
 80043d6:	440b      	add	r3, r1
 80043d8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80043dc:	b191      	cbz	r1, 8004404 <__mdiff+0x118>
 80043de:	6117      	str	r7, [r2, #16]
 80043e0:	e79e      	b.n	8004320 <__mdiff+0x34>
 80043e2:	f854 1b04 	ldr.w	r1, [r4], #4
 80043e6:	46e6      	mov	lr, ip
 80043e8:	0c08      	lsrs	r0, r1, #16
 80043ea:	fa1c fc81 	uxtah	ip, ip, r1
 80043ee:	4471      	add	r1, lr
 80043f0:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80043f4:	b289      	uxth	r1, r1
 80043f6:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80043fa:	f846 1b04 	str.w	r1, [r6], #4
 80043fe:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004402:	e7dd      	b.n	80043c0 <__mdiff+0xd4>
 8004404:	3f01      	subs	r7, #1
 8004406:	e7e7      	b.n	80043d8 <__mdiff+0xec>
 8004408:	0800515d 	.word	0x0800515d
 800440c:	0800516e 	.word	0x0800516e

08004410 <__d2b>:
 8004410:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8004414:	2101      	movs	r1, #1
 8004416:	9e08      	ldr	r6, [sp, #32]
 8004418:	4690      	mov	r8, r2
 800441a:	4699      	mov	r9, r3
 800441c:	f7ff fcd8 	bl	8003dd0 <_Balloc>
 8004420:	4604      	mov	r4, r0
 8004422:	b930      	cbnz	r0, 8004432 <__d2b+0x22>
 8004424:	4602      	mov	r2, r0
 8004426:	4b24      	ldr	r3, [pc, #144]	@ (80044b8 <__d2b+0xa8>)
 8004428:	4824      	ldr	r0, [pc, #144]	@ (80044bc <__d2b+0xac>)
 800442a:	f240 310f 	movw	r1, #783	@ 0x30f
 800442e:	f000 fad1 	bl	80049d4 <__assert_func>
 8004432:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004436:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800443a:	b10d      	cbz	r5, 8004440 <__d2b+0x30>
 800443c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004440:	9301      	str	r3, [sp, #4]
 8004442:	f1b8 0300 	subs.w	r3, r8, #0
 8004446:	d024      	beq.n	8004492 <__d2b+0x82>
 8004448:	4668      	mov	r0, sp
 800444a:	9300      	str	r3, [sp, #0]
 800444c:	f7ff fd87 	bl	8003f5e <__lo0bits>
 8004450:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004454:	b1d8      	cbz	r0, 800448e <__d2b+0x7e>
 8004456:	f1c0 0320 	rsb	r3, r0, #32
 800445a:	fa02 f303 	lsl.w	r3, r2, r3
 800445e:	430b      	orrs	r3, r1
 8004460:	40c2      	lsrs	r2, r0
 8004462:	6163      	str	r3, [r4, #20]
 8004464:	9201      	str	r2, [sp, #4]
 8004466:	9b01      	ldr	r3, [sp, #4]
 8004468:	61a3      	str	r3, [r4, #24]
 800446a:	2b00      	cmp	r3, #0
 800446c:	bf0c      	ite	eq
 800446e:	2201      	moveq	r2, #1
 8004470:	2202      	movne	r2, #2
 8004472:	6122      	str	r2, [r4, #16]
 8004474:	b1ad      	cbz	r5, 80044a2 <__d2b+0x92>
 8004476:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800447a:	4405      	add	r5, r0
 800447c:	6035      	str	r5, [r6, #0]
 800447e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004484:	6018      	str	r0, [r3, #0]
 8004486:	4620      	mov	r0, r4
 8004488:	b002      	add	sp, #8
 800448a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800448e:	6161      	str	r1, [r4, #20]
 8004490:	e7e9      	b.n	8004466 <__d2b+0x56>
 8004492:	a801      	add	r0, sp, #4
 8004494:	f7ff fd63 	bl	8003f5e <__lo0bits>
 8004498:	9b01      	ldr	r3, [sp, #4]
 800449a:	6163      	str	r3, [r4, #20]
 800449c:	3020      	adds	r0, #32
 800449e:	2201      	movs	r2, #1
 80044a0:	e7e7      	b.n	8004472 <__d2b+0x62>
 80044a2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80044a6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80044aa:	6030      	str	r0, [r6, #0]
 80044ac:	6918      	ldr	r0, [r3, #16]
 80044ae:	f7ff fd37 	bl	8003f20 <__hi0bits>
 80044b2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80044b6:	e7e4      	b.n	8004482 <__d2b+0x72>
 80044b8:	0800515d 	.word	0x0800515d
 80044bc:	0800516e 	.word	0x0800516e

080044c0 <__sfputc_r>:
 80044c0:	6893      	ldr	r3, [r2, #8]
 80044c2:	3b01      	subs	r3, #1
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	b410      	push	{r4}
 80044c8:	6093      	str	r3, [r2, #8]
 80044ca:	da07      	bge.n	80044dc <__sfputc_r+0x1c>
 80044cc:	6994      	ldr	r4, [r2, #24]
 80044ce:	42a3      	cmp	r3, r4
 80044d0:	db01      	blt.n	80044d6 <__sfputc_r+0x16>
 80044d2:	290a      	cmp	r1, #10
 80044d4:	d102      	bne.n	80044dc <__sfputc_r+0x1c>
 80044d6:	bc10      	pop	{r4}
 80044d8:	f7fe bc0b 	b.w	8002cf2 <__swbuf_r>
 80044dc:	6813      	ldr	r3, [r2, #0]
 80044de:	1c58      	adds	r0, r3, #1
 80044e0:	6010      	str	r0, [r2, #0]
 80044e2:	7019      	strb	r1, [r3, #0]
 80044e4:	4608      	mov	r0, r1
 80044e6:	bc10      	pop	{r4}
 80044e8:	4770      	bx	lr

080044ea <__sfputs_r>:
 80044ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044ec:	4606      	mov	r6, r0
 80044ee:	460f      	mov	r7, r1
 80044f0:	4614      	mov	r4, r2
 80044f2:	18d5      	adds	r5, r2, r3
 80044f4:	42ac      	cmp	r4, r5
 80044f6:	d101      	bne.n	80044fc <__sfputs_r+0x12>
 80044f8:	2000      	movs	r0, #0
 80044fa:	e007      	b.n	800450c <__sfputs_r+0x22>
 80044fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004500:	463a      	mov	r2, r7
 8004502:	4630      	mov	r0, r6
 8004504:	f7ff ffdc 	bl	80044c0 <__sfputc_r>
 8004508:	1c43      	adds	r3, r0, #1
 800450a:	d1f3      	bne.n	80044f4 <__sfputs_r+0xa>
 800450c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004510 <_vfiprintf_r>:
 8004510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004514:	460d      	mov	r5, r1
 8004516:	b09d      	sub	sp, #116	@ 0x74
 8004518:	4614      	mov	r4, r2
 800451a:	4698      	mov	r8, r3
 800451c:	4606      	mov	r6, r0
 800451e:	b118      	cbz	r0, 8004528 <_vfiprintf_r+0x18>
 8004520:	6a03      	ldr	r3, [r0, #32]
 8004522:	b90b      	cbnz	r3, 8004528 <_vfiprintf_r+0x18>
 8004524:	f7fe fafc 	bl	8002b20 <__sinit>
 8004528:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800452a:	07d9      	lsls	r1, r3, #31
 800452c:	d405      	bmi.n	800453a <_vfiprintf_r+0x2a>
 800452e:	89ab      	ldrh	r3, [r5, #12]
 8004530:	059a      	lsls	r2, r3, #22
 8004532:	d402      	bmi.n	800453a <_vfiprintf_r+0x2a>
 8004534:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004536:	f7fe fcee 	bl	8002f16 <__retarget_lock_acquire_recursive>
 800453a:	89ab      	ldrh	r3, [r5, #12]
 800453c:	071b      	lsls	r3, r3, #28
 800453e:	d501      	bpl.n	8004544 <_vfiprintf_r+0x34>
 8004540:	692b      	ldr	r3, [r5, #16]
 8004542:	b99b      	cbnz	r3, 800456c <_vfiprintf_r+0x5c>
 8004544:	4629      	mov	r1, r5
 8004546:	4630      	mov	r0, r6
 8004548:	f7fe fc12 	bl	8002d70 <__swsetup_r>
 800454c:	b170      	cbz	r0, 800456c <_vfiprintf_r+0x5c>
 800454e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004550:	07dc      	lsls	r4, r3, #31
 8004552:	d504      	bpl.n	800455e <_vfiprintf_r+0x4e>
 8004554:	f04f 30ff 	mov.w	r0, #4294967295
 8004558:	b01d      	add	sp, #116	@ 0x74
 800455a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800455e:	89ab      	ldrh	r3, [r5, #12]
 8004560:	0598      	lsls	r0, r3, #22
 8004562:	d4f7      	bmi.n	8004554 <_vfiprintf_r+0x44>
 8004564:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004566:	f7fe fcd7 	bl	8002f18 <__retarget_lock_release_recursive>
 800456a:	e7f3      	b.n	8004554 <_vfiprintf_r+0x44>
 800456c:	2300      	movs	r3, #0
 800456e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004570:	2320      	movs	r3, #32
 8004572:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004576:	f8cd 800c 	str.w	r8, [sp, #12]
 800457a:	2330      	movs	r3, #48	@ 0x30
 800457c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800472c <_vfiprintf_r+0x21c>
 8004580:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004584:	f04f 0901 	mov.w	r9, #1
 8004588:	4623      	mov	r3, r4
 800458a:	469a      	mov	sl, r3
 800458c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004590:	b10a      	cbz	r2, 8004596 <_vfiprintf_r+0x86>
 8004592:	2a25      	cmp	r2, #37	@ 0x25
 8004594:	d1f9      	bne.n	800458a <_vfiprintf_r+0x7a>
 8004596:	ebba 0b04 	subs.w	fp, sl, r4
 800459a:	d00b      	beq.n	80045b4 <_vfiprintf_r+0xa4>
 800459c:	465b      	mov	r3, fp
 800459e:	4622      	mov	r2, r4
 80045a0:	4629      	mov	r1, r5
 80045a2:	4630      	mov	r0, r6
 80045a4:	f7ff ffa1 	bl	80044ea <__sfputs_r>
 80045a8:	3001      	adds	r0, #1
 80045aa:	f000 80a7 	beq.w	80046fc <_vfiprintf_r+0x1ec>
 80045ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80045b0:	445a      	add	r2, fp
 80045b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80045b4:	f89a 3000 	ldrb.w	r3, [sl]
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	f000 809f 	beq.w	80046fc <_vfiprintf_r+0x1ec>
 80045be:	2300      	movs	r3, #0
 80045c0:	f04f 32ff 	mov.w	r2, #4294967295
 80045c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80045c8:	f10a 0a01 	add.w	sl, sl, #1
 80045cc:	9304      	str	r3, [sp, #16]
 80045ce:	9307      	str	r3, [sp, #28]
 80045d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80045d4:	931a      	str	r3, [sp, #104]	@ 0x68
 80045d6:	4654      	mov	r4, sl
 80045d8:	2205      	movs	r2, #5
 80045da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045de:	4853      	ldr	r0, [pc, #332]	@ (800472c <_vfiprintf_r+0x21c>)
 80045e0:	f7fb fdf6 	bl	80001d0 <memchr>
 80045e4:	9a04      	ldr	r2, [sp, #16]
 80045e6:	b9d8      	cbnz	r0, 8004620 <_vfiprintf_r+0x110>
 80045e8:	06d1      	lsls	r1, r2, #27
 80045ea:	bf44      	itt	mi
 80045ec:	2320      	movmi	r3, #32
 80045ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045f2:	0713      	lsls	r3, r2, #28
 80045f4:	bf44      	itt	mi
 80045f6:	232b      	movmi	r3, #43	@ 0x2b
 80045f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045fc:	f89a 3000 	ldrb.w	r3, [sl]
 8004600:	2b2a      	cmp	r3, #42	@ 0x2a
 8004602:	d015      	beq.n	8004630 <_vfiprintf_r+0x120>
 8004604:	9a07      	ldr	r2, [sp, #28]
 8004606:	4654      	mov	r4, sl
 8004608:	2000      	movs	r0, #0
 800460a:	f04f 0c0a 	mov.w	ip, #10
 800460e:	4621      	mov	r1, r4
 8004610:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004614:	3b30      	subs	r3, #48	@ 0x30
 8004616:	2b09      	cmp	r3, #9
 8004618:	d94b      	bls.n	80046b2 <_vfiprintf_r+0x1a2>
 800461a:	b1b0      	cbz	r0, 800464a <_vfiprintf_r+0x13a>
 800461c:	9207      	str	r2, [sp, #28]
 800461e:	e014      	b.n	800464a <_vfiprintf_r+0x13a>
 8004620:	eba0 0308 	sub.w	r3, r0, r8
 8004624:	fa09 f303 	lsl.w	r3, r9, r3
 8004628:	4313      	orrs	r3, r2
 800462a:	9304      	str	r3, [sp, #16]
 800462c:	46a2      	mov	sl, r4
 800462e:	e7d2      	b.n	80045d6 <_vfiprintf_r+0xc6>
 8004630:	9b03      	ldr	r3, [sp, #12]
 8004632:	1d19      	adds	r1, r3, #4
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	9103      	str	r1, [sp, #12]
 8004638:	2b00      	cmp	r3, #0
 800463a:	bfbb      	ittet	lt
 800463c:	425b      	neglt	r3, r3
 800463e:	f042 0202 	orrlt.w	r2, r2, #2
 8004642:	9307      	strge	r3, [sp, #28]
 8004644:	9307      	strlt	r3, [sp, #28]
 8004646:	bfb8      	it	lt
 8004648:	9204      	strlt	r2, [sp, #16]
 800464a:	7823      	ldrb	r3, [r4, #0]
 800464c:	2b2e      	cmp	r3, #46	@ 0x2e
 800464e:	d10a      	bne.n	8004666 <_vfiprintf_r+0x156>
 8004650:	7863      	ldrb	r3, [r4, #1]
 8004652:	2b2a      	cmp	r3, #42	@ 0x2a
 8004654:	d132      	bne.n	80046bc <_vfiprintf_r+0x1ac>
 8004656:	9b03      	ldr	r3, [sp, #12]
 8004658:	1d1a      	adds	r2, r3, #4
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	9203      	str	r2, [sp, #12]
 800465e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004662:	3402      	adds	r4, #2
 8004664:	9305      	str	r3, [sp, #20]
 8004666:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004730 <_vfiprintf_r+0x220>
 800466a:	7821      	ldrb	r1, [r4, #0]
 800466c:	2203      	movs	r2, #3
 800466e:	4650      	mov	r0, sl
 8004670:	f7fb fdae 	bl	80001d0 <memchr>
 8004674:	b138      	cbz	r0, 8004686 <_vfiprintf_r+0x176>
 8004676:	9b04      	ldr	r3, [sp, #16]
 8004678:	eba0 000a 	sub.w	r0, r0, sl
 800467c:	2240      	movs	r2, #64	@ 0x40
 800467e:	4082      	lsls	r2, r0
 8004680:	4313      	orrs	r3, r2
 8004682:	3401      	adds	r4, #1
 8004684:	9304      	str	r3, [sp, #16]
 8004686:	f814 1b01 	ldrb.w	r1, [r4], #1
 800468a:	482a      	ldr	r0, [pc, #168]	@ (8004734 <_vfiprintf_r+0x224>)
 800468c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004690:	2206      	movs	r2, #6
 8004692:	f7fb fd9d 	bl	80001d0 <memchr>
 8004696:	2800      	cmp	r0, #0
 8004698:	d03f      	beq.n	800471a <_vfiprintf_r+0x20a>
 800469a:	4b27      	ldr	r3, [pc, #156]	@ (8004738 <_vfiprintf_r+0x228>)
 800469c:	bb1b      	cbnz	r3, 80046e6 <_vfiprintf_r+0x1d6>
 800469e:	9b03      	ldr	r3, [sp, #12]
 80046a0:	3307      	adds	r3, #7
 80046a2:	f023 0307 	bic.w	r3, r3, #7
 80046a6:	3308      	adds	r3, #8
 80046a8:	9303      	str	r3, [sp, #12]
 80046aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046ac:	443b      	add	r3, r7
 80046ae:	9309      	str	r3, [sp, #36]	@ 0x24
 80046b0:	e76a      	b.n	8004588 <_vfiprintf_r+0x78>
 80046b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80046b6:	460c      	mov	r4, r1
 80046b8:	2001      	movs	r0, #1
 80046ba:	e7a8      	b.n	800460e <_vfiprintf_r+0xfe>
 80046bc:	2300      	movs	r3, #0
 80046be:	3401      	adds	r4, #1
 80046c0:	9305      	str	r3, [sp, #20]
 80046c2:	4619      	mov	r1, r3
 80046c4:	f04f 0c0a 	mov.w	ip, #10
 80046c8:	4620      	mov	r0, r4
 80046ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046ce:	3a30      	subs	r2, #48	@ 0x30
 80046d0:	2a09      	cmp	r2, #9
 80046d2:	d903      	bls.n	80046dc <_vfiprintf_r+0x1cc>
 80046d4:	2b00      	cmp	r3, #0
 80046d6:	d0c6      	beq.n	8004666 <_vfiprintf_r+0x156>
 80046d8:	9105      	str	r1, [sp, #20]
 80046da:	e7c4      	b.n	8004666 <_vfiprintf_r+0x156>
 80046dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80046e0:	4604      	mov	r4, r0
 80046e2:	2301      	movs	r3, #1
 80046e4:	e7f0      	b.n	80046c8 <_vfiprintf_r+0x1b8>
 80046e6:	ab03      	add	r3, sp, #12
 80046e8:	9300      	str	r3, [sp, #0]
 80046ea:	462a      	mov	r2, r5
 80046ec:	4b13      	ldr	r3, [pc, #76]	@ (800473c <_vfiprintf_r+0x22c>)
 80046ee:	a904      	add	r1, sp, #16
 80046f0:	4630      	mov	r0, r6
 80046f2:	f7fd fdd1 	bl	8002298 <_printf_float>
 80046f6:	4607      	mov	r7, r0
 80046f8:	1c78      	adds	r0, r7, #1
 80046fa:	d1d6      	bne.n	80046aa <_vfiprintf_r+0x19a>
 80046fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80046fe:	07d9      	lsls	r1, r3, #31
 8004700:	d405      	bmi.n	800470e <_vfiprintf_r+0x1fe>
 8004702:	89ab      	ldrh	r3, [r5, #12]
 8004704:	059a      	lsls	r2, r3, #22
 8004706:	d402      	bmi.n	800470e <_vfiprintf_r+0x1fe>
 8004708:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800470a:	f7fe fc05 	bl	8002f18 <__retarget_lock_release_recursive>
 800470e:	89ab      	ldrh	r3, [r5, #12]
 8004710:	065b      	lsls	r3, r3, #25
 8004712:	f53f af1f 	bmi.w	8004554 <_vfiprintf_r+0x44>
 8004716:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004718:	e71e      	b.n	8004558 <_vfiprintf_r+0x48>
 800471a:	ab03      	add	r3, sp, #12
 800471c:	9300      	str	r3, [sp, #0]
 800471e:	462a      	mov	r2, r5
 8004720:	4b06      	ldr	r3, [pc, #24]	@ (800473c <_vfiprintf_r+0x22c>)
 8004722:	a904      	add	r1, sp, #16
 8004724:	4630      	mov	r0, r6
 8004726:	f7fe f851 	bl	80027cc <_printf_i>
 800472a:	e7e4      	b.n	80046f6 <_vfiprintf_r+0x1e6>
 800472c:	080051c7 	.word	0x080051c7
 8004730:	080051cd 	.word	0x080051cd
 8004734:	080051d1 	.word	0x080051d1
 8004738:	08002299 	.word	0x08002299
 800473c:	080044eb 	.word	0x080044eb

08004740 <__sflush_r>:
 8004740:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004746:	0716      	lsls	r6, r2, #28
 8004748:	4605      	mov	r5, r0
 800474a:	460c      	mov	r4, r1
 800474c:	d454      	bmi.n	80047f8 <__sflush_r+0xb8>
 800474e:	684b      	ldr	r3, [r1, #4]
 8004750:	2b00      	cmp	r3, #0
 8004752:	dc02      	bgt.n	800475a <__sflush_r+0x1a>
 8004754:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8004756:	2b00      	cmp	r3, #0
 8004758:	dd48      	ble.n	80047ec <__sflush_r+0xac>
 800475a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800475c:	2e00      	cmp	r6, #0
 800475e:	d045      	beq.n	80047ec <__sflush_r+0xac>
 8004760:	2300      	movs	r3, #0
 8004762:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8004766:	682f      	ldr	r7, [r5, #0]
 8004768:	6a21      	ldr	r1, [r4, #32]
 800476a:	602b      	str	r3, [r5, #0]
 800476c:	d030      	beq.n	80047d0 <__sflush_r+0x90>
 800476e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004770:	89a3      	ldrh	r3, [r4, #12]
 8004772:	0759      	lsls	r1, r3, #29
 8004774:	d505      	bpl.n	8004782 <__sflush_r+0x42>
 8004776:	6863      	ldr	r3, [r4, #4]
 8004778:	1ad2      	subs	r2, r2, r3
 800477a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800477c:	b10b      	cbz	r3, 8004782 <__sflush_r+0x42>
 800477e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004780:	1ad2      	subs	r2, r2, r3
 8004782:	2300      	movs	r3, #0
 8004784:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004786:	6a21      	ldr	r1, [r4, #32]
 8004788:	4628      	mov	r0, r5
 800478a:	47b0      	blx	r6
 800478c:	1c43      	adds	r3, r0, #1
 800478e:	89a3      	ldrh	r3, [r4, #12]
 8004790:	d106      	bne.n	80047a0 <__sflush_r+0x60>
 8004792:	6829      	ldr	r1, [r5, #0]
 8004794:	291d      	cmp	r1, #29
 8004796:	d82b      	bhi.n	80047f0 <__sflush_r+0xb0>
 8004798:	4a28      	ldr	r2, [pc, #160]	@ (800483c <__sflush_r+0xfc>)
 800479a:	40ca      	lsrs	r2, r1
 800479c:	07d6      	lsls	r6, r2, #31
 800479e:	d527      	bpl.n	80047f0 <__sflush_r+0xb0>
 80047a0:	2200      	movs	r2, #0
 80047a2:	6062      	str	r2, [r4, #4]
 80047a4:	04d9      	lsls	r1, r3, #19
 80047a6:	6922      	ldr	r2, [r4, #16]
 80047a8:	6022      	str	r2, [r4, #0]
 80047aa:	d504      	bpl.n	80047b6 <__sflush_r+0x76>
 80047ac:	1c42      	adds	r2, r0, #1
 80047ae:	d101      	bne.n	80047b4 <__sflush_r+0x74>
 80047b0:	682b      	ldr	r3, [r5, #0]
 80047b2:	b903      	cbnz	r3, 80047b6 <__sflush_r+0x76>
 80047b4:	6560      	str	r0, [r4, #84]	@ 0x54
 80047b6:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80047b8:	602f      	str	r7, [r5, #0]
 80047ba:	b1b9      	cbz	r1, 80047ec <__sflush_r+0xac>
 80047bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80047c0:	4299      	cmp	r1, r3
 80047c2:	d002      	beq.n	80047ca <__sflush_r+0x8a>
 80047c4:	4628      	mov	r0, r5
 80047c6:	f7ff fa03 	bl	8003bd0 <_free_r>
 80047ca:	2300      	movs	r3, #0
 80047cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80047ce:	e00d      	b.n	80047ec <__sflush_r+0xac>
 80047d0:	2301      	movs	r3, #1
 80047d2:	4628      	mov	r0, r5
 80047d4:	47b0      	blx	r6
 80047d6:	4602      	mov	r2, r0
 80047d8:	1c50      	adds	r0, r2, #1
 80047da:	d1c9      	bne.n	8004770 <__sflush_r+0x30>
 80047dc:	682b      	ldr	r3, [r5, #0]
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d0c6      	beq.n	8004770 <__sflush_r+0x30>
 80047e2:	2b1d      	cmp	r3, #29
 80047e4:	d001      	beq.n	80047ea <__sflush_r+0xaa>
 80047e6:	2b16      	cmp	r3, #22
 80047e8:	d11d      	bne.n	8004826 <__sflush_r+0xe6>
 80047ea:	602f      	str	r7, [r5, #0]
 80047ec:	2000      	movs	r0, #0
 80047ee:	e021      	b.n	8004834 <__sflush_r+0xf4>
 80047f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80047f4:	b21b      	sxth	r3, r3
 80047f6:	e01a      	b.n	800482e <__sflush_r+0xee>
 80047f8:	690f      	ldr	r7, [r1, #16]
 80047fa:	2f00      	cmp	r7, #0
 80047fc:	d0f6      	beq.n	80047ec <__sflush_r+0xac>
 80047fe:	0793      	lsls	r3, r2, #30
 8004800:	680e      	ldr	r6, [r1, #0]
 8004802:	bf08      	it	eq
 8004804:	694b      	ldreq	r3, [r1, #20]
 8004806:	600f      	str	r7, [r1, #0]
 8004808:	bf18      	it	ne
 800480a:	2300      	movne	r3, #0
 800480c:	1bf6      	subs	r6, r6, r7
 800480e:	608b      	str	r3, [r1, #8]
 8004810:	2e00      	cmp	r6, #0
 8004812:	ddeb      	ble.n	80047ec <__sflush_r+0xac>
 8004814:	6a21      	ldr	r1, [r4, #32]
 8004816:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800481a:	4633      	mov	r3, r6
 800481c:	463a      	mov	r2, r7
 800481e:	4628      	mov	r0, r5
 8004820:	47e0      	blx	ip
 8004822:	2800      	cmp	r0, #0
 8004824:	dc07      	bgt.n	8004836 <__sflush_r+0xf6>
 8004826:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800482a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800482e:	81a3      	strh	r3, [r4, #12]
 8004830:	f04f 30ff 	mov.w	r0, #4294967295
 8004834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004836:	4407      	add	r7, r0
 8004838:	1a36      	subs	r6, r6, r0
 800483a:	e7e9      	b.n	8004810 <__sflush_r+0xd0>
 800483c:	20400001 	.word	0x20400001

08004840 <_fflush_r>:
 8004840:	b538      	push	{r3, r4, r5, lr}
 8004842:	690b      	ldr	r3, [r1, #16]
 8004844:	4605      	mov	r5, r0
 8004846:	460c      	mov	r4, r1
 8004848:	b913      	cbnz	r3, 8004850 <_fflush_r+0x10>
 800484a:	2500      	movs	r5, #0
 800484c:	4628      	mov	r0, r5
 800484e:	bd38      	pop	{r3, r4, r5, pc}
 8004850:	b118      	cbz	r0, 800485a <_fflush_r+0x1a>
 8004852:	6a03      	ldr	r3, [r0, #32]
 8004854:	b90b      	cbnz	r3, 800485a <_fflush_r+0x1a>
 8004856:	f7fe f963 	bl	8002b20 <__sinit>
 800485a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800485e:	2b00      	cmp	r3, #0
 8004860:	d0f3      	beq.n	800484a <_fflush_r+0xa>
 8004862:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004864:	07d0      	lsls	r0, r2, #31
 8004866:	d404      	bmi.n	8004872 <_fflush_r+0x32>
 8004868:	0599      	lsls	r1, r3, #22
 800486a:	d402      	bmi.n	8004872 <_fflush_r+0x32>
 800486c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800486e:	f7fe fb52 	bl	8002f16 <__retarget_lock_acquire_recursive>
 8004872:	4628      	mov	r0, r5
 8004874:	4621      	mov	r1, r4
 8004876:	f7ff ff63 	bl	8004740 <__sflush_r>
 800487a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800487c:	07da      	lsls	r2, r3, #31
 800487e:	4605      	mov	r5, r0
 8004880:	d4e4      	bmi.n	800484c <_fflush_r+0xc>
 8004882:	89a3      	ldrh	r3, [r4, #12]
 8004884:	059b      	lsls	r3, r3, #22
 8004886:	d4e1      	bmi.n	800484c <_fflush_r+0xc>
 8004888:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800488a:	f7fe fb45 	bl	8002f18 <__retarget_lock_release_recursive>
 800488e:	e7dd      	b.n	800484c <_fflush_r+0xc>

08004890 <__swhatbuf_r>:
 8004890:	b570      	push	{r4, r5, r6, lr}
 8004892:	460c      	mov	r4, r1
 8004894:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004898:	2900      	cmp	r1, #0
 800489a:	b096      	sub	sp, #88	@ 0x58
 800489c:	4615      	mov	r5, r2
 800489e:	461e      	mov	r6, r3
 80048a0:	da0d      	bge.n	80048be <__swhatbuf_r+0x2e>
 80048a2:	89a3      	ldrh	r3, [r4, #12]
 80048a4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80048a8:	f04f 0100 	mov.w	r1, #0
 80048ac:	bf14      	ite	ne
 80048ae:	2340      	movne	r3, #64	@ 0x40
 80048b0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80048b4:	2000      	movs	r0, #0
 80048b6:	6031      	str	r1, [r6, #0]
 80048b8:	602b      	str	r3, [r5, #0]
 80048ba:	b016      	add	sp, #88	@ 0x58
 80048bc:	bd70      	pop	{r4, r5, r6, pc}
 80048be:	466a      	mov	r2, sp
 80048c0:	f000 f848 	bl	8004954 <_fstat_r>
 80048c4:	2800      	cmp	r0, #0
 80048c6:	dbec      	blt.n	80048a2 <__swhatbuf_r+0x12>
 80048c8:	9901      	ldr	r1, [sp, #4]
 80048ca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80048ce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80048d2:	4259      	negs	r1, r3
 80048d4:	4159      	adcs	r1, r3
 80048d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80048da:	e7eb      	b.n	80048b4 <__swhatbuf_r+0x24>

080048dc <__smakebuf_r>:
 80048dc:	898b      	ldrh	r3, [r1, #12]
 80048de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80048e0:	079d      	lsls	r5, r3, #30
 80048e2:	4606      	mov	r6, r0
 80048e4:	460c      	mov	r4, r1
 80048e6:	d507      	bpl.n	80048f8 <__smakebuf_r+0x1c>
 80048e8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80048ec:	6023      	str	r3, [r4, #0]
 80048ee:	6123      	str	r3, [r4, #16]
 80048f0:	2301      	movs	r3, #1
 80048f2:	6163      	str	r3, [r4, #20]
 80048f4:	b003      	add	sp, #12
 80048f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80048f8:	ab01      	add	r3, sp, #4
 80048fa:	466a      	mov	r2, sp
 80048fc:	f7ff ffc8 	bl	8004890 <__swhatbuf_r>
 8004900:	9f00      	ldr	r7, [sp, #0]
 8004902:	4605      	mov	r5, r0
 8004904:	4639      	mov	r1, r7
 8004906:	4630      	mov	r0, r6
 8004908:	f7ff f9d6 	bl	8003cb8 <_malloc_r>
 800490c:	b948      	cbnz	r0, 8004922 <__smakebuf_r+0x46>
 800490e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004912:	059a      	lsls	r2, r3, #22
 8004914:	d4ee      	bmi.n	80048f4 <__smakebuf_r+0x18>
 8004916:	f023 0303 	bic.w	r3, r3, #3
 800491a:	f043 0302 	orr.w	r3, r3, #2
 800491e:	81a3      	strh	r3, [r4, #12]
 8004920:	e7e2      	b.n	80048e8 <__smakebuf_r+0xc>
 8004922:	89a3      	ldrh	r3, [r4, #12]
 8004924:	6020      	str	r0, [r4, #0]
 8004926:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800492a:	81a3      	strh	r3, [r4, #12]
 800492c:	9b01      	ldr	r3, [sp, #4]
 800492e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004932:	b15b      	cbz	r3, 800494c <__smakebuf_r+0x70>
 8004934:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004938:	4630      	mov	r0, r6
 800493a:	f000 f81d 	bl	8004978 <_isatty_r>
 800493e:	b128      	cbz	r0, 800494c <__smakebuf_r+0x70>
 8004940:	89a3      	ldrh	r3, [r4, #12]
 8004942:	f023 0303 	bic.w	r3, r3, #3
 8004946:	f043 0301 	orr.w	r3, r3, #1
 800494a:	81a3      	strh	r3, [r4, #12]
 800494c:	89a3      	ldrh	r3, [r4, #12]
 800494e:	431d      	orrs	r5, r3
 8004950:	81a5      	strh	r5, [r4, #12]
 8004952:	e7cf      	b.n	80048f4 <__smakebuf_r+0x18>

08004954 <_fstat_r>:
 8004954:	b538      	push	{r3, r4, r5, lr}
 8004956:	4d07      	ldr	r5, [pc, #28]	@ (8004974 <_fstat_r+0x20>)
 8004958:	2300      	movs	r3, #0
 800495a:	4604      	mov	r4, r0
 800495c:	4608      	mov	r0, r1
 800495e:	4611      	mov	r1, r2
 8004960:	602b      	str	r3, [r5, #0]
 8004962:	f7fd fb75 	bl	8002050 <_fstat>
 8004966:	1c43      	adds	r3, r0, #1
 8004968:	d102      	bne.n	8004970 <_fstat_r+0x1c>
 800496a:	682b      	ldr	r3, [r5, #0]
 800496c:	b103      	cbz	r3, 8004970 <_fstat_r+0x1c>
 800496e:	6023      	str	r3, [r4, #0]
 8004970:	bd38      	pop	{r3, r4, r5, pc}
 8004972:	bf00      	nop
 8004974:	20000364 	.word	0x20000364

08004978 <_isatty_r>:
 8004978:	b538      	push	{r3, r4, r5, lr}
 800497a:	4d06      	ldr	r5, [pc, #24]	@ (8004994 <_isatty_r+0x1c>)
 800497c:	2300      	movs	r3, #0
 800497e:	4604      	mov	r4, r0
 8004980:	4608      	mov	r0, r1
 8004982:	602b      	str	r3, [r5, #0]
 8004984:	f7fd fb73 	bl	800206e <_isatty>
 8004988:	1c43      	adds	r3, r0, #1
 800498a:	d102      	bne.n	8004992 <_isatty_r+0x1a>
 800498c:	682b      	ldr	r3, [r5, #0]
 800498e:	b103      	cbz	r3, 8004992 <_isatty_r+0x1a>
 8004990:	6023      	str	r3, [r4, #0]
 8004992:	bd38      	pop	{r3, r4, r5, pc}
 8004994:	20000364 	.word	0x20000364

08004998 <_sbrk_r>:
 8004998:	b538      	push	{r3, r4, r5, lr}
 800499a:	4d06      	ldr	r5, [pc, #24]	@ (80049b4 <_sbrk_r+0x1c>)
 800499c:	2300      	movs	r3, #0
 800499e:	4604      	mov	r4, r0
 80049a0:	4608      	mov	r0, r1
 80049a2:	602b      	str	r3, [r5, #0]
 80049a4:	f7fd fb7a 	bl	800209c <_sbrk>
 80049a8:	1c43      	adds	r3, r0, #1
 80049aa:	d102      	bne.n	80049b2 <_sbrk_r+0x1a>
 80049ac:	682b      	ldr	r3, [r5, #0]
 80049ae:	b103      	cbz	r3, 80049b2 <_sbrk_r+0x1a>
 80049b0:	6023      	str	r3, [r4, #0]
 80049b2:	bd38      	pop	{r3, r4, r5, pc}
 80049b4:	20000364 	.word	0x20000364

080049b8 <memcpy>:
 80049b8:	440a      	add	r2, r1
 80049ba:	4291      	cmp	r1, r2
 80049bc:	f100 33ff 	add.w	r3, r0, #4294967295
 80049c0:	d100      	bne.n	80049c4 <memcpy+0xc>
 80049c2:	4770      	bx	lr
 80049c4:	b510      	push	{r4, lr}
 80049c6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80049ca:	f803 4f01 	strb.w	r4, [r3, #1]!
 80049ce:	4291      	cmp	r1, r2
 80049d0:	d1f9      	bne.n	80049c6 <memcpy+0xe>
 80049d2:	bd10      	pop	{r4, pc}

080049d4 <__assert_func>:
 80049d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80049d6:	4614      	mov	r4, r2
 80049d8:	461a      	mov	r2, r3
 80049da:	4b09      	ldr	r3, [pc, #36]	@ (8004a00 <__assert_func+0x2c>)
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	4605      	mov	r5, r0
 80049e0:	68d8      	ldr	r0, [r3, #12]
 80049e2:	b14c      	cbz	r4, 80049f8 <__assert_func+0x24>
 80049e4:	4b07      	ldr	r3, [pc, #28]	@ (8004a04 <__assert_func+0x30>)
 80049e6:	9100      	str	r1, [sp, #0]
 80049e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80049ec:	4906      	ldr	r1, [pc, #24]	@ (8004a08 <__assert_func+0x34>)
 80049ee:	462b      	mov	r3, r5
 80049f0:	f000 f842 	bl	8004a78 <fiprintf>
 80049f4:	f000 f852 	bl	8004a9c <abort>
 80049f8:	4b04      	ldr	r3, [pc, #16]	@ (8004a0c <__assert_func+0x38>)
 80049fa:	461c      	mov	r4, r3
 80049fc:	e7f3      	b.n	80049e6 <__assert_func+0x12>
 80049fe:	bf00      	nop
 8004a00:	2000000c 	.word	0x2000000c
 8004a04:	080051e2 	.word	0x080051e2
 8004a08:	080051ef 	.word	0x080051ef
 8004a0c:	0800521d 	.word	0x0800521d

08004a10 <_calloc_r>:
 8004a10:	b570      	push	{r4, r5, r6, lr}
 8004a12:	fba1 5402 	umull	r5, r4, r1, r2
 8004a16:	b934      	cbnz	r4, 8004a26 <_calloc_r+0x16>
 8004a18:	4629      	mov	r1, r5
 8004a1a:	f7ff f94d 	bl	8003cb8 <_malloc_r>
 8004a1e:	4606      	mov	r6, r0
 8004a20:	b928      	cbnz	r0, 8004a2e <_calloc_r+0x1e>
 8004a22:	4630      	mov	r0, r6
 8004a24:	bd70      	pop	{r4, r5, r6, pc}
 8004a26:	220c      	movs	r2, #12
 8004a28:	6002      	str	r2, [r0, #0]
 8004a2a:	2600      	movs	r6, #0
 8004a2c:	e7f9      	b.n	8004a22 <_calloc_r+0x12>
 8004a2e:	462a      	mov	r2, r5
 8004a30:	4621      	mov	r1, r4
 8004a32:	f7fe f9f3 	bl	8002e1c <memset>
 8004a36:	e7f4      	b.n	8004a22 <_calloc_r+0x12>

08004a38 <__ascii_mbtowc>:
 8004a38:	b082      	sub	sp, #8
 8004a3a:	b901      	cbnz	r1, 8004a3e <__ascii_mbtowc+0x6>
 8004a3c:	a901      	add	r1, sp, #4
 8004a3e:	b142      	cbz	r2, 8004a52 <__ascii_mbtowc+0x1a>
 8004a40:	b14b      	cbz	r3, 8004a56 <__ascii_mbtowc+0x1e>
 8004a42:	7813      	ldrb	r3, [r2, #0]
 8004a44:	600b      	str	r3, [r1, #0]
 8004a46:	7812      	ldrb	r2, [r2, #0]
 8004a48:	1e10      	subs	r0, r2, #0
 8004a4a:	bf18      	it	ne
 8004a4c:	2001      	movne	r0, #1
 8004a4e:	b002      	add	sp, #8
 8004a50:	4770      	bx	lr
 8004a52:	4610      	mov	r0, r2
 8004a54:	e7fb      	b.n	8004a4e <__ascii_mbtowc+0x16>
 8004a56:	f06f 0001 	mvn.w	r0, #1
 8004a5a:	e7f8      	b.n	8004a4e <__ascii_mbtowc+0x16>

08004a5c <__ascii_wctomb>:
 8004a5c:	4603      	mov	r3, r0
 8004a5e:	4608      	mov	r0, r1
 8004a60:	b141      	cbz	r1, 8004a74 <__ascii_wctomb+0x18>
 8004a62:	2aff      	cmp	r2, #255	@ 0xff
 8004a64:	d904      	bls.n	8004a70 <__ascii_wctomb+0x14>
 8004a66:	228a      	movs	r2, #138	@ 0x8a
 8004a68:	601a      	str	r2, [r3, #0]
 8004a6a:	f04f 30ff 	mov.w	r0, #4294967295
 8004a6e:	4770      	bx	lr
 8004a70:	700a      	strb	r2, [r1, #0]
 8004a72:	2001      	movs	r0, #1
 8004a74:	4770      	bx	lr
	...

08004a78 <fiprintf>:
 8004a78:	b40e      	push	{r1, r2, r3}
 8004a7a:	b503      	push	{r0, r1, lr}
 8004a7c:	4601      	mov	r1, r0
 8004a7e:	ab03      	add	r3, sp, #12
 8004a80:	4805      	ldr	r0, [pc, #20]	@ (8004a98 <fiprintf+0x20>)
 8004a82:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a86:	6800      	ldr	r0, [r0, #0]
 8004a88:	9301      	str	r3, [sp, #4]
 8004a8a:	f7ff fd41 	bl	8004510 <_vfiprintf_r>
 8004a8e:	b002      	add	sp, #8
 8004a90:	f85d eb04 	ldr.w	lr, [sp], #4
 8004a94:	b003      	add	sp, #12
 8004a96:	4770      	bx	lr
 8004a98:	2000000c 	.word	0x2000000c

08004a9c <abort>:
 8004a9c:	b508      	push	{r3, lr}
 8004a9e:	2006      	movs	r0, #6
 8004aa0:	f000 f82c 	bl	8004afc <raise>
 8004aa4:	2001      	movs	r0, #1
 8004aa6:	f7fd fa84 	bl	8001fb2 <_exit>

08004aaa <_raise_r>:
 8004aaa:	291f      	cmp	r1, #31
 8004aac:	b538      	push	{r3, r4, r5, lr}
 8004aae:	4605      	mov	r5, r0
 8004ab0:	460c      	mov	r4, r1
 8004ab2:	d904      	bls.n	8004abe <_raise_r+0x14>
 8004ab4:	2316      	movs	r3, #22
 8004ab6:	6003      	str	r3, [r0, #0]
 8004ab8:	f04f 30ff 	mov.w	r0, #4294967295
 8004abc:	bd38      	pop	{r3, r4, r5, pc}
 8004abe:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004ac0:	b112      	cbz	r2, 8004ac8 <_raise_r+0x1e>
 8004ac2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004ac6:	b94b      	cbnz	r3, 8004adc <_raise_r+0x32>
 8004ac8:	4628      	mov	r0, r5
 8004aca:	f000 f831 	bl	8004b30 <_getpid_r>
 8004ace:	4622      	mov	r2, r4
 8004ad0:	4601      	mov	r1, r0
 8004ad2:	4628      	mov	r0, r5
 8004ad4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004ad8:	f000 b818 	b.w	8004b0c <_kill_r>
 8004adc:	2b01      	cmp	r3, #1
 8004ade:	d00a      	beq.n	8004af6 <_raise_r+0x4c>
 8004ae0:	1c59      	adds	r1, r3, #1
 8004ae2:	d103      	bne.n	8004aec <_raise_r+0x42>
 8004ae4:	2316      	movs	r3, #22
 8004ae6:	6003      	str	r3, [r0, #0]
 8004ae8:	2001      	movs	r0, #1
 8004aea:	e7e7      	b.n	8004abc <_raise_r+0x12>
 8004aec:	2100      	movs	r1, #0
 8004aee:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004af2:	4620      	mov	r0, r4
 8004af4:	4798      	blx	r3
 8004af6:	2000      	movs	r0, #0
 8004af8:	e7e0      	b.n	8004abc <_raise_r+0x12>
	...

08004afc <raise>:
 8004afc:	4b02      	ldr	r3, [pc, #8]	@ (8004b08 <raise+0xc>)
 8004afe:	4601      	mov	r1, r0
 8004b00:	6818      	ldr	r0, [r3, #0]
 8004b02:	f7ff bfd2 	b.w	8004aaa <_raise_r>
 8004b06:	bf00      	nop
 8004b08:	2000000c 	.word	0x2000000c

08004b0c <_kill_r>:
 8004b0c:	b538      	push	{r3, r4, r5, lr}
 8004b0e:	4d07      	ldr	r5, [pc, #28]	@ (8004b2c <_kill_r+0x20>)
 8004b10:	2300      	movs	r3, #0
 8004b12:	4604      	mov	r4, r0
 8004b14:	4608      	mov	r0, r1
 8004b16:	4611      	mov	r1, r2
 8004b18:	602b      	str	r3, [r5, #0]
 8004b1a:	f7fd fa3a 	bl	8001f92 <_kill>
 8004b1e:	1c43      	adds	r3, r0, #1
 8004b20:	d102      	bne.n	8004b28 <_kill_r+0x1c>
 8004b22:	682b      	ldr	r3, [r5, #0]
 8004b24:	b103      	cbz	r3, 8004b28 <_kill_r+0x1c>
 8004b26:	6023      	str	r3, [r4, #0]
 8004b28:	bd38      	pop	{r3, r4, r5, pc}
 8004b2a:	bf00      	nop
 8004b2c:	20000364 	.word	0x20000364

08004b30 <_getpid_r>:
 8004b30:	f7fd ba28 	b.w	8001f84 <_getpid>

08004b34 <asinf>:
 8004b34:	b538      	push	{r3, r4, r5, lr}
 8004b36:	4604      	mov	r4, r0
 8004b38:	f000 f824 	bl	8004b84 <__ieee754_asinf>
 8004b3c:	4621      	mov	r1, r4
 8004b3e:	4605      	mov	r5, r0
 8004b40:	4620      	mov	r0, r4
 8004b42:	f7fc fb05 	bl	8001150 <__aeabi_fcmpun>
 8004b46:	b980      	cbnz	r0, 8004b6a <asinf+0x36>
 8004b48:	4620      	mov	r0, r4
 8004b4a:	f000 f813 	bl	8004b74 <fabsf>
 8004b4e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8004b52:	f7fc faf3 	bl	800113c <__aeabi_fcmpgt>
 8004b56:	b140      	cbz	r0, 8004b6a <asinf+0x36>
 8004b58:	f7fe f9b2 	bl	8002ec0 <__errno>
 8004b5c:	2321      	movs	r3, #33	@ 0x21
 8004b5e:	6003      	str	r3, [r0, #0]
 8004b60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004b64:	4802      	ldr	r0, [pc, #8]	@ (8004b70 <asinf+0x3c>)
 8004b66:	f000 b809 	b.w	8004b7c <nanf>
 8004b6a:	4628      	mov	r0, r5
 8004b6c:	bd38      	pop	{r3, r4, r5, pc}
 8004b6e:	bf00      	nop
 8004b70:	0800521d 	.word	0x0800521d

08004b74 <fabsf>:
 8004b74:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8004b78:	4770      	bx	lr
	...

08004b7c <nanf>:
 8004b7c:	4800      	ldr	r0, [pc, #0]	@ (8004b80 <nanf+0x4>)
 8004b7e:	4770      	bx	lr
 8004b80:	7fc00000 	.word	0x7fc00000

08004b84 <__ieee754_asinf>:
 8004b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b88:	f020 4600 	bic.w	r6, r0, #2147483648	@ 0x80000000
 8004b8c:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 8004b90:	4604      	mov	r4, r0
 8004b92:	4605      	mov	r5, r0
 8004b94:	d10c      	bne.n	8004bb0 <__ieee754_asinf+0x2c>
 8004b96:	498c      	ldr	r1, [pc, #560]	@ (8004dc8 <__ieee754_asinf+0x244>)
 8004b98:	f7fc f914 	bl	8000dc4 <__aeabi_fmul>
 8004b9c:	498b      	ldr	r1, [pc, #556]	@ (8004dcc <__ieee754_asinf+0x248>)
 8004b9e:	4605      	mov	r5, r0
 8004ba0:	4620      	mov	r0, r4
 8004ba2:	f7fc f90f 	bl	8000dc4 <__aeabi_fmul>
 8004ba6:	4601      	mov	r1, r0
 8004ba8:	4628      	mov	r0, r5
 8004baa:	f7fc f803 	bl	8000bb4 <__addsf3>
 8004bae:	e006      	b.n	8004bbe <__ieee754_asinf+0x3a>
 8004bb0:	d909      	bls.n	8004bc6 <__ieee754_asinf+0x42>
 8004bb2:	4601      	mov	r1, r0
 8004bb4:	f7fb fffc 	bl	8000bb0 <__aeabi_fsub>
 8004bb8:	4601      	mov	r1, r0
 8004bba:	f7fc f9b7 	bl	8000f2c <__aeabi_fdiv>
 8004bbe:	4604      	mov	r4, r0
 8004bc0:	4620      	mov	r0, r4
 8004bc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004bc6:	f1b6 5f7c 	cmp.w	r6, #1056964608	@ 0x3f000000
 8004bca:	d20b      	bcs.n	8004be4 <__ieee754_asinf+0x60>
 8004bcc:	f1b6 5f48 	cmp.w	r6, #838860800	@ 0x32000000
 8004bd0:	d273      	bcs.n	8004cba <__ieee754_asinf+0x136>
 8004bd2:	497f      	ldr	r1, [pc, #508]	@ (8004dd0 <__ieee754_asinf+0x24c>)
 8004bd4:	f7fb ffee 	bl	8000bb4 <__addsf3>
 8004bd8:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8004bdc:	f7fc faae 	bl	800113c <__aeabi_fcmpgt>
 8004be0:	2800      	cmp	r0, #0
 8004be2:	d1ed      	bne.n	8004bc0 <__ieee754_asinf+0x3c>
 8004be4:	4620      	mov	r0, r4
 8004be6:	f7ff ffc5 	bl	8004b74 <fabsf>
 8004bea:	4601      	mov	r1, r0
 8004bec:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 8004bf0:	f7fb ffde 	bl	8000bb0 <__aeabi_fsub>
 8004bf4:	f04f 517c 	mov.w	r1, #1056964608	@ 0x3f000000
 8004bf8:	f7fc f8e4 	bl	8000dc4 <__aeabi_fmul>
 8004bfc:	4975      	ldr	r1, [pc, #468]	@ (8004dd4 <__ieee754_asinf+0x250>)
 8004bfe:	4607      	mov	r7, r0
 8004c00:	f7fc f8e0 	bl	8000dc4 <__aeabi_fmul>
 8004c04:	4974      	ldr	r1, [pc, #464]	@ (8004dd8 <__ieee754_asinf+0x254>)
 8004c06:	f7fb ffd5 	bl	8000bb4 <__addsf3>
 8004c0a:	4639      	mov	r1, r7
 8004c0c:	f7fc f8da 	bl	8000dc4 <__aeabi_fmul>
 8004c10:	4972      	ldr	r1, [pc, #456]	@ (8004ddc <__ieee754_asinf+0x258>)
 8004c12:	f7fb ffcd 	bl	8000bb0 <__aeabi_fsub>
 8004c16:	4639      	mov	r1, r7
 8004c18:	f7fc f8d4 	bl	8000dc4 <__aeabi_fmul>
 8004c1c:	4970      	ldr	r1, [pc, #448]	@ (8004de0 <__ieee754_asinf+0x25c>)
 8004c1e:	f7fb ffc9 	bl	8000bb4 <__addsf3>
 8004c22:	4639      	mov	r1, r7
 8004c24:	f7fc f8ce 	bl	8000dc4 <__aeabi_fmul>
 8004c28:	496e      	ldr	r1, [pc, #440]	@ (8004de4 <__ieee754_asinf+0x260>)
 8004c2a:	f7fb ffc1 	bl	8000bb0 <__aeabi_fsub>
 8004c2e:	4639      	mov	r1, r7
 8004c30:	f7fc f8c8 	bl	8000dc4 <__aeabi_fmul>
 8004c34:	496c      	ldr	r1, [pc, #432]	@ (8004de8 <__ieee754_asinf+0x264>)
 8004c36:	f7fb ffbd 	bl	8000bb4 <__addsf3>
 8004c3a:	4639      	mov	r1, r7
 8004c3c:	f7fc f8c2 	bl	8000dc4 <__aeabi_fmul>
 8004c40:	496a      	ldr	r1, [pc, #424]	@ (8004dec <__ieee754_asinf+0x268>)
 8004c42:	4681      	mov	r9, r0
 8004c44:	4638      	mov	r0, r7
 8004c46:	f7fc f8bd 	bl	8000dc4 <__aeabi_fmul>
 8004c4a:	4969      	ldr	r1, [pc, #420]	@ (8004df0 <__ieee754_asinf+0x26c>)
 8004c4c:	f7fb ffb0 	bl	8000bb0 <__aeabi_fsub>
 8004c50:	4639      	mov	r1, r7
 8004c52:	f7fc f8b7 	bl	8000dc4 <__aeabi_fmul>
 8004c56:	4967      	ldr	r1, [pc, #412]	@ (8004df4 <__ieee754_asinf+0x270>)
 8004c58:	f7fb ffac 	bl	8000bb4 <__addsf3>
 8004c5c:	4639      	mov	r1, r7
 8004c5e:	f7fc f8b1 	bl	8000dc4 <__aeabi_fmul>
 8004c62:	4965      	ldr	r1, [pc, #404]	@ (8004df8 <__ieee754_asinf+0x274>)
 8004c64:	f7fb ffa4 	bl	8000bb0 <__aeabi_fsub>
 8004c68:	4639      	mov	r1, r7
 8004c6a:	f7fc f8ab 	bl	8000dc4 <__aeabi_fmul>
 8004c6e:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8004c72:	f7fb ff9f 	bl	8000bb4 <__addsf3>
 8004c76:	4682      	mov	sl, r0
 8004c78:	4638      	mov	r0, r7
 8004c7a:	f000 f8c5 	bl	8004e08 <__ieee754_sqrtf>
 8004c7e:	4b5f      	ldr	r3, [pc, #380]	@ (8004dfc <__ieee754_asinf+0x278>)
 8004c80:	429e      	cmp	r6, r3
 8004c82:	4680      	mov	r8, r0
 8004c84:	d963      	bls.n	8004d4e <__ieee754_asinf+0x1ca>
 8004c86:	4651      	mov	r1, sl
 8004c88:	4648      	mov	r0, r9
 8004c8a:	f7fc f94f 	bl	8000f2c <__aeabi_fdiv>
 8004c8e:	4641      	mov	r1, r8
 8004c90:	f7fc f898 	bl	8000dc4 <__aeabi_fmul>
 8004c94:	4641      	mov	r1, r8
 8004c96:	f7fb ff8d 	bl	8000bb4 <__addsf3>
 8004c9a:	4601      	mov	r1, r0
 8004c9c:	f7fb ff8a 	bl	8000bb4 <__addsf3>
 8004ca0:	4957      	ldr	r1, [pc, #348]	@ (8004e00 <__ieee754_asinf+0x27c>)
 8004ca2:	f7fb ff87 	bl	8000bb4 <__addsf3>
 8004ca6:	4601      	mov	r1, r0
 8004ca8:	4847      	ldr	r0, [pc, #284]	@ (8004dc8 <__ieee754_asinf+0x244>)
 8004caa:	f7fb ff81 	bl	8000bb0 <__aeabi_fsub>
 8004cae:	2d00      	cmp	r5, #0
 8004cb0:	4604      	mov	r4, r0
 8004cb2:	bfd8      	it	le
 8004cb4:	f100 4400 	addle.w	r4, r0, #2147483648	@ 0x80000000
 8004cb8:	e782      	b.n	8004bc0 <__ieee754_asinf+0x3c>
 8004cba:	4601      	mov	r1, r0
 8004cbc:	f7fc f882 	bl	8000dc4 <__aeabi_fmul>
 8004cc0:	4944      	ldr	r1, [pc, #272]	@ (8004dd4 <__ieee754_asinf+0x250>)
 8004cc2:	4605      	mov	r5, r0
 8004cc4:	f7fc f87e 	bl	8000dc4 <__aeabi_fmul>
 8004cc8:	4943      	ldr	r1, [pc, #268]	@ (8004dd8 <__ieee754_asinf+0x254>)
 8004cca:	f7fb ff73 	bl	8000bb4 <__addsf3>
 8004cce:	4629      	mov	r1, r5
 8004cd0:	f7fc f878 	bl	8000dc4 <__aeabi_fmul>
 8004cd4:	4941      	ldr	r1, [pc, #260]	@ (8004ddc <__ieee754_asinf+0x258>)
 8004cd6:	f7fb ff6b 	bl	8000bb0 <__aeabi_fsub>
 8004cda:	4629      	mov	r1, r5
 8004cdc:	f7fc f872 	bl	8000dc4 <__aeabi_fmul>
 8004ce0:	493f      	ldr	r1, [pc, #252]	@ (8004de0 <__ieee754_asinf+0x25c>)
 8004ce2:	f7fb ff67 	bl	8000bb4 <__addsf3>
 8004ce6:	4629      	mov	r1, r5
 8004ce8:	f7fc f86c 	bl	8000dc4 <__aeabi_fmul>
 8004cec:	493d      	ldr	r1, [pc, #244]	@ (8004de4 <__ieee754_asinf+0x260>)
 8004cee:	f7fb ff5f 	bl	8000bb0 <__aeabi_fsub>
 8004cf2:	4629      	mov	r1, r5
 8004cf4:	f7fc f866 	bl	8000dc4 <__aeabi_fmul>
 8004cf8:	493b      	ldr	r1, [pc, #236]	@ (8004de8 <__ieee754_asinf+0x264>)
 8004cfa:	f7fb ff5b 	bl	8000bb4 <__addsf3>
 8004cfe:	4629      	mov	r1, r5
 8004d00:	f7fc f860 	bl	8000dc4 <__aeabi_fmul>
 8004d04:	4939      	ldr	r1, [pc, #228]	@ (8004dec <__ieee754_asinf+0x268>)
 8004d06:	4606      	mov	r6, r0
 8004d08:	4628      	mov	r0, r5
 8004d0a:	f7fc f85b 	bl	8000dc4 <__aeabi_fmul>
 8004d0e:	4938      	ldr	r1, [pc, #224]	@ (8004df0 <__ieee754_asinf+0x26c>)
 8004d10:	f7fb ff4e 	bl	8000bb0 <__aeabi_fsub>
 8004d14:	4629      	mov	r1, r5
 8004d16:	f7fc f855 	bl	8000dc4 <__aeabi_fmul>
 8004d1a:	4936      	ldr	r1, [pc, #216]	@ (8004df4 <__ieee754_asinf+0x270>)
 8004d1c:	f7fb ff4a 	bl	8000bb4 <__addsf3>
 8004d20:	4629      	mov	r1, r5
 8004d22:	f7fc f84f 	bl	8000dc4 <__aeabi_fmul>
 8004d26:	4934      	ldr	r1, [pc, #208]	@ (8004df8 <__ieee754_asinf+0x274>)
 8004d28:	f7fb ff42 	bl	8000bb0 <__aeabi_fsub>
 8004d2c:	4629      	mov	r1, r5
 8004d2e:	f7fc f849 	bl	8000dc4 <__aeabi_fmul>
 8004d32:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8004d36:	f7fb ff3d 	bl	8000bb4 <__addsf3>
 8004d3a:	4601      	mov	r1, r0
 8004d3c:	4630      	mov	r0, r6
 8004d3e:	f7fc f8f5 	bl	8000f2c <__aeabi_fdiv>
 8004d42:	4621      	mov	r1, r4
 8004d44:	f7fc f83e 	bl	8000dc4 <__aeabi_fmul>
 8004d48:	4601      	mov	r1, r0
 8004d4a:	4620      	mov	r0, r4
 8004d4c:	e72d      	b.n	8004baa <__ieee754_asinf+0x26>
 8004d4e:	4601      	mov	r1, r0
 8004d50:	f420 667f 	bic.w	r6, r0, #4080	@ 0xff0
 8004d54:	f7fb ff2e 	bl	8000bb4 <__addsf3>
 8004d58:	4651      	mov	r1, sl
 8004d5a:	4604      	mov	r4, r0
 8004d5c:	4648      	mov	r0, r9
 8004d5e:	f7fc f8e5 	bl	8000f2c <__aeabi_fdiv>
 8004d62:	4601      	mov	r1, r0
 8004d64:	4620      	mov	r0, r4
 8004d66:	f7fc f82d 	bl	8000dc4 <__aeabi_fmul>
 8004d6a:	f026 060f 	bic.w	r6, r6, #15
 8004d6e:	4681      	mov	r9, r0
 8004d70:	4631      	mov	r1, r6
 8004d72:	4630      	mov	r0, r6
 8004d74:	f7fc f826 	bl	8000dc4 <__aeabi_fmul>
 8004d78:	4601      	mov	r1, r0
 8004d7a:	4638      	mov	r0, r7
 8004d7c:	f7fb ff18 	bl	8000bb0 <__aeabi_fsub>
 8004d80:	4631      	mov	r1, r6
 8004d82:	4604      	mov	r4, r0
 8004d84:	4640      	mov	r0, r8
 8004d86:	f7fb ff15 	bl	8000bb4 <__addsf3>
 8004d8a:	4601      	mov	r1, r0
 8004d8c:	4620      	mov	r0, r4
 8004d8e:	f7fc f8cd 	bl	8000f2c <__aeabi_fdiv>
 8004d92:	4601      	mov	r1, r0
 8004d94:	f7fb ff0e 	bl	8000bb4 <__addsf3>
 8004d98:	4601      	mov	r1, r0
 8004d9a:	480c      	ldr	r0, [pc, #48]	@ (8004dcc <__ieee754_asinf+0x248>)
 8004d9c:	f7fb ff08 	bl	8000bb0 <__aeabi_fsub>
 8004da0:	4601      	mov	r1, r0
 8004da2:	4648      	mov	r0, r9
 8004da4:	f7fb ff04 	bl	8000bb0 <__aeabi_fsub>
 8004da8:	4631      	mov	r1, r6
 8004daa:	4604      	mov	r4, r0
 8004dac:	4630      	mov	r0, r6
 8004dae:	f7fb ff01 	bl	8000bb4 <__addsf3>
 8004db2:	4601      	mov	r1, r0
 8004db4:	4813      	ldr	r0, [pc, #76]	@ (8004e04 <__ieee754_asinf+0x280>)
 8004db6:	f7fb fefb 	bl	8000bb0 <__aeabi_fsub>
 8004dba:	4601      	mov	r1, r0
 8004dbc:	4620      	mov	r0, r4
 8004dbe:	f7fb fef7 	bl	8000bb0 <__aeabi_fsub>
 8004dc2:	4601      	mov	r1, r0
 8004dc4:	480f      	ldr	r0, [pc, #60]	@ (8004e04 <__ieee754_asinf+0x280>)
 8004dc6:	e770      	b.n	8004caa <__ieee754_asinf+0x126>
 8004dc8:	3fc90fdb 	.word	0x3fc90fdb
 8004dcc:	b33bbd2e 	.word	0xb33bbd2e
 8004dd0:	7149f2ca 	.word	0x7149f2ca
 8004dd4:	3811ef08 	.word	0x3811ef08
 8004dd8:	3a4f7f04 	.word	0x3a4f7f04
 8004ddc:	3d241146 	.word	0x3d241146
 8004de0:	3e4e0aa8 	.word	0x3e4e0aa8
 8004de4:	3ea6b090 	.word	0x3ea6b090
 8004de8:	3e2aaaab 	.word	0x3e2aaaab
 8004dec:	3d9dc62e 	.word	0x3d9dc62e
 8004df0:	3f303361 	.word	0x3f303361
 8004df4:	4001572d 	.word	0x4001572d
 8004df8:	4019d139 	.word	0x4019d139
 8004dfc:	3f799999 	.word	0x3f799999
 8004e00:	333bbd2e 	.word	0x333bbd2e
 8004e04:	3f490fdb 	.word	0x3f490fdb

08004e08 <__ieee754_sqrtf>:
 8004e08:	f020 4200 	bic.w	r2, r0, #2147483648	@ 0x80000000
 8004e0c:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8004e10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e14:	4603      	mov	r3, r0
 8004e16:	4604      	mov	r4, r0
 8004e18:	d30a      	bcc.n	8004e30 <__ieee754_sqrtf+0x28>
 8004e1a:	4601      	mov	r1, r0
 8004e1c:	f7fb ffd2 	bl	8000dc4 <__aeabi_fmul>
 8004e20:	4601      	mov	r1, r0
 8004e22:	4620      	mov	r0, r4
 8004e24:	f7fb fec6 	bl	8000bb4 <__addsf3>
 8004e28:	4604      	mov	r4, r0
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004e30:	2a00      	cmp	r2, #0
 8004e32:	d0fa      	beq.n	8004e2a <__ieee754_sqrtf+0x22>
 8004e34:	2800      	cmp	r0, #0
 8004e36:	da06      	bge.n	8004e46 <__ieee754_sqrtf+0x3e>
 8004e38:	4601      	mov	r1, r0
 8004e3a:	f7fb feb9 	bl	8000bb0 <__aeabi_fsub>
 8004e3e:	4601      	mov	r1, r0
 8004e40:	f7fc f874 	bl	8000f2c <__aeabi_fdiv>
 8004e44:	e7f0      	b.n	8004e28 <__ieee754_sqrtf+0x20>
 8004e46:	f010 41ff 	ands.w	r1, r0, #2139095040	@ 0x7f800000
 8004e4a:	d03c      	beq.n	8004ec6 <__ieee754_sqrtf+0xbe>
 8004e4c:	15c2      	asrs	r2, r0, #23
 8004e4e:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8004e52:	f1a2 057f 	sub.w	r5, r2, #127	@ 0x7f
 8004e56:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004e5a:	07d2      	lsls	r2, r2, #31
 8004e5c:	bf58      	it	pl
 8004e5e:	005b      	lslpl	r3, r3, #1
 8004e60:	2400      	movs	r4, #0
 8004e62:	106d      	asrs	r5, r5, #1
 8004e64:	005b      	lsls	r3, r3, #1
 8004e66:	2019      	movs	r0, #25
 8004e68:	4626      	mov	r6, r4
 8004e6a:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
 8004e6e:	1872      	adds	r2, r6, r1
 8004e70:	429a      	cmp	r2, r3
 8004e72:	bfdd      	ittte	le
 8004e74:	1856      	addle	r6, r2, r1
 8004e76:	1864      	addle	r4, r4, r1
 8004e78:	1a9a      	suble	r2, r3, r2
 8004e7a:	461a      	movgt	r2, r3
 8004e7c:	3801      	subs	r0, #1
 8004e7e:	ea4f 0342 	mov.w	r3, r2, lsl #1
 8004e82:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8004e86:	d1f2      	bne.n	8004e6e <__ieee754_sqrtf+0x66>
 8004e88:	b1ba      	cbz	r2, 8004eba <__ieee754_sqrtf+0xb2>
 8004e8a:	4e15      	ldr	r6, [pc, #84]	@ (8004ee0 <__ieee754_sqrtf+0xd8>)
 8004e8c:	4f15      	ldr	r7, [pc, #84]	@ (8004ee4 <__ieee754_sqrtf+0xdc>)
 8004e8e:	6830      	ldr	r0, [r6, #0]
 8004e90:	6839      	ldr	r1, [r7, #0]
 8004e92:	f8d6 8000 	ldr.w	r8, [r6]
 8004e96:	f7fb fe8b 	bl	8000bb0 <__aeabi_fsub>
 8004e9a:	4601      	mov	r1, r0
 8004e9c:	4640      	mov	r0, r8
 8004e9e:	f7fc f939 	bl	8001114 <__aeabi_fcmple>
 8004ea2:	b150      	cbz	r0, 8004eba <__ieee754_sqrtf+0xb2>
 8004ea4:	6830      	ldr	r0, [r6, #0]
 8004ea6:	6839      	ldr	r1, [r7, #0]
 8004ea8:	6836      	ldr	r6, [r6, #0]
 8004eaa:	f7fb fe83 	bl	8000bb4 <__addsf3>
 8004eae:	4601      	mov	r1, r0
 8004eb0:	4630      	mov	r0, r6
 8004eb2:	f7fc f925 	bl	8001100 <__aeabi_fcmplt>
 8004eb6:	b170      	cbz	r0, 8004ed6 <__ieee754_sqrtf+0xce>
 8004eb8:	3402      	adds	r4, #2
 8004eba:	1064      	asrs	r4, r4, #1
 8004ebc:	f104 547c 	add.w	r4, r4, #1056964608	@ 0x3f000000
 8004ec0:	eb04 54c5 	add.w	r4, r4, r5, lsl #23
 8004ec4:	e7b1      	b.n	8004e2a <__ieee754_sqrtf+0x22>
 8004ec6:	005b      	lsls	r3, r3, #1
 8004ec8:	0218      	lsls	r0, r3, #8
 8004eca:	460a      	mov	r2, r1
 8004ecc:	f101 0101 	add.w	r1, r1, #1
 8004ed0:	d5f9      	bpl.n	8004ec6 <__ieee754_sqrtf+0xbe>
 8004ed2:	4252      	negs	r2, r2
 8004ed4:	e7bb      	b.n	8004e4e <__ieee754_sqrtf+0x46>
 8004ed6:	3401      	adds	r4, #1
 8004ed8:	f024 0401 	bic.w	r4, r4, #1
 8004edc:	e7ed      	b.n	8004eba <__ieee754_sqrtf+0xb2>
 8004ede:	bf00      	nop
 8004ee0:	08005428 	.word	0x08005428
 8004ee4:	08005424 	.word	0x08005424

08004ee8 <_init>:
 8004ee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eea:	bf00      	nop
 8004eec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004eee:	bc08      	pop	{r3}
 8004ef0:	469e      	mov	lr, r3
 8004ef2:	4770      	bx	lr

08004ef4 <_fini>:
 8004ef4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ef6:	bf00      	nop
 8004ef8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004efa:	bc08      	pop	{r3}
 8004efc:	469e      	mov	lr, r3
 8004efe:	4770      	bx	lr
