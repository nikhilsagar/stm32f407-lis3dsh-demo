
keypad_interface_BitField.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001360  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080014f0  080014f0  000024f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001528  08001528  0000308c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001528  08001528  00002528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001530  08001530  0000308c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001530  08001530  00002530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001534  08001534  00002534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000008c  20000000  08001538  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000308c  2**0
                  CONTENTS
 10 .bss          0000016c  2000008c  2000008c  0000308c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001f8  200001f8  0000308c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000eb9  00000000  00000000  000030bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003da  00000000  00000000  00003f75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00004350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000c5  00000000  00000000  00004470  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d60  00000000  00000000  00004535  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000156d  00000000  00000000  00007295  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009d07  00000000  00000000  00008802  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00012509  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b34  00000000  00000000  0001254c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000079  00000000  00000000  00013080  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000008c 	.word	0x2000008c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080014d8 	.word	0x080014d8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000090 	.word	0x20000090
 80001cc:	080014d8 	.word	0x080014d8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <delay>:

#include <stdint.h>
#include <stdio.h>
#include "main.h"

void delay(uint32_t time) {
 8000270:	b480      	push	{r7}
 8000272:	b085      	sub	sp, #20
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
	for (volatile uint32_t i = 0; i < time; i++);
 8000278:	2300      	movs	r3, #0
 800027a:	60fb      	str	r3, [r7, #12]
 800027c:	e002      	b.n	8000284 <delay+0x14>
 800027e:	68fb      	ldr	r3, [r7, #12]
 8000280:	3301      	adds	r3, #1
 8000282:	60fb      	str	r3, [r7, #12]
 8000284:	68fb      	ldr	r3, [r7, #12]
 8000286:	687a      	ldr	r2, [r7, #4]
 8000288:	429a      	cmp	r2, r3
 800028a:	d8f8      	bhi.n	800027e <delay+0xe>
}
 800028c:	bf00      	nop
 800028e:	bf00      	nop
 8000290:	3714      	adds	r7, #20
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr
	...

0800029c <main>:
int Row[4]={0,1,2,3};
int colm[4]={8,9,10,11};


int main(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	b084      	sub	sp, #16
 80002a0:	af00      	add	r7, sp, #0
    // Enable GPIOD Clock
    RCC_AHB1ENR_t->GPIODEN = 1;
 80002a2:	4a71      	ldr	r2, [pc, #452]	@ (8000468 <main+0x1cc>)
 80002a4:	6813      	ldr	r3, [r2, #0]
 80002a6:	f043 0308 	orr.w	r3, r3, #8
 80002aa:	6013      	str	r3, [r2, #0]


    // Configure PD0–PD3 as Output (Rows)
    GPIOD_MODER_t->MODER0 = 0x1;
 80002ac:	4a6f      	ldr	r2, [pc, #444]	@ (800046c <main+0x1d0>)
 80002ae:	6813      	ldr	r3, [r2, #0]
 80002b0:	2101      	movs	r1, #1
 80002b2:	f361 0301 	bfi	r3, r1, #0, #2
 80002b6:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER1 = 0x1;
 80002b8:	4a6c      	ldr	r2, [pc, #432]	@ (800046c <main+0x1d0>)
 80002ba:	6813      	ldr	r3, [r2, #0]
 80002bc:	2101      	movs	r1, #1
 80002be:	f361 0383 	bfi	r3, r1, #2, #2
 80002c2:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER2 = 0x1;
 80002c4:	4a69      	ldr	r2, [pc, #420]	@ (800046c <main+0x1d0>)
 80002c6:	6813      	ldr	r3, [r2, #0]
 80002c8:	2101      	movs	r1, #1
 80002ca:	f361 1305 	bfi	r3, r1, #4, #2
 80002ce:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER3 = 0x1;
 80002d0:	4a66      	ldr	r2, [pc, #408]	@ (800046c <main+0x1d0>)
 80002d2:	6813      	ldr	r3, [r2, #0]
 80002d4:	2101      	movs	r1, #1
 80002d6:	f361 1387 	bfi	r3, r1, #6, #2
 80002da:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER12 = 0x1;
 80002dc:	4a63      	ldr	r2, [pc, #396]	@ (800046c <main+0x1d0>)
 80002de:	6813      	ldr	r3, [r2, #0]
 80002e0:	2101      	movs	r1, #1
 80002e2:	f361 6319 	bfi	r3, r1, #24, #2
 80002e6:	6013      	str	r3, [r2, #0]

    // Configure PD8–PD11 as Input (Columns)
    GPIOD_MODER_t->MODER8 = 0x0;
 80002e8:	4a60      	ldr	r2, [pc, #384]	@ (800046c <main+0x1d0>)
 80002ea:	6813      	ldr	r3, [r2, #0]
 80002ec:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80002f0:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER9 = 0x0;
 80002f2:	4a5e      	ldr	r2, [pc, #376]	@ (800046c <main+0x1d0>)
 80002f4:	6813      	ldr	r3, [r2, #0]
 80002f6:	f423 2340 	bic.w	r3, r3, #786432	@ 0xc0000
 80002fa:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER10 = 0x0;
 80002fc:	4a5b      	ldr	r2, [pc, #364]	@ (800046c <main+0x1d0>)
 80002fe:	6813      	ldr	r3, [r2, #0]
 8000300:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8000304:	6013      	str	r3, [r2, #0]
    GPIOD_MODER_t->MODER11 = 0x0;
 8000306:	4a59      	ldr	r2, [pc, #356]	@ (800046c <main+0x1d0>)
 8000308:	6813      	ldr	r3, [r2, #0]
 800030a:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 800030e:	6013      	str	r3, [r2, #0]

    // Enable Pull-Up Resistors on Columns
    GPIOD_PUPDR_t->PUPDR8  = 0x1;
 8000310:	4a57      	ldr	r2, [pc, #348]	@ (8000470 <main+0x1d4>)
 8000312:	6813      	ldr	r3, [r2, #0]
 8000314:	2101      	movs	r1, #1
 8000316:	f361 4311 	bfi	r3, r1, #16, #2
 800031a:	6013      	str	r3, [r2, #0]
    GPIOD_PUPDR_t->PUPDR9  = 0x1;
 800031c:	4a54      	ldr	r2, [pc, #336]	@ (8000470 <main+0x1d4>)
 800031e:	6813      	ldr	r3, [r2, #0]
 8000320:	2101      	movs	r1, #1
 8000322:	f361 4393 	bfi	r3, r1, #18, #2
 8000326:	6013      	str	r3, [r2, #0]
    GPIOD_PUPDR_t->PUPDR10 = 0x1;
 8000328:	4a51      	ldr	r2, [pc, #324]	@ (8000470 <main+0x1d4>)
 800032a:	6813      	ldr	r3, [r2, #0]
 800032c:	2101      	movs	r1, #1
 800032e:	f361 5315 	bfi	r3, r1, #20, #2
 8000332:	6013      	str	r3, [r2, #0]
    GPIOD_PUPDR_t->PUPDR11 = 0x1;
 8000334:	4a4e      	ldr	r2, [pc, #312]	@ (8000470 <main+0x1d4>)
 8000336:	6813      	ldr	r3, [r2, #0]
 8000338:	2101      	movs	r1, #1
 800033a:	f361 5397 	bfi	r3, r1, #22, #2
 800033e:	6013      	str	r3, [r2, #0]
    while (1){
		for(int r = 0; r<4; r++){
 8000340:	2300      	movs	r3, #0
 8000342:	60fb      	str	r3, [r7, #12]
 8000344:	e08a      	b.n	800045c <main+0x1c0>
			// Set all rows high initially
			GPIOD_ODR_t->ODR0 = 1;
 8000346:	4a4b      	ldr	r2, [pc, #300]	@ (8000474 <main+0x1d8>)
 8000348:	6813      	ldr	r3, [r2, #0]
 800034a:	f043 0301 	orr.w	r3, r3, #1
 800034e:	6013      	str	r3, [r2, #0]
			GPIOD_ODR_t->ODR1 = 1;
 8000350:	4a48      	ldr	r2, [pc, #288]	@ (8000474 <main+0x1d8>)
 8000352:	6813      	ldr	r3, [r2, #0]
 8000354:	f043 0302 	orr.w	r3, r3, #2
 8000358:	6013      	str	r3, [r2, #0]
			GPIOD_ODR_t->ODR2 = 1;
 800035a:	4a46      	ldr	r2, [pc, #280]	@ (8000474 <main+0x1d8>)
 800035c:	6813      	ldr	r3, [r2, #0]
 800035e:	f043 0304 	orr.w	r3, r3, #4
 8000362:	6013      	str	r3, [r2, #0]
			GPIOD_ODR_t->ODR3 = 1;
 8000364:	4a43      	ldr	r2, [pc, #268]	@ (8000474 <main+0x1d8>)
 8000366:	6813      	ldr	r3, [r2, #0]
 8000368:	f043 0308 	orr.w	r3, r3, #8
 800036c:	6013      	str	r3, [r2, #0]

			switch(Row[r]){
 800036e:	4a42      	ldr	r2, [pc, #264]	@ (8000478 <main+0x1dc>)
 8000370:	68fb      	ldr	r3, [r7, #12]
 8000372:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000376:	2b03      	cmp	r3, #3
 8000378:	d822      	bhi.n	80003c0 <main+0x124>
 800037a:	a201      	add	r2, pc, #4	@ (adr r2, 8000380 <main+0xe4>)
 800037c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000380:	08000391 	.word	0x08000391
 8000384:	0800039d 	.word	0x0800039d
 8000388:	080003a9 	.word	0x080003a9
 800038c:	080003b5 	.word	0x080003b5
			case 0:  GPIOD_ODR_t->ODR0 = 0; break;
 8000390:	4a38      	ldr	r2, [pc, #224]	@ (8000474 <main+0x1d8>)
 8000392:	6813      	ldr	r3, [r2, #0]
 8000394:	f023 0301 	bic.w	r3, r3, #1
 8000398:	6013      	str	r3, [r2, #0]
 800039a:	e011      	b.n	80003c0 <main+0x124>
			case 1:  GPIOD_ODR_t->ODR1 = 0; break;
 800039c:	4a35      	ldr	r2, [pc, #212]	@ (8000474 <main+0x1d8>)
 800039e:	6813      	ldr	r3, [r2, #0]
 80003a0:	f023 0302 	bic.w	r3, r3, #2
 80003a4:	6013      	str	r3, [r2, #0]
 80003a6:	e00b      	b.n	80003c0 <main+0x124>
			case 2:  GPIOD_ODR_t->ODR2 = 0; break;
 80003a8:	4a32      	ldr	r2, [pc, #200]	@ (8000474 <main+0x1d8>)
 80003aa:	6813      	ldr	r3, [r2, #0]
 80003ac:	f023 0304 	bic.w	r3, r3, #4
 80003b0:	6013      	str	r3, [r2, #0]
 80003b2:	e005      	b.n	80003c0 <main+0x124>
			case 3:  GPIOD_ODR_t->ODR3 = 0; break;
 80003b4:	4a2f      	ldr	r2, [pc, #188]	@ (8000474 <main+0x1d8>)
 80003b6:	6813      	ldr	r3, [r2, #0]
 80003b8:	f023 0308 	bic.w	r3, r3, #8
 80003bc:	6013      	str	r3, [r2, #0]
 80003be:	bf00      	nop
			}

			for(int c=0; c<4; c++){
 80003c0:	2300      	movs	r3, #0
 80003c2:	60bb      	str	r3, [r7, #8]
 80003c4:	e044      	b.n	8000450 <main+0x1b4>
				char col_val = 1;
 80003c6:	2301      	movs	r3, #1
 80003c8:	71fb      	strb	r3, [r7, #7]
				switch(colm[c]){
 80003ca:	4a2c      	ldr	r2, [pc, #176]	@ (800047c <main+0x1e0>)
 80003cc:	68bb      	ldr	r3, [r7, #8]
 80003ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003d2:	3b08      	subs	r3, #8
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d827      	bhi.n	8000428 <main+0x18c>
 80003d8:	a201      	add	r2, pc, #4	@ (adr r2, 80003e0 <main+0x144>)
 80003da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003de:	bf00      	nop
 80003e0:	080003f1 	.word	0x080003f1
 80003e4:	080003ff 	.word	0x080003ff
 80003e8:	0800040d 	.word	0x0800040d
 80003ec:	0800041b 	.word	0x0800041b
				case 8:  col_val = GPIOD_IDR_t->IDR8; break;
 80003f0:	4b23      	ldr	r3, [pc, #140]	@ (8000480 <main+0x1e4>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f3c3 2300 	ubfx	r3, r3, #8, #1
 80003f8:	b2db      	uxtb	r3, r3
 80003fa:	71fb      	strb	r3, [r7, #7]
 80003fc:	e014      	b.n	8000428 <main+0x18c>
				case 9:  col_val = GPIOD_IDR_t->IDR9; break;
 80003fe:	4b20      	ldr	r3, [pc, #128]	@ (8000480 <main+0x1e4>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	f3c3 2340 	ubfx	r3, r3, #9, #1
 8000406:	b2db      	uxtb	r3, r3
 8000408:	71fb      	strb	r3, [r7, #7]
 800040a:	e00d      	b.n	8000428 <main+0x18c>
				case 10:  col_val = GPIOD_IDR_t->IDR10; break;
 800040c:	4b1c      	ldr	r3, [pc, #112]	@ (8000480 <main+0x1e4>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	f3c3 2380 	ubfx	r3, r3, #10, #1
 8000414:	b2db      	uxtb	r3, r3
 8000416:	71fb      	strb	r3, [r7, #7]
 8000418:	e006      	b.n	8000428 <main+0x18c>
				case 11:  col_val = GPIOD_IDR_t->IDR11; break;
 800041a:	4b19      	ldr	r3, [pc, #100]	@ (8000480 <main+0x1e4>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000422:	b2db      	uxtb	r3, r3
 8000424:	71fb      	strb	r3, [r7, #7]
 8000426:	bf00      	nop
				}
				if(!(col_val)){
 8000428:	79fb      	ldrb	r3, [r7, #7]
 800042a:	2b00      	cmp	r3, #0
 800042c:	d10d      	bne.n	800044a <main+0x1ae>
					printf("%c\n",KeyMap[r][c]);
 800042e:	4a15      	ldr	r2, [pc, #84]	@ (8000484 <main+0x1e8>)
 8000430:	68fb      	ldr	r3, [r7, #12]
 8000432:	009b      	lsls	r3, r3, #2
 8000434:	441a      	add	r2, r3
 8000436:	68bb      	ldr	r3, [r7, #8]
 8000438:	4413      	add	r3, r2
 800043a:	781b      	ldrb	r3, [r3, #0]
 800043c:	4619      	mov	r1, r3
 800043e:	4812      	ldr	r0, [pc, #72]	@ (8000488 <main+0x1ec>)
 8000440:	f000 f9de 	bl	8000800 <iprintf>
					delay(100000);
 8000444:	4811      	ldr	r0, [pc, #68]	@ (800048c <main+0x1f0>)
 8000446:	f7ff ff13 	bl	8000270 <delay>
			for(int c=0; c<4; c++){
 800044a:	68bb      	ldr	r3, [r7, #8]
 800044c:	3301      	adds	r3, #1
 800044e:	60bb      	str	r3, [r7, #8]
 8000450:	68bb      	ldr	r3, [r7, #8]
 8000452:	2b03      	cmp	r3, #3
 8000454:	ddb7      	ble.n	80003c6 <main+0x12a>
		for(int r = 0; r<4; r++){
 8000456:	68fb      	ldr	r3, [r7, #12]
 8000458:	3301      	adds	r3, #1
 800045a:	60fb      	str	r3, [r7, #12]
 800045c:	68fb      	ldr	r3, [r7, #12]
 800045e:	2b03      	cmp	r3, #3
 8000460:	f77f af71 	ble.w	8000346 <main+0xaa>
 8000464:	e76c      	b.n	8000340 <main+0xa4>
 8000466:	bf00      	nop
 8000468:	40023830 	.word	0x40023830
 800046c:	40020c00 	.word	0x40020c00
 8000470:	40020c0c 	.word	0x40020c0c
 8000474:	40020c14 	.word	0x40020c14
 8000478:	20000010 	.word	0x20000010
 800047c:	20000020 	.word	0x20000020
 8000480:	40020c10 	.word	0x40020c10
 8000484:	20000000 	.word	0x20000000
 8000488:	080014f0 	.word	0x080014f0
 800048c:	000186a0 	.word	0x000186a0

08000490 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000490:	b480      	push	{r7}
 8000492:	b083      	sub	sp, #12
 8000494:	af00      	add	r7, sp, #0
 8000496:	4603      	mov	r3, r0
 8000498:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800049a:	4b0f      	ldr	r3, [pc, #60]	@ (80004d8 <ITM_SendChar+0x48>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	4a0e      	ldr	r2, [pc, #56]	@ (80004d8 <ITM_SendChar+0x48>)
 80004a0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80004a4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80004a6:	4b0d      	ldr	r3, [pc, #52]	@ (80004dc <ITM_SendChar+0x4c>)
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a0c      	ldr	r2, [pc, #48]	@ (80004dc <ITM_SendChar+0x4c>)
 80004ac:	f043 0301 	orr.w	r3, r3, #1
 80004b0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80004b2:	bf00      	nop
 80004b4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	f003 0301 	and.w	r3, r3, #1
 80004be:	2b00      	cmp	r3, #0
 80004c0:	d0f8      	beq.n	80004b4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80004c2:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80004c6:	79fb      	ldrb	r3, [r7, #7]
 80004c8:	6013      	str	r3, [r2, #0]
}
 80004ca:	bf00      	nop
 80004cc:	370c      	adds	r7, #12
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop
 80004d8:	e000edfc 	.word	0xe000edfc
 80004dc:	e0000e00 	.word	0xe0000e00

080004e0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b086      	sub	sp, #24
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	60f8      	str	r0, [r7, #12]
 80004e8:	60b9      	str	r1, [r7, #8]
 80004ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ec:	2300      	movs	r3, #0
 80004ee:	617b      	str	r3, [r7, #20]
 80004f0:	e00a      	b.n	8000508 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80004f2:	f3af 8000 	nop.w
 80004f6:	4601      	mov	r1, r0
 80004f8:	68bb      	ldr	r3, [r7, #8]
 80004fa:	1c5a      	adds	r2, r3, #1
 80004fc:	60ba      	str	r2, [r7, #8]
 80004fe:	b2ca      	uxtb	r2, r1
 8000500:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000502:	697b      	ldr	r3, [r7, #20]
 8000504:	3301      	adds	r3, #1
 8000506:	617b      	str	r3, [r7, #20]
 8000508:	697a      	ldr	r2, [r7, #20]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	429a      	cmp	r2, r3
 800050e:	dbf0      	blt.n	80004f2 <_read+0x12>
  }

  return len;
 8000510:	687b      	ldr	r3, [r7, #4]
}
 8000512:	4618      	mov	r0, r3
 8000514:	3718      	adds	r7, #24
 8000516:	46bd      	mov	sp, r7
 8000518:	bd80      	pop	{r7, pc}

0800051a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800051a:	b580      	push	{r7, lr}
 800051c:	b086      	sub	sp, #24
 800051e:	af00      	add	r7, sp, #0
 8000520:	60f8      	str	r0, [r7, #12]
 8000522:	60b9      	str	r1, [r7, #8]
 8000524:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000526:	2300      	movs	r3, #0
 8000528:	617b      	str	r3, [r7, #20]
 800052a:	e009      	b.n	8000540 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800052c:	68bb      	ldr	r3, [r7, #8]
 800052e:	1c5a      	adds	r2, r3, #1
 8000530:	60ba      	str	r2, [r7, #8]
 8000532:	781b      	ldrb	r3, [r3, #0]
 8000534:	4618      	mov	r0, r3
 8000536:	f7ff ffab 	bl	8000490 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800053a:	697b      	ldr	r3, [r7, #20]
 800053c:	3301      	adds	r3, #1
 800053e:	617b      	str	r3, [r7, #20]
 8000540:	697a      	ldr	r2, [r7, #20]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	429a      	cmp	r2, r3
 8000546:	dbf1      	blt.n	800052c <_write+0x12>
  }
  return len;
 8000548:	687b      	ldr	r3, [r7, #4]
}
 800054a:	4618      	mov	r0, r3
 800054c:	3718      	adds	r7, #24
 800054e:	46bd      	mov	sp, r7
 8000550:	bd80      	pop	{r7, pc}

08000552 <_close>:

int _close(int file)
{
 8000552:	b480      	push	{r7}
 8000554:	b083      	sub	sp, #12
 8000556:	af00      	add	r7, sp, #0
 8000558:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800055a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800055e:	4618      	mov	r0, r3
 8000560:	370c      	adds	r7, #12
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr

0800056a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800056a:	b480      	push	{r7}
 800056c:	b083      	sub	sp, #12
 800056e:	af00      	add	r7, sp, #0
 8000570:	6078      	str	r0, [r7, #4]
 8000572:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000574:	683b      	ldr	r3, [r7, #0]
 8000576:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800057a:	605a      	str	r2, [r3, #4]
  return 0;
 800057c:	2300      	movs	r3, #0
}
 800057e:	4618      	mov	r0, r3
 8000580:	370c      	adds	r7, #12
 8000582:	46bd      	mov	sp, r7
 8000584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000588:	4770      	bx	lr

0800058a <_isatty>:

int _isatty(int file)
{
 800058a:	b480      	push	{r7}
 800058c:	b083      	sub	sp, #12
 800058e:	af00      	add	r7, sp, #0
 8000590:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000592:	2301      	movs	r3, #1
}
 8000594:	4618      	mov	r0, r3
 8000596:	370c      	adds	r7, #12
 8000598:	46bd      	mov	sp, r7
 800059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059e:	4770      	bx	lr

080005a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005a0:	b480      	push	{r7}
 80005a2:	b085      	sub	sp, #20
 80005a4:	af00      	add	r7, sp, #0
 80005a6:	60f8      	str	r0, [r7, #12]
 80005a8:	60b9      	str	r1, [r7, #8]
 80005aa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80005ac:	2300      	movs	r3, #0
}
 80005ae:	4618      	mov	r0, r3
 80005b0:	3714      	adds	r7, #20
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr
	...

080005bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	b086      	sub	sp, #24
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005c4:	4a14      	ldr	r2, [pc, #80]	@ (8000618 <_sbrk+0x5c>)
 80005c6:	4b15      	ldr	r3, [pc, #84]	@ (800061c <_sbrk+0x60>)
 80005c8:	1ad3      	subs	r3, r2, r3
 80005ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005cc:	697b      	ldr	r3, [r7, #20]
 80005ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005d0:	4b13      	ldr	r3, [pc, #76]	@ (8000620 <_sbrk+0x64>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d102      	bne.n	80005de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80005d8:	4b11      	ldr	r3, [pc, #68]	@ (8000620 <_sbrk+0x64>)
 80005da:	4a12      	ldr	r2, [pc, #72]	@ (8000624 <_sbrk+0x68>)
 80005dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80005de:	4b10      	ldr	r3, [pc, #64]	@ (8000620 <_sbrk+0x64>)
 80005e0:	681a      	ldr	r2, [r3, #0]
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	4413      	add	r3, r2
 80005e6:	693a      	ldr	r2, [r7, #16]
 80005e8:	429a      	cmp	r2, r3
 80005ea:	d207      	bcs.n	80005fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80005ec:	f000 f9ac 	bl	8000948 <__errno>
 80005f0:	4603      	mov	r3, r0
 80005f2:	220c      	movs	r2, #12
 80005f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80005f6:	f04f 33ff 	mov.w	r3, #4294967295
 80005fa:	e009      	b.n	8000610 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005fc:	4b08      	ldr	r3, [pc, #32]	@ (8000620 <_sbrk+0x64>)
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000602:	4b07      	ldr	r3, [pc, #28]	@ (8000620 <_sbrk+0x64>)
 8000604:	681a      	ldr	r2, [r3, #0]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	4413      	add	r3, r2
 800060a:	4a05      	ldr	r2, [pc, #20]	@ (8000620 <_sbrk+0x64>)
 800060c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800060e:	68fb      	ldr	r3, [r7, #12]
}
 8000610:	4618      	mov	r0, r3
 8000612:	3718      	adds	r7, #24
 8000614:	46bd      	mov	sp, r7
 8000616:	bd80      	pop	{r7, pc}
 8000618:	20020000 	.word	0x20020000
 800061c:	00000400 	.word	0x00000400
 8000620:	200000a8 	.word	0x200000a8
 8000624:	200001f8 	.word	0x200001f8

08000628 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000628:	480d      	ldr	r0, [pc, #52]	@ (8000660 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800062a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800062c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000630:	480c      	ldr	r0, [pc, #48]	@ (8000664 <LoopForever+0x6>)
  ldr r1, =_edata
 8000632:	490d      	ldr	r1, [pc, #52]	@ (8000668 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000634:	4a0d      	ldr	r2, [pc, #52]	@ (800066c <LoopForever+0xe>)
  movs r3, #0
 8000636:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000638:	e002      	b.n	8000640 <LoopCopyDataInit>

0800063a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800063a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800063c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800063e:	3304      	adds	r3, #4

08000640 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000640:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000642:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000644:	d3f9      	bcc.n	800063a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000646:	4a0a      	ldr	r2, [pc, #40]	@ (8000670 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000648:	4c0a      	ldr	r4, [pc, #40]	@ (8000674 <LoopForever+0x16>)
  movs r3, #0
 800064a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800064c:	e001      	b.n	8000652 <LoopFillZerobss>

0800064e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800064e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000650:	3204      	adds	r2, #4

08000652 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000652:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000654:	d3fb      	bcc.n	800064e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000656:	f000 f97d 	bl	8000954 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800065a:	f7ff fe1f 	bl	800029c <main>

0800065e <LoopForever>:

LoopForever:
  b LoopForever
 800065e:	e7fe      	b.n	800065e <LoopForever>
  ldr   r0, =_estack
 8000660:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000664:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000668:	2000008c 	.word	0x2000008c
  ldr r2, =_sidata
 800066c:	08001538 	.word	0x08001538
  ldr r2, =_sbss
 8000670:	2000008c 	.word	0x2000008c
  ldr r4, =_ebss
 8000674:	200001f8 	.word	0x200001f8

08000678 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000678:	e7fe      	b.n	8000678 <ADC_IRQHandler>
	...

0800067c <std>:
 800067c:	2300      	movs	r3, #0
 800067e:	b510      	push	{r4, lr}
 8000680:	4604      	mov	r4, r0
 8000682:	e9c0 3300 	strd	r3, r3, [r0]
 8000686:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800068a:	6083      	str	r3, [r0, #8]
 800068c:	8181      	strh	r1, [r0, #12]
 800068e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000690:	81c2      	strh	r2, [r0, #14]
 8000692:	6183      	str	r3, [r0, #24]
 8000694:	4619      	mov	r1, r3
 8000696:	2208      	movs	r2, #8
 8000698:	305c      	adds	r0, #92	@ 0x5c
 800069a:	f000 f906 	bl	80008aa <memset>
 800069e:	4b0d      	ldr	r3, [pc, #52]	@ (80006d4 <std+0x58>)
 80006a0:	6263      	str	r3, [r4, #36]	@ 0x24
 80006a2:	4b0d      	ldr	r3, [pc, #52]	@ (80006d8 <std+0x5c>)
 80006a4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80006a6:	4b0d      	ldr	r3, [pc, #52]	@ (80006dc <std+0x60>)
 80006a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80006aa:	4b0d      	ldr	r3, [pc, #52]	@ (80006e0 <std+0x64>)
 80006ac:	6323      	str	r3, [r4, #48]	@ 0x30
 80006ae:	4b0d      	ldr	r3, [pc, #52]	@ (80006e4 <std+0x68>)
 80006b0:	6224      	str	r4, [r4, #32]
 80006b2:	429c      	cmp	r4, r3
 80006b4:	d006      	beq.n	80006c4 <std+0x48>
 80006b6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80006ba:	4294      	cmp	r4, r2
 80006bc:	d002      	beq.n	80006c4 <std+0x48>
 80006be:	33d0      	adds	r3, #208	@ 0xd0
 80006c0:	429c      	cmp	r4, r3
 80006c2:	d105      	bne.n	80006d0 <std+0x54>
 80006c4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80006c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006cc:	f000 b966 	b.w	800099c <__retarget_lock_init_recursive>
 80006d0:	bd10      	pop	{r4, pc}
 80006d2:	bf00      	nop
 80006d4:	08000825 	.word	0x08000825
 80006d8:	08000847 	.word	0x08000847
 80006dc:	0800087f 	.word	0x0800087f
 80006e0:	080008a3 	.word	0x080008a3
 80006e4:	200000ac 	.word	0x200000ac

080006e8 <stdio_exit_handler>:
 80006e8:	4a02      	ldr	r2, [pc, #8]	@ (80006f4 <stdio_exit_handler+0xc>)
 80006ea:	4903      	ldr	r1, [pc, #12]	@ (80006f8 <stdio_exit_handler+0x10>)
 80006ec:	4803      	ldr	r0, [pc, #12]	@ (80006fc <stdio_exit_handler+0x14>)
 80006ee:	f000 b869 	b.w	80007c4 <_fwalk_sglue>
 80006f2:	bf00      	nop
 80006f4:	20000030 	.word	0x20000030
 80006f8:	08001239 	.word	0x08001239
 80006fc:	20000040 	.word	0x20000040

08000700 <cleanup_stdio>:
 8000700:	6841      	ldr	r1, [r0, #4]
 8000702:	4b0c      	ldr	r3, [pc, #48]	@ (8000734 <cleanup_stdio+0x34>)
 8000704:	4299      	cmp	r1, r3
 8000706:	b510      	push	{r4, lr}
 8000708:	4604      	mov	r4, r0
 800070a:	d001      	beq.n	8000710 <cleanup_stdio+0x10>
 800070c:	f000 fd94 	bl	8001238 <_fflush_r>
 8000710:	68a1      	ldr	r1, [r4, #8]
 8000712:	4b09      	ldr	r3, [pc, #36]	@ (8000738 <cleanup_stdio+0x38>)
 8000714:	4299      	cmp	r1, r3
 8000716:	d002      	beq.n	800071e <cleanup_stdio+0x1e>
 8000718:	4620      	mov	r0, r4
 800071a:	f000 fd8d 	bl	8001238 <_fflush_r>
 800071e:	68e1      	ldr	r1, [r4, #12]
 8000720:	4b06      	ldr	r3, [pc, #24]	@ (800073c <cleanup_stdio+0x3c>)
 8000722:	4299      	cmp	r1, r3
 8000724:	d004      	beq.n	8000730 <cleanup_stdio+0x30>
 8000726:	4620      	mov	r0, r4
 8000728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800072c:	f000 bd84 	b.w	8001238 <_fflush_r>
 8000730:	bd10      	pop	{r4, pc}
 8000732:	bf00      	nop
 8000734:	200000ac 	.word	0x200000ac
 8000738:	20000114 	.word	0x20000114
 800073c:	2000017c 	.word	0x2000017c

08000740 <global_stdio_init.part.0>:
 8000740:	b510      	push	{r4, lr}
 8000742:	4b0b      	ldr	r3, [pc, #44]	@ (8000770 <global_stdio_init.part.0+0x30>)
 8000744:	4c0b      	ldr	r4, [pc, #44]	@ (8000774 <global_stdio_init.part.0+0x34>)
 8000746:	4a0c      	ldr	r2, [pc, #48]	@ (8000778 <global_stdio_init.part.0+0x38>)
 8000748:	601a      	str	r2, [r3, #0]
 800074a:	4620      	mov	r0, r4
 800074c:	2200      	movs	r2, #0
 800074e:	2104      	movs	r1, #4
 8000750:	f7ff ff94 	bl	800067c <std>
 8000754:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000758:	2201      	movs	r2, #1
 800075a:	2109      	movs	r1, #9
 800075c:	f7ff ff8e 	bl	800067c <std>
 8000760:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000764:	2202      	movs	r2, #2
 8000766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800076a:	2112      	movs	r1, #18
 800076c:	f7ff bf86 	b.w	800067c <std>
 8000770:	200001e4 	.word	0x200001e4
 8000774:	200000ac 	.word	0x200000ac
 8000778:	080006e9 	.word	0x080006e9

0800077c <__sfp_lock_acquire>:
 800077c:	4801      	ldr	r0, [pc, #4]	@ (8000784 <__sfp_lock_acquire+0x8>)
 800077e:	f000 b90e 	b.w	800099e <__retarget_lock_acquire_recursive>
 8000782:	bf00      	nop
 8000784:	200001ed 	.word	0x200001ed

08000788 <__sfp_lock_release>:
 8000788:	4801      	ldr	r0, [pc, #4]	@ (8000790 <__sfp_lock_release+0x8>)
 800078a:	f000 b909 	b.w	80009a0 <__retarget_lock_release_recursive>
 800078e:	bf00      	nop
 8000790:	200001ed 	.word	0x200001ed

08000794 <__sinit>:
 8000794:	b510      	push	{r4, lr}
 8000796:	4604      	mov	r4, r0
 8000798:	f7ff fff0 	bl	800077c <__sfp_lock_acquire>
 800079c:	6a23      	ldr	r3, [r4, #32]
 800079e:	b11b      	cbz	r3, 80007a8 <__sinit+0x14>
 80007a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007a4:	f7ff bff0 	b.w	8000788 <__sfp_lock_release>
 80007a8:	4b04      	ldr	r3, [pc, #16]	@ (80007bc <__sinit+0x28>)
 80007aa:	6223      	str	r3, [r4, #32]
 80007ac:	4b04      	ldr	r3, [pc, #16]	@ (80007c0 <__sinit+0x2c>)
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	2b00      	cmp	r3, #0
 80007b2:	d1f5      	bne.n	80007a0 <__sinit+0xc>
 80007b4:	f7ff ffc4 	bl	8000740 <global_stdio_init.part.0>
 80007b8:	e7f2      	b.n	80007a0 <__sinit+0xc>
 80007ba:	bf00      	nop
 80007bc:	08000701 	.word	0x08000701
 80007c0:	200001e4 	.word	0x200001e4

080007c4 <_fwalk_sglue>:
 80007c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007c8:	4607      	mov	r7, r0
 80007ca:	4688      	mov	r8, r1
 80007cc:	4614      	mov	r4, r2
 80007ce:	2600      	movs	r6, #0
 80007d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007d4:	f1b9 0901 	subs.w	r9, r9, #1
 80007d8:	d505      	bpl.n	80007e6 <_fwalk_sglue+0x22>
 80007da:	6824      	ldr	r4, [r4, #0]
 80007dc:	2c00      	cmp	r4, #0
 80007de:	d1f7      	bne.n	80007d0 <_fwalk_sglue+0xc>
 80007e0:	4630      	mov	r0, r6
 80007e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007e6:	89ab      	ldrh	r3, [r5, #12]
 80007e8:	2b01      	cmp	r3, #1
 80007ea:	d907      	bls.n	80007fc <_fwalk_sglue+0x38>
 80007ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007f0:	3301      	adds	r3, #1
 80007f2:	d003      	beq.n	80007fc <_fwalk_sglue+0x38>
 80007f4:	4629      	mov	r1, r5
 80007f6:	4638      	mov	r0, r7
 80007f8:	47c0      	blx	r8
 80007fa:	4306      	orrs	r6, r0
 80007fc:	3568      	adds	r5, #104	@ 0x68
 80007fe:	e7e9      	b.n	80007d4 <_fwalk_sglue+0x10>

08000800 <iprintf>:
 8000800:	b40f      	push	{r0, r1, r2, r3}
 8000802:	b507      	push	{r0, r1, r2, lr}
 8000804:	4906      	ldr	r1, [pc, #24]	@ (8000820 <iprintf+0x20>)
 8000806:	ab04      	add	r3, sp, #16
 8000808:	6808      	ldr	r0, [r1, #0]
 800080a:	f853 2b04 	ldr.w	r2, [r3], #4
 800080e:	6881      	ldr	r1, [r0, #8]
 8000810:	9301      	str	r3, [sp, #4]
 8000812:	f000 f9e9 	bl	8000be8 <_vfiprintf_r>
 8000816:	b003      	add	sp, #12
 8000818:	f85d eb04 	ldr.w	lr, [sp], #4
 800081c:	b004      	add	sp, #16
 800081e:	4770      	bx	lr
 8000820:	2000003c 	.word	0x2000003c

08000824 <__sread>:
 8000824:	b510      	push	{r4, lr}
 8000826:	460c      	mov	r4, r1
 8000828:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800082c:	f000 f868 	bl	8000900 <_read_r>
 8000830:	2800      	cmp	r0, #0
 8000832:	bfab      	itete	ge
 8000834:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000836:	89a3      	ldrhlt	r3, [r4, #12]
 8000838:	181b      	addge	r3, r3, r0
 800083a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800083e:	bfac      	ite	ge
 8000840:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000842:	81a3      	strhlt	r3, [r4, #12]
 8000844:	bd10      	pop	{r4, pc}

08000846 <__swrite>:
 8000846:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800084a:	461f      	mov	r7, r3
 800084c:	898b      	ldrh	r3, [r1, #12]
 800084e:	05db      	lsls	r3, r3, #23
 8000850:	4605      	mov	r5, r0
 8000852:	460c      	mov	r4, r1
 8000854:	4616      	mov	r6, r2
 8000856:	d505      	bpl.n	8000864 <__swrite+0x1e>
 8000858:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800085c:	2302      	movs	r3, #2
 800085e:	2200      	movs	r2, #0
 8000860:	f000 f83c 	bl	80008dc <_lseek_r>
 8000864:	89a3      	ldrh	r3, [r4, #12]
 8000866:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800086a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800086e:	81a3      	strh	r3, [r4, #12]
 8000870:	4632      	mov	r2, r6
 8000872:	463b      	mov	r3, r7
 8000874:	4628      	mov	r0, r5
 8000876:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800087a:	f000 b853 	b.w	8000924 <_write_r>

0800087e <__sseek>:
 800087e:	b510      	push	{r4, lr}
 8000880:	460c      	mov	r4, r1
 8000882:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000886:	f000 f829 	bl	80008dc <_lseek_r>
 800088a:	1c43      	adds	r3, r0, #1
 800088c:	89a3      	ldrh	r3, [r4, #12]
 800088e:	bf15      	itete	ne
 8000890:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000892:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000896:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800089a:	81a3      	strheq	r3, [r4, #12]
 800089c:	bf18      	it	ne
 800089e:	81a3      	strhne	r3, [r4, #12]
 80008a0:	bd10      	pop	{r4, pc}

080008a2 <__sclose>:
 80008a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008a6:	f000 b809 	b.w	80008bc <_close_r>

080008aa <memset>:
 80008aa:	4402      	add	r2, r0
 80008ac:	4603      	mov	r3, r0
 80008ae:	4293      	cmp	r3, r2
 80008b0:	d100      	bne.n	80008b4 <memset+0xa>
 80008b2:	4770      	bx	lr
 80008b4:	f803 1b01 	strb.w	r1, [r3], #1
 80008b8:	e7f9      	b.n	80008ae <memset+0x4>
	...

080008bc <_close_r>:
 80008bc:	b538      	push	{r3, r4, r5, lr}
 80008be:	4d06      	ldr	r5, [pc, #24]	@ (80008d8 <_close_r+0x1c>)
 80008c0:	2300      	movs	r3, #0
 80008c2:	4604      	mov	r4, r0
 80008c4:	4608      	mov	r0, r1
 80008c6:	602b      	str	r3, [r5, #0]
 80008c8:	f7ff fe43 	bl	8000552 <_close>
 80008cc:	1c43      	adds	r3, r0, #1
 80008ce:	d102      	bne.n	80008d6 <_close_r+0x1a>
 80008d0:	682b      	ldr	r3, [r5, #0]
 80008d2:	b103      	cbz	r3, 80008d6 <_close_r+0x1a>
 80008d4:	6023      	str	r3, [r4, #0]
 80008d6:	bd38      	pop	{r3, r4, r5, pc}
 80008d8:	200001e8 	.word	0x200001e8

080008dc <_lseek_r>:
 80008dc:	b538      	push	{r3, r4, r5, lr}
 80008de:	4d07      	ldr	r5, [pc, #28]	@ (80008fc <_lseek_r+0x20>)
 80008e0:	4604      	mov	r4, r0
 80008e2:	4608      	mov	r0, r1
 80008e4:	4611      	mov	r1, r2
 80008e6:	2200      	movs	r2, #0
 80008e8:	602a      	str	r2, [r5, #0]
 80008ea:	461a      	mov	r2, r3
 80008ec:	f7ff fe58 	bl	80005a0 <_lseek>
 80008f0:	1c43      	adds	r3, r0, #1
 80008f2:	d102      	bne.n	80008fa <_lseek_r+0x1e>
 80008f4:	682b      	ldr	r3, [r5, #0]
 80008f6:	b103      	cbz	r3, 80008fa <_lseek_r+0x1e>
 80008f8:	6023      	str	r3, [r4, #0]
 80008fa:	bd38      	pop	{r3, r4, r5, pc}
 80008fc:	200001e8 	.word	0x200001e8

08000900 <_read_r>:
 8000900:	b538      	push	{r3, r4, r5, lr}
 8000902:	4d07      	ldr	r5, [pc, #28]	@ (8000920 <_read_r+0x20>)
 8000904:	4604      	mov	r4, r0
 8000906:	4608      	mov	r0, r1
 8000908:	4611      	mov	r1, r2
 800090a:	2200      	movs	r2, #0
 800090c:	602a      	str	r2, [r5, #0]
 800090e:	461a      	mov	r2, r3
 8000910:	f7ff fde6 	bl	80004e0 <_read>
 8000914:	1c43      	adds	r3, r0, #1
 8000916:	d102      	bne.n	800091e <_read_r+0x1e>
 8000918:	682b      	ldr	r3, [r5, #0]
 800091a:	b103      	cbz	r3, 800091e <_read_r+0x1e>
 800091c:	6023      	str	r3, [r4, #0]
 800091e:	bd38      	pop	{r3, r4, r5, pc}
 8000920:	200001e8 	.word	0x200001e8

08000924 <_write_r>:
 8000924:	b538      	push	{r3, r4, r5, lr}
 8000926:	4d07      	ldr	r5, [pc, #28]	@ (8000944 <_write_r+0x20>)
 8000928:	4604      	mov	r4, r0
 800092a:	4608      	mov	r0, r1
 800092c:	4611      	mov	r1, r2
 800092e:	2200      	movs	r2, #0
 8000930:	602a      	str	r2, [r5, #0]
 8000932:	461a      	mov	r2, r3
 8000934:	f7ff fdf1 	bl	800051a <_write>
 8000938:	1c43      	adds	r3, r0, #1
 800093a:	d102      	bne.n	8000942 <_write_r+0x1e>
 800093c:	682b      	ldr	r3, [r5, #0]
 800093e:	b103      	cbz	r3, 8000942 <_write_r+0x1e>
 8000940:	6023      	str	r3, [r4, #0]
 8000942:	bd38      	pop	{r3, r4, r5, pc}
 8000944:	200001e8 	.word	0x200001e8

08000948 <__errno>:
 8000948:	4b01      	ldr	r3, [pc, #4]	@ (8000950 <__errno+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	2000003c 	.word	0x2000003c

08000954 <__libc_init_array>:
 8000954:	b570      	push	{r4, r5, r6, lr}
 8000956:	4d0d      	ldr	r5, [pc, #52]	@ (800098c <__libc_init_array+0x38>)
 8000958:	4c0d      	ldr	r4, [pc, #52]	@ (8000990 <__libc_init_array+0x3c>)
 800095a:	1b64      	subs	r4, r4, r5
 800095c:	10a4      	asrs	r4, r4, #2
 800095e:	2600      	movs	r6, #0
 8000960:	42a6      	cmp	r6, r4
 8000962:	d109      	bne.n	8000978 <__libc_init_array+0x24>
 8000964:	4d0b      	ldr	r5, [pc, #44]	@ (8000994 <__libc_init_array+0x40>)
 8000966:	4c0c      	ldr	r4, [pc, #48]	@ (8000998 <__libc_init_array+0x44>)
 8000968:	f000 fdb6 	bl	80014d8 <_init>
 800096c:	1b64      	subs	r4, r4, r5
 800096e:	10a4      	asrs	r4, r4, #2
 8000970:	2600      	movs	r6, #0
 8000972:	42a6      	cmp	r6, r4
 8000974:	d105      	bne.n	8000982 <__libc_init_array+0x2e>
 8000976:	bd70      	pop	{r4, r5, r6, pc}
 8000978:	f855 3b04 	ldr.w	r3, [r5], #4
 800097c:	4798      	blx	r3
 800097e:	3601      	adds	r6, #1
 8000980:	e7ee      	b.n	8000960 <__libc_init_array+0xc>
 8000982:	f855 3b04 	ldr.w	r3, [r5], #4
 8000986:	4798      	blx	r3
 8000988:	3601      	adds	r6, #1
 800098a:	e7f2      	b.n	8000972 <__libc_init_array+0x1e>
 800098c:	08001530 	.word	0x08001530
 8000990:	08001530 	.word	0x08001530
 8000994:	08001530 	.word	0x08001530
 8000998:	08001534 	.word	0x08001534

0800099c <__retarget_lock_init_recursive>:
 800099c:	4770      	bx	lr

0800099e <__retarget_lock_acquire_recursive>:
 800099e:	4770      	bx	lr

080009a0 <__retarget_lock_release_recursive>:
 80009a0:	4770      	bx	lr
	...

080009a4 <_free_r>:
 80009a4:	b538      	push	{r3, r4, r5, lr}
 80009a6:	4605      	mov	r5, r0
 80009a8:	2900      	cmp	r1, #0
 80009aa:	d041      	beq.n	8000a30 <_free_r+0x8c>
 80009ac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009b0:	1f0c      	subs	r4, r1, #4
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	bfb8      	it	lt
 80009b6:	18e4      	addlt	r4, r4, r3
 80009b8:	f000 f8e0 	bl	8000b7c <__malloc_lock>
 80009bc:	4a1d      	ldr	r2, [pc, #116]	@ (8000a34 <_free_r+0x90>)
 80009be:	6813      	ldr	r3, [r2, #0]
 80009c0:	b933      	cbnz	r3, 80009d0 <_free_r+0x2c>
 80009c2:	6063      	str	r3, [r4, #4]
 80009c4:	6014      	str	r4, [r2, #0]
 80009c6:	4628      	mov	r0, r5
 80009c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009cc:	f000 b8dc 	b.w	8000b88 <__malloc_unlock>
 80009d0:	42a3      	cmp	r3, r4
 80009d2:	d908      	bls.n	80009e6 <_free_r+0x42>
 80009d4:	6820      	ldr	r0, [r4, #0]
 80009d6:	1821      	adds	r1, r4, r0
 80009d8:	428b      	cmp	r3, r1
 80009da:	bf01      	itttt	eq
 80009dc:	6819      	ldreq	r1, [r3, #0]
 80009de:	685b      	ldreq	r3, [r3, #4]
 80009e0:	1809      	addeq	r1, r1, r0
 80009e2:	6021      	streq	r1, [r4, #0]
 80009e4:	e7ed      	b.n	80009c2 <_free_r+0x1e>
 80009e6:	461a      	mov	r2, r3
 80009e8:	685b      	ldr	r3, [r3, #4]
 80009ea:	b10b      	cbz	r3, 80009f0 <_free_r+0x4c>
 80009ec:	42a3      	cmp	r3, r4
 80009ee:	d9fa      	bls.n	80009e6 <_free_r+0x42>
 80009f0:	6811      	ldr	r1, [r2, #0]
 80009f2:	1850      	adds	r0, r2, r1
 80009f4:	42a0      	cmp	r0, r4
 80009f6:	d10b      	bne.n	8000a10 <_free_r+0x6c>
 80009f8:	6820      	ldr	r0, [r4, #0]
 80009fa:	4401      	add	r1, r0
 80009fc:	1850      	adds	r0, r2, r1
 80009fe:	4283      	cmp	r3, r0
 8000a00:	6011      	str	r1, [r2, #0]
 8000a02:	d1e0      	bne.n	80009c6 <_free_r+0x22>
 8000a04:	6818      	ldr	r0, [r3, #0]
 8000a06:	685b      	ldr	r3, [r3, #4]
 8000a08:	6053      	str	r3, [r2, #4]
 8000a0a:	4408      	add	r0, r1
 8000a0c:	6010      	str	r0, [r2, #0]
 8000a0e:	e7da      	b.n	80009c6 <_free_r+0x22>
 8000a10:	d902      	bls.n	8000a18 <_free_r+0x74>
 8000a12:	230c      	movs	r3, #12
 8000a14:	602b      	str	r3, [r5, #0]
 8000a16:	e7d6      	b.n	80009c6 <_free_r+0x22>
 8000a18:	6820      	ldr	r0, [r4, #0]
 8000a1a:	1821      	adds	r1, r4, r0
 8000a1c:	428b      	cmp	r3, r1
 8000a1e:	bf04      	itt	eq
 8000a20:	6819      	ldreq	r1, [r3, #0]
 8000a22:	685b      	ldreq	r3, [r3, #4]
 8000a24:	6063      	str	r3, [r4, #4]
 8000a26:	bf04      	itt	eq
 8000a28:	1809      	addeq	r1, r1, r0
 8000a2a:	6021      	streq	r1, [r4, #0]
 8000a2c:	6054      	str	r4, [r2, #4]
 8000a2e:	e7ca      	b.n	80009c6 <_free_r+0x22>
 8000a30:	bd38      	pop	{r3, r4, r5, pc}
 8000a32:	bf00      	nop
 8000a34:	200001f4 	.word	0x200001f4

08000a38 <sbrk_aligned>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	4e0f      	ldr	r6, [pc, #60]	@ (8000a78 <sbrk_aligned+0x40>)
 8000a3c:	460c      	mov	r4, r1
 8000a3e:	6831      	ldr	r1, [r6, #0]
 8000a40:	4605      	mov	r5, r0
 8000a42:	b911      	cbnz	r1, 8000a4a <sbrk_aligned+0x12>
 8000a44:	f000 fcb4 	bl	80013b0 <_sbrk_r>
 8000a48:	6030      	str	r0, [r6, #0]
 8000a4a:	4621      	mov	r1, r4
 8000a4c:	4628      	mov	r0, r5
 8000a4e:	f000 fcaf 	bl	80013b0 <_sbrk_r>
 8000a52:	1c43      	adds	r3, r0, #1
 8000a54:	d103      	bne.n	8000a5e <sbrk_aligned+0x26>
 8000a56:	f04f 34ff 	mov.w	r4, #4294967295
 8000a5a:	4620      	mov	r0, r4
 8000a5c:	bd70      	pop	{r4, r5, r6, pc}
 8000a5e:	1cc4      	adds	r4, r0, #3
 8000a60:	f024 0403 	bic.w	r4, r4, #3
 8000a64:	42a0      	cmp	r0, r4
 8000a66:	d0f8      	beq.n	8000a5a <sbrk_aligned+0x22>
 8000a68:	1a21      	subs	r1, r4, r0
 8000a6a:	4628      	mov	r0, r5
 8000a6c:	f000 fca0 	bl	80013b0 <_sbrk_r>
 8000a70:	3001      	adds	r0, #1
 8000a72:	d1f2      	bne.n	8000a5a <sbrk_aligned+0x22>
 8000a74:	e7ef      	b.n	8000a56 <sbrk_aligned+0x1e>
 8000a76:	bf00      	nop
 8000a78:	200001f0 	.word	0x200001f0

08000a7c <_malloc_r>:
 8000a7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a80:	1ccd      	adds	r5, r1, #3
 8000a82:	f025 0503 	bic.w	r5, r5, #3
 8000a86:	3508      	adds	r5, #8
 8000a88:	2d0c      	cmp	r5, #12
 8000a8a:	bf38      	it	cc
 8000a8c:	250c      	movcc	r5, #12
 8000a8e:	2d00      	cmp	r5, #0
 8000a90:	4606      	mov	r6, r0
 8000a92:	db01      	blt.n	8000a98 <_malloc_r+0x1c>
 8000a94:	42a9      	cmp	r1, r5
 8000a96:	d904      	bls.n	8000aa2 <_malloc_r+0x26>
 8000a98:	230c      	movs	r3, #12
 8000a9a:	6033      	str	r3, [r6, #0]
 8000a9c:	2000      	movs	r0, #0
 8000a9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b78 <_malloc_r+0xfc>
 8000aa6:	f000 f869 	bl	8000b7c <__malloc_lock>
 8000aaa:	f8d8 3000 	ldr.w	r3, [r8]
 8000aae:	461c      	mov	r4, r3
 8000ab0:	bb44      	cbnz	r4, 8000b04 <_malloc_r+0x88>
 8000ab2:	4629      	mov	r1, r5
 8000ab4:	4630      	mov	r0, r6
 8000ab6:	f7ff ffbf 	bl	8000a38 <sbrk_aligned>
 8000aba:	1c43      	adds	r3, r0, #1
 8000abc:	4604      	mov	r4, r0
 8000abe:	d158      	bne.n	8000b72 <_malloc_r+0xf6>
 8000ac0:	f8d8 4000 	ldr.w	r4, [r8]
 8000ac4:	4627      	mov	r7, r4
 8000ac6:	2f00      	cmp	r7, #0
 8000ac8:	d143      	bne.n	8000b52 <_malloc_r+0xd6>
 8000aca:	2c00      	cmp	r4, #0
 8000acc:	d04b      	beq.n	8000b66 <_malloc_r+0xea>
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	4639      	mov	r1, r7
 8000ad2:	4630      	mov	r0, r6
 8000ad4:	eb04 0903 	add.w	r9, r4, r3
 8000ad8:	f000 fc6a 	bl	80013b0 <_sbrk_r>
 8000adc:	4581      	cmp	r9, r0
 8000ade:	d142      	bne.n	8000b66 <_malloc_r+0xea>
 8000ae0:	6821      	ldr	r1, [r4, #0]
 8000ae2:	1a6d      	subs	r5, r5, r1
 8000ae4:	4629      	mov	r1, r5
 8000ae6:	4630      	mov	r0, r6
 8000ae8:	f7ff ffa6 	bl	8000a38 <sbrk_aligned>
 8000aec:	3001      	adds	r0, #1
 8000aee:	d03a      	beq.n	8000b66 <_malloc_r+0xea>
 8000af0:	6823      	ldr	r3, [r4, #0]
 8000af2:	442b      	add	r3, r5
 8000af4:	6023      	str	r3, [r4, #0]
 8000af6:	f8d8 3000 	ldr.w	r3, [r8]
 8000afa:	685a      	ldr	r2, [r3, #4]
 8000afc:	bb62      	cbnz	r2, 8000b58 <_malloc_r+0xdc>
 8000afe:	f8c8 7000 	str.w	r7, [r8]
 8000b02:	e00f      	b.n	8000b24 <_malloc_r+0xa8>
 8000b04:	6822      	ldr	r2, [r4, #0]
 8000b06:	1b52      	subs	r2, r2, r5
 8000b08:	d420      	bmi.n	8000b4c <_malloc_r+0xd0>
 8000b0a:	2a0b      	cmp	r2, #11
 8000b0c:	d917      	bls.n	8000b3e <_malloc_r+0xc2>
 8000b0e:	1961      	adds	r1, r4, r5
 8000b10:	42a3      	cmp	r3, r4
 8000b12:	6025      	str	r5, [r4, #0]
 8000b14:	bf18      	it	ne
 8000b16:	6059      	strne	r1, [r3, #4]
 8000b18:	6863      	ldr	r3, [r4, #4]
 8000b1a:	bf08      	it	eq
 8000b1c:	f8c8 1000 	streq.w	r1, [r8]
 8000b20:	5162      	str	r2, [r4, r5]
 8000b22:	604b      	str	r3, [r1, #4]
 8000b24:	4630      	mov	r0, r6
 8000b26:	f000 f82f 	bl	8000b88 <__malloc_unlock>
 8000b2a:	f104 000b 	add.w	r0, r4, #11
 8000b2e:	1d23      	adds	r3, r4, #4
 8000b30:	f020 0007 	bic.w	r0, r0, #7
 8000b34:	1ac2      	subs	r2, r0, r3
 8000b36:	bf1c      	itt	ne
 8000b38:	1a1b      	subne	r3, r3, r0
 8000b3a:	50a3      	strne	r3, [r4, r2]
 8000b3c:	e7af      	b.n	8000a9e <_malloc_r+0x22>
 8000b3e:	6862      	ldr	r2, [r4, #4]
 8000b40:	42a3      	cmp	r3, r4
 8000b42:	bf0c      	ite	eq
 8000b44:	f8c8 2000 	streq.w	r2, [r8]
 8000b48:	605a      	strne	r2, [r3, #4]
 8000b4a:	e7eb      	b.n	8000b24 <_malloc_r+0xa8>
 8000b4c:	4623      	mov	r3, r4
 8000b4e:	6864      	ldr	r4, [r4, #4]
 8000b50:	e7ae      	b.n	8000ab0 <_malloc_r+0x34>
 8000b52:	463c      	mov	r4, r7
 8000b54:	687f      	ldr	r7, [r7, #4]
 8000b56:	e7b6      	b.n	8000ac6 <_malloc_r+0x4a>
 8000b58:	461a      	mov	r2, r3
 8000b5a:	685b      	ldr	r3, [r3, #4]
 8000b5c:	42a3      	cmp	r3, r4
 8000b5e:	d1fb      	bne.n	8000b58 <_malloc_r+0xdc>
 8000b60:	2300      	movs	r3, #0
 8000b62:	6053      	str	r3, [r2, #4]
 8000b64:	e7de      	b.n	8000b24 <_malloc_r+0xa8>
 8000b66:	230c      	movs	r3, #12
 8000b68:	6033      	str	r3, [r6, #0]
 8000b6a:	4630      	mov	r0, r6
 8000b6c:	f000 f80c 	bl	8000b88 <__malloc_unlock>
 8000b70:	e794      	b.n	8000a9c <_malloc_r+0x20>
 8000b72:	6005      	str	r5, [r0, #0]
 8000b74:	e7d6      	b.n	8000b24 <_malloc_r+0xa8>
 8000b76:	bf00      	nop
 8000b78:	200001f4 	.word	0x200001f4

08000b7c <__malloc_lock>:
 8000b7c:	4801      	ldr	r0, [pc, #4]	@ (8000b84 <__malloc_lock+0x8>)
 8000b7e:	f7ff bf0e 	b.w	800099e <__retarget_lock_acquire_recursive>
 8000b82:	bf00      	nop
 8000b84:	200001ec 	.word	0x200001ec

08000b88 <__malloc_unlock>:
 8000b88:	4801      	ldr	r0, [pc, #4]	@ (8000b90 <__malloc_unlock+0x8>)
 8000b8a:	f7ff bf09 	b.w	80009a0 <__retarget_lock_release_recursive>
 8000b8e:	bf00      	nop
 8000b90:	200001ec 	.word	0x200001ec

08000b94 <__sfputc_r>:
 8000b94:	6893      	ldr	r3, [r2, #8]
 8000b96:	3b01      	subs	r3, #1
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	b410      	push	{r4}
 8000b9c:	6093      	str	r3, [r2, #8]
 8000b9e:	da08      	bge.n	8000bb2 <__sfputc_r+0x1e>
 8000ba0:	6994      	ldr	r4, [r2, #24]
 8000ba2:	42a3      	cmp	r3, r4
 8000ba4:	db01      	blt.n	8000baa <__sfputc_r+0x16>
 8000ba6:	290a      	cmp	r1, #10
 8000ba8:	d103      	bne.n	8000bb2 <__sfputc_r+0x1e>
 8000baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bae:	f000 bb6b 	b.w	8001288 <__swbuf_r>
 8000bb2:	6813      	ldr	r3, [r2, #0]
 8000bb4:	1c58      	adds	r0, r3, #1
 8000bb6:	6010      	str	r0, [r2, #0]
 8000bb8:	7019      	strb	r1, [r3, #0]
 8000bba:	4608      	mov	r0, r1
 8000bbc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bc0:	4770      	bx	lr

08000bc2 <__sfputs_r>:
 8000bc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bc4:	4606      	mov	r6, r0
 8000bc6:	460f      	mov	r7, r1
 8000bc8:	4614      	mov	r4, r2
 8000bca:	18d5      	adds	r5, r2, r3
 8000bcc:	42ac      	cmp	r4, r5
 8000bce:	d101      	bne.n	8000bd4 <__sfputs_r+0x12>
 8000bd0:	2000      	movs	r0, #0
 8000bd2:	e007      	b.n	8000be4 <__sfputs_r+0x22>
 8000bd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bd8:	463a      	mov	r2, r7
 8000bda:	4630      	mov	r0, r6
 8000bdc:	f7ff ffda 	bl	8000b94 <__sfputc_r>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d1f3      	bne.n	8000bcc <__sfputs_r+0xa>
 8000be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000be8 <_vfiprintf_r>:
 8000be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bec:	460d      	mov	r5, r1
 8000bee:	b09d      	sub	sp, #116	@ 0x74
 8000bf0:	4614      	mov	r4, r2
 8000bf2:	4698      	mov	r8, r3
 8000bf4:	4606      	mov	r6, r0
 8000bf6:	b118      	cbz	r0, 8000c00 <_vfiprintf_r+0x18>
 8000bf8:	6a03      	ldr	r3, [r0, #32]
 8000bfa:	b90b      	cbnz	r3, 8000c00 <_vfiprintf_r+0x18>
 8000bfc:	f7ff fdca 	bl	8000794 <__sinit>
 8000c00:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c02:	07d9      	lsls	r1, r3, #31
 8000c04:	d405      	bmi.n	8000c12 <_vfiprintf_r+0x2a>
 8000c06:	89ab      	ldrh	r3, [r5, #12]
 8000c08:	059a      	lsls	r2, r3, #22
 8000c0a:	d402      	bmi.n	8000c12 <_vfiprintf_r+0x2a>
 8000c0c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c0e:	f7ff fec6 	bl	800099e <__retarget_lock_acquire_recursive>
 8000c12:	89ab      	ldrh	r3, [r5, #12]
 8000c14:	071b      	lsls	r3, r3, #28
 8000c16:	d501      	bpl.n	8000c1c <_vfiprintf_r+0x34>
 8000c18:	692b      	ldr	r3, [r5, #16]
 8000c1a:	b99b      	cbnz	r3, 8000c44 <_vfiprintf_r+0x5c>
 8000c1c:	4629      	mov	r1, r5
 8000c1e:	4630      	mov	r0, r6
 8000c20:	f000 fb70 	bl	8001304 <__swsetup_r>
 8000c24:	b170      	cbz	r0, 8000c44 <_vfiprintf_r+0x5c>
 8000c26:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c28:	07dc      	lsls	r4, r3, #31
 8000c2a:	d504      	bpl.n	8000c36 <_vfiprintf_r+0x4e>
 8000c2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c30:	b01d      	add	sp, #116	@ 0x74
 8000c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	0598      	lsls	r0, r3, #22
 8000c3a:	d4f7      	bmi.n	8000c2c <_vfiprintf_r+0x44>
 8000c3c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c3e:	f7ff feaf 	bl	80009a0 <__retarget_lock_release_recursive>
 8000c42:	e7f3      	b.n	8000c2c <_vfiprintf_r+0x44>
 8000c44:	2300      	movs	r3, #0
 8000c46:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c48:	2320      	movs	r3, #32
 8000c4a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c52:	2330      	movs	r3, #48	@ 0x30
 8000c54:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e04 <_vfiprintf_r+0x21c>
 8000c58:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c5c:	f04f 0901 	mov.w	r9, #1
 8000c60:	4623      	mov	r3, r4
 8000c62:	469a      	mov	sl, r3
 8000c64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c68:	b10a      	cbz	r2, 8000c6e <_vfiprintf_r+0x86>
 8000c6a:	2a25      	cmp	r2, #37	@ 0x25
 8000c6c:	d1f9      	bne.n	8000c62 <_vfiprintf_r+0x7a>
 8000c6e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c72:	d00b      	beq.n	8000c8c <_vfiprintf_r+0xa4>
 8000c74:	465b      	mov	r3, fp
 8000c76:	4622      	mov	r2, r4
 8000c78:	4629      	mov	r1, r5
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	f7ff ffa1 	bl	8000bc2 <__sfputs_r>
 8000c80:	3001      	adds	r0, #1
 8000c82:	f000 80a7 	beq.w	8000dd4 <_vfiprintf_r+0x1ec>
 8000c86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000c88:	445a      	add	r2, fp
 8000c8a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	f000 809f 	beq.w	8000dd4 <_vfiprintf_r+0x1ec>
 8000c96:	2300      	movs	r3, #0
 8000c98:	f04f 32ff 	mov.w	r2, #4294967295
 8000c9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ca0:	f10a 0a01 	add.w	sl, sl, #1
 8000ca4:	9304      	str	r3, [sp, #16]
 8000ca6:	9307      	str	r3, [sp, #28]
 8000ca8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000cac:	931a      	str	r3, [sp, #104]	@ 0x68
 8000cae:	4654      	mov	r4, sl
 8000cb0:	2205      	movs	r2, #5
 8000cb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cb6:	4853      	ldr	r0, [pc, #332]	@ (8000e04 <_vfiprintf_r+0x21c>)
 8000cb8:	f7ff fa8a 	bl	80001d0 <memchr>
 8000cbc:	9a04      	ldr	r2, [sp, #16]
 8000cbe:	b9d8      	cbnz	r0, 8000cf8 <_vfiprintf_r+0x110>
 8000cc0:	06d1      	lsls	r1, r2, #27
 8000cc2:	bf44      	itt	mi
 8000cc4:	2320      	movmi	r3, #32
 8000cc6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cca:	0713      	lsls	r3, r2, #28
 8000ccc:	bf44      	itt	mi
 8000cce:	232b      	movmi	r3, #43	@ 0x2b
 8000cd0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cd4:	f89a 3000 	ldrb.w	r3, [sl]
 8000cd8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cda:	d015      	beq.n	8000d08 <_vfiprintf_r+0x120>
 8000cdc:	9a07      	ldr	r2, [sp, #28]
 8000cde:	4654      	mov	r4, sl
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	f04f 0c0a 	mov.w	ip, #10
 8000ce6:	4621      	mov	r1, r4
 8000ce8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cec:	3b30      	subs	r3, #48	@ 0x30
 8000cee:	2b09      	cmp	r3, #9
 8000cf0:	d94b      	bls.n	8000d8a <_vfiprintf_r+0x1a2>
 8000cf2:	b1b0      	cbz	r0, 8000d22 <_vfiprintf_r+0x13a>
 8000cf4:	9207      	str	r2, [sp, #28]
 8000cf6:	e014      	b.n	8000d22 <_vfiprintf_r+0x13a>
 8000cf8:	eba0 0308 	sub.w	r3, r0, r8
 8000cfc:	fa09 f303 	lsl.w	r3, r9, r3
 8000d00:	4313      	orrs	r3, r2
 8000d02:	9304      	str	r3, [sp, #16]
 8000d04:	46a2      	mov	sl, r4
 8000d06:	e7d2      	b.n	8000cae <_vfiprintf_r+0xc6>
 8000d08:	9b03      	ldr	r3, [sp, #12]
 8000d0a:	1d19      	adds	r1, r3, #4
 8000d0c:	681b      	ldr	r3, [r3, #0]
 8000d0e:	9103      	str	r1, [sp, #12]
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	bfbb      	ittet	lt
 8000d14:	425b      	neglt	r3, r3
 8000d16:	f042 0202 	orrlt.w	r2, r2, #2
 8000d1a:	9307      	strge	r3, [sp, #28]
 8000d1c:	9307      	strlt	r3, [sp, #28]
 8000d1e:	bfb8      	it	lt
 8000d20:	9204      	strlt	r2, [sp, #16]
 8000d22:	7823      	ldrb	r3, [r4, #0]
 8000d24:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d26:	d10a      	bne.n	8000d3e <_vfiprintf_r+0x156>
 8000d28:	7863      	ldrb	r3, [r4, #1]
 8000d2a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d2c:	d132      	bne.n	8000d94 <_vfiprintf_r+0x1ac>
 8000d2e:	9b03      	ldr	r3, [sp, #12]
 8000d30:	1d1a      	adds	r2, r3, #4
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	9203      	str	r2, [sp, #12]
 8000d36:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d3a:	3402      	adds	r4, #2
 8000d3c:	9305      	str	r3, [sp, #20]
 8000d3e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000e14 <_vfiprintf_r+0x22c>
 8000d42:	7821      	ldrb	r1, [r4, #0]
 8000d44:	2203      	movs	r2, #3
 8000d46:	4650      	mov	r0, sl
 8000d48:	f7ff fa42 	bl	80001d0 <memchr>
 8000d4c:	b138      	cbz	r0, 8000d5e <_vfiprintf_r+0x176>
 8000d4e:	9b04      	ldr	r3, [sp, #16]
 8000d50:	eba0 000a 	sub.w	r0, r0, sl
 8000d54:	2240      	movs	r2, #64	@ 0x40
 8000d56:	4082      	lsls	r2, r0
 8000d58:	4313      	orrs	r3, r2
 8000d5a:	3401      	adds	r4, #1
 8000d5c:	9304      	str	r3, [sp, #16]
 8000d5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d62:	4829      	ldr	r0, [pc, #164]	@ (8000e08 <_vfiprintf_r+0x220>)
 8000d64:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d68:	2206      	movs	r2, #6
 8000d6a:	f7ff fa31 	bl	80001d0 <memchr>
 8000d6e:	2800      	cmp	r0, #0
 8000d70:	d03f      	beq.n	8000df2 <_vfiprintf_r+0x20a>
 8000d72:	4b26      	ldr	r3, [pc, #152]	@ (8000e0c <_vfiprintf_r+0x224>)
 8000d74:	bb1b      	cbnz	r3, 8000dbe <_vfiprintf_r+0x1d6>
 8000d76:	9b03      	ldr	r3, [sp, #12]
 8000d78:	3307      	adds	r3, #7
 8000d7a:	f023 0307 	bic.w	r3, r3, #7
 8000d7e:	3308      	adds	r3, #8
 8000d80:	9303      	str	r3, [sp, #12]
 8000d82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000d84:	443b      	add	r3, r7
 8000d86:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d88:	e76a      	b.n	8000c60 <_vfiprintf_r+0x78>
 8000d8a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d8e:	460c      	mov	r4, r1
 8000d90:	2001      	movs	r0, #1
 8000d92:	e7a8      	b.n	8000ce6 <_vfiprintf_r+0xfe>
 8000d94:	2300      	movs	r3, #0
 8000d96:	3401      	adds	r4, #1
 8000d98:	9305      	str	r3, [sp, #20]
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	f04f 0c0a 	mov.w	ip, #10
 8000da0:	4620      	mov	r0, r4
 8000da2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000da6:	3a30      	subs	r2, #48	@ 0x30
 8000da8:	2a09      	cmp	r2, #9
 8000daa:	d903      	bls.n	8000db4 <_vfiprintf_r+0x1cc>
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	d0c6      	beq.n	8000d3e <_vfiprintf_r+0x156>
 8000db0:	9105      	str	r1, [sp, #20]
 8000db2:	e7c4      	b.n	8000d3e <_vfiprintf_r+0x156>
 8000db4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000db8:	4604      	mov	r4, r0
 8000dba:	2301      	movs	r3, #1
 8000dbc:	e7f0      	b.n	8000da0 <_vfiprintf_r+0x1b8>
 8000dbe:	ab03      	add	r3, sp, #12
 8000dc0:	9300      	str	r3, [sp, #0]
 8000dc2:	462a      	mov	r2, r5
 8000dc4:	4b12      	ldr	r3, [pc, #72]	@ (8000e10 <_vfiprintf_r+0x228>)
 8000dc6:	a904      	add	r1, sp, #16
 8000dc8:	4630      	mov	r0, r6
 8000dca:	f3af 8000 	nop.w
 8000dce:	4607      	mov	r7, r0
 8000dd0:	1c78      	adds	r0, r7, #1
 8000dd2:	d1d6      	bne.n	8000d82 <_vfiprintf_r+0x19a>
 8000dd4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000dd6:	07d9      	lsls	r1, r3, #31
 8000dd8:	d405      	bmi.n	8000de6 <_vfiprintf_r+0x1fe>
 8000dda:	89ab      	ldrh	r3, [r5, #12]
 8000ddc:	059a      	lsls	r2, r3, #22
 8000dde:	d402      	bmi.n	8000de6 <_vfiprintf_r+0x1fe>
 8000de0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000de2:	f7ff fddd 	bl	80009a0 <__retarget_lock_release_recursive>
 8000de6:	89ab      	ldrh	r3, [r5, #12]
 8000de8:	065b      	lsls	r3, r3, #25
 8000dea:	f53f af1f 	bmi.w	8000c2c <_vfiprintf_r+0x44>
 8000dee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000df0:	e71e      	b.n	8000c30 <_vfiprintf_r+0x48>
 8000df2:	ab03      	add	r3, sp, #12
 8000df4:	9300      	str	r3, [sp, #0]
 8000df6:	462a      	mov	r2, r5
 8000df8:	4b05      	ldr	r3, [pc, #20]	@ (8000e10 <_vfiprintf_r+0x228>)
 8000dfa:	a904      	add	r1, sp, #16
 8000dfc:	4630      	mov	r0, r6
 8000dfe:	f000 f879 	bl	8000ef4 <_printf_i>
 8000e02:	e7e4      	b.n	8000dce <_vfiprintf_r+0x1e6>
 8000e04:	080014f4 	.word	0x080014f4
 8000e08:	080014fe 	.word	0x080014fe
 8000e0c:	00000000 	.word	0x00000000
 8000e10:	08000bc3 	.word	0x08000bc3
 8000e14:	080014fa 	.word	0x080014fa

08000e18 <_printf_common>:
 8000e18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e1c:	4616      	mov	r6, r2
 8000e1e:	4698      	mov	r8, r3
 8000e20:	688a      	ldr	r2, [r1, #8]
 8000e22:	690b      	ldr	r3, [r1, #16]
 8000e24:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000e28:	4293      	cmp	r3, r2
 8000e2a:	bfb8      	it	lt
 8000e2c:	4613      	movlt	r3, r2
 8000e2e:	6033      	str	r3, [r6, #0]
 8000e30:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e34:	4607      	mov	r7, r0
 8000e36:	460c      	mov	r4, r1
 8000e38:	b10a      	cbz	r2, 8000e3e <_printf_common+0x26>
 8000e3a:	3301      	adds	r3, #1
 8000e3c:	6033      	str	r3, [r6, #0]
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	0699      	lsls	r1, r3, #26
 8000e42:	bf42      	ittt	mi
 8000e44:	6833      	ldrmi	r3, [r6, #0]
 8000e46:	3302      	addmi	r3, #2
 8000e48:	6033      	strmi	r3, [r6, #0]
 8000e4a:	6825      	ldr	r5, [r4, #0]
 8000e4c:	f015 0506 	ands.w	r5, r5, #6
 8000e50:	d106      	bne.n	8000e60 <_printf_common+0x48>
 8000e52:	f104 0a19 	add.w	sl, r4, #25
 8000e56:	68e3      	ldr	r3, [r4, #12]
 8000e58:	6832      	ldr	r2, [r6, #0]
 8000e5a:	1a9b      	subs	r3, r3, r2
 8000e5c:	42ab      	cmp	r3, r5
 8000e5e:	dc26      	bgt.n	8000eae <_printf_common+0x96>
 8000e60:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e64:	6822      	ldr	r2, [r4, #0]
 8000e66:	3b00      	subs	r3, #0
 8000e68:	bf18      	it	ne
 8000e6a:	2301      	movne	r3, #1
 8000e6c:	0692      	lsls	r2, r2, #26
 8000e6e:	d42b      	bmi.n	8000ec8 <_printf_common+0xb0>
 8000e70:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e74:	4641      	mov	r1, r8
 8000e76:	4638      	mov	r0, r7
 8000e78:	47c8      	blx	r9
 8000e7a:	3001      	adds	r0, #1
 8000e7c:	d01e      	beq.n	8000ebc <_printf_common+0xa4>
 8000e7e:	6823      	ldr	r3, [r4, #0]
 8000e80:	6922      	ldr	r2, [r4, #16]
 8000e82:	f003 0306 	and.w	r3, r3, #6
 8000e86:	2b04      	cmp	r3, #4
 8000e88:	bf02      	ittt	eq
 8000e8a:	68e5      	ldreq	r5, [r4, #12]
 8000e8c:	6833      	ldreq	r3, [r6, #0]
 8000e8e:	1aed      	subeq	r5, r5, r3
 8000e90:	68a3      	ldr	r3, [r4, #8]
 8000e92:	bf0c      	ite	eq
 8000e94:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e98:	2500      	movne	r5, #0
 8000e9a:	4293      	cmp	r3, r2
 8000e9c:	bfc4      	itt	gt
 8000e9e:	1a9b      	subgt	r3, r3, r2
 8000ea0:	18ed      	addgt	r5, r5, r3
 8000ea2:	2600      	movs	r6, #0
 8000ea4:	341a      	adds	r4, #26
 8000ea6:	42b5      	cmp	r5, r6
 8000ea8:	d11a      	bne.n	8000ee0 <_printf_common+0xc8>
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e008      	b.n	8000ec0 <_printf_common+0xa8>
 8000eae:	2301      	movs	r3, #1
 8000eb0:	4652      	mov	r2, sl
 8000eb2:	4641      	mov	r1, r8
 8000eb4:	4638      	mov	r0, r7
 8000eb6:	47c8      	blx	r9
 8000eb8:	3001      	adds	r0, #1
 8000eba:	d103      	bne.n	8000ec4 <_printf_common+0xac>
 8000ebc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ec0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ec4:	3501      	adds	r5, #1
 8000ec6:	e7c6      	b.n	8000e56 <_printf_common+0x3e>
 8000ec8:	18e1      	adds	r1, r4, r3
 8000eca:	1c5a      	adds	r2, r3, #1
 8000ecc:	2030      	movs	r0, #48	@ 0x30
 8000ece:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000ed2:	4422      	add	r2, r4
 8000ed4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000ed8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000edc:	3302      	adds	r3, #2
 8000ede:	e7c7      	b.n	8000e70 <_printf_common+0x58>
 8000ee0:	2301      	movs	r3, #1
 8000ee2:	4622      	mov	r2, r4
 8000ee4:	4641      	mov	r1, r8
 8000ee6:	4638      	mov	r0, r7
 8000ee8:	47c8      	blx	r9
 8000eea:	3001      	adds	r0, #1
 8000eec:	d0e6      	beq.n	8000ebc <_printf_common+0xa4>
 8000eee:	3601      	adds	r6, #1
 8000ef0:	e7d9      	b.n	8000ea6 <_printf_common+0x8e>
	...

08000ef4 <_printf_i>:
 8000ef4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ef8:	7e0f      	ldrb	r7, [r1, #24]
 8000efa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000efc:	2f78      	cmp	r7, #120	@ 0x78
 8000efe:	4691      	mov	r9, r2
 8000f00:	4680      	mov	r8, r0
 8000f02:	460c      	mov	r4, r1
 8000f04:	469a      	mov	sl, r3
 8000f06:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f0a:	d807      	bhi.n	8000f1c <_printf_i+0x28>
 8000f0c:	2f62      	cmp	r7, #98	@ 0x62
 8000f0e:	d80a      	bhi.n	8000f26 <_printf_i+0x32>
 8000f10:	2f00      	cmp	r7, #0
 8000f12:	f000 80d1 	beq.w	80010b8 <_printf_i+0x1c4>
 8000f16:	2f58      	cmp	r7, #88	@ 0x58
 8000f18:	f000 80b8 	beq.w	800108c <_printf_i+0x198>
 8000f1c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f20:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f24:	e03a      	b.n	8000f9c <_printf_i+0xa8>
 8000f26:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f2a:	2b15      	cmp	r3, #21
 8000f2c:	d8f6      	bhi.n	8000f1c <_printf_i+0x28>
 8000f2e:	a101      	add	r1, pc, #4	@ (adr r1, 8000f34 <_printf_i+0x40>)
 8000f30:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f34:	08000f8d 	.word	0x08000f8d
 8000f38:	08000fa1 	.word	0x08000fa1
 8000f3c:	08000f1d 	.word	0x08000f1d
 8000f40:	08000f1d 	.word	0x08000f1d
 8000f44:	08000f1d 	.word	0x08000f1d
 8000f48:	08000f1d 	.word	0x08000f1d
 8000f4c:	08000fa1 	.word	0x08000fa1
 8000f50:	08000f1d 	.word	0x08000f1d
 8000f54:	08000f1d 	.word	0x08000f1d
 8000f58:	08000f1d 	.word	0x08000f1d
 8000f5c:	08000f1d 	.word	0x08000f1d
 8000f60:	0800109f 	.word	0x0800109f
 8000f64:	08000fcb 	.word	0x08000fcb
 8000f68:	08001059 	.word	0x08001059
 8000f6c:	08000f1d 	.word	0x08000f1d
 8000f70:	08000f1d 	.word	0x08000f1d
 8000f74:	080010c1 	.word	0x080010c1
 8000f78:	08000f1d 	.word	0x08000f1d
 8000f7c:	08000fcb 	.word	0x08000fcb
 8000f80:	08000f1d 	.word	0x08000f1d
 8000f84:	08000f1d 	.word	0x08000f1d
 8000f88:	08001061 	.word	0x08001061
 8000f8c:	6833      	ldr	r3, [r6, #0]
 8000f8e:	1d1a      	adds	r2, r3, #4
 8000f90:	681b      	ldr	r3, [r3, #0]
 8000f92:	6032      	str	r2, [r6, #0]
 8000f94:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f98:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e09c      	b.n	80010da <_printf_i+0x1e6>
 8000fa0:	6833      	ldr	r3, [r6, #0]
 8000fa2:	6820      	ldr	r0, [r4, #0]
 8000fa4:	1d19      	adds	r1, r3, #4
 8000fa6:	6031      	str	r1, [r6, #0]
 8000fa8:	0606      	lsls	r6, r0, #24
 8000faa:	d501      	bpl.n	8000fb0 <_printf_i+0xbc>
 8000fac:	681d      	ldr	r5, [r3, #0]
 8000fae:	e003      	b.n	8000fb8 <_printf_i+0xc4>
 8000fb0:	0645      	lsls	r5, r0, #25
 8000fb2:	d5fb      	bpl.n	8000fac <_printf_i+0xb8>
 8000fb4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000fb8:	2d00      	cmp	r5, #0
 8000fba:	da03      	bge.n	8000fc4 <_printf_i+0xd0>
 8000fbc:	232d      	movs	r3, #45	@ 0x2d
 8000fbe:	426d      	negs	r5, r5
 8000fc0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fc4:	4858      	ldr	r0, [pc, #352]	@ (8001128 <_printf_i+0x234>)
 8000fc6:	230a      	movs	r3, #10
 8000fc8:	e011      	b.n	8000fee <_printf_i+0xfa>
 8000fca:	6821      	ldr	r1, [r4, #0]
 8000fcc:	6833      	ldr	r3, [r6, #0]
 8000fce:	0608      	lsls	r0, r1, #24
 8000fd0:	f853 5b04 	ldr.w	r5, [r3], #4
 8000fd4:	d402      	bmi.n	8000fdc <_printf_i+0xe8>
 8000fd6:	0649      	lsls	r1, r1, #25
 8000fd8:	bf48      	it	mi
 8000fda:	b2ad      	uxthmi	r5, r5
 8000fdc:	2f6f      	cmp	r7, #111	@ 0x6f
 8000fde:	4852      	ldr	r0, [pc, #328]	@ (8001128 <_printf_i+0x234>)
 8000fe0:	6033      	str	r3, [r6, #0]
 8000fe2:	bf14      	ite	ne
 8000fe4:	230a      	movne	r3, #10
 8000fe6:	2308      	moveq	r3, #8
 8000fe8:	2100      	movs	r1, #0
 8000fea:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000fee:	6866      	ldr	r6, [r4, #4]
 8000ff0:	60a6      	str	r6, [r4, #8]
 8000ff2:	2e00      	cmp	r6, #0
 8000ff4:	db05      	blt.n	8001002 <_printf_i+0x10e>
 8000ff6:	6821      	ldr	r1, [r4, #0]
 8000ff8:	432e      	orrs	r6, r5
 8000ffa:	f021 0104 	bic.w	r1, r1, #4
 8000ffe:	6021      	str	r1, [r4, #0]
 8001000:	d04b      	beq.n	800109a <_printf_i+0x1a6>
 8001002:	4616      	mov	r6, r2
 8001004:	fbb5 f1f3 	udiv	r1, r5, r3
 8001008:	fb03 5711 	mls	r7, r3, r1, r5
 800100c:	5dc7      	ldrb	r7, [r0, r7]
 800100e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001012:	462f      	mov	r7, r5
 8001014:	42bb      	cmp	r3, r7
 8001016:	460d      	mov	r5, r1
 8001018:	d9f4      	bls.n	8001004 <_printf_i+0x110>
 800101a:	2b08      	cmp	r3, #8
 800101c:	d10b      	bne.n	8001036 <_printf_i+0x142>
 800101e:	6823      	ldr	r3, [r4, #0]
 8001020:	07df      	lsls	r7, r3, #31
 8001022:	d508      	bpl.n	8001036 <_printf_i+0x142>
 8001024:	6923      	ldr	r3, [r4, #16]
 8001026:	6861      	ldr	r1, [r4, #4]
 8001028:	4299      	cmp	r1, r3
 800102a:	bfde      	ittt	le
 800102c:	2330      	movle	r3, #48	@ 0x30
 800102e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001032:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001036:	1b92      	subs	r2, r2, r6
 8001038:	6122      	str	r2, [r4, #16]
 800103a:	f8cd a000 	str.w	sl, [sp]
 800103e:	464b      	mov	r3, r9
 8001040:	aa03      	add	r2, sp, #12
 8001042:	4621      	mov	r1, r4
 8001044:	4640      	mov	r0, r8
 8001046:	f7ff fee7 	bl	8000e18 <_printf_common>
 800104a:	3001      	adds	r0, #1
 800104c:	d14a      	bne.n	80010e4 <_printf_i+0x1f0>
 800104e:	f04f 30ff 	mov.w	r0, #4294967295
 8001052:	b004      	add	sp, #16
 8001054:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001058:	6823      	ldr	r3, [r4, #0]
 800105a:	f043 0320 	orr.w	r3, r3, #32
 800105e:	6023      	str	r3, [r4, #0]
 8001060:	4832      	ldr	r0, [pc, #200]	@ (800112c <_printf_i+0x238>)
 8001062:	2778      	movs	r7, #120	@ 0x78
 8001064:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001068:	6823      	ldr	r3, [r4, #0]
 800106a:	6831      	ldr	r1, [r6, #0]
 800106c:	061f      	lsls	r7, r3, #24
 800106e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001072:	d402      	bmi.n	800107a <_printf_i+0x186>
 8001074:	065f      	lsls	r7, r3, #25
 8001076:	bf48      	it	mi
 8001078:	b2ad      	uxthmi	r5, r5
 800107a:	6031      	str	r1, [r6, #0]
 800107c:	07d9      	lsls	r1, r3, #31
 800107e:	bf44      	itt	mi
 8001080:	f043 0320 	orrmi.w	r3, r3, #32
 8001084:	6023      	strmi	r3, [r4, #0]
 8001086:	b11d      	cbz	r5, 8001090 <_printf_i+0x19c>
 8001088:	2310      	movs	r3, #16
 800108a:	e7ad      	b.n	8000fe8 <_printf_i+0xf4>
 800108c:	4826      	ldr	r0, [pc, #152]	@ (8001128 <_printf_i+0x234>)
 800108e:	e7e9      	b.n	8001064 <_printf_i+0x170>
 8001090:	6823      	ldr	r3, [r4, #0]
 8001092:	f023 0320 	bic.w	r3, r3, #32
 8001096:	6023      	str	r3, [r4, #0]
 8001098:	e7f6      	b.n	8001088 <_printf_i+0x194>
 800109a:	4616      	mov	r6, r2
 800109c:	e7bd      	b.n	800101a <_printf_i+0x126>
 800109e:	6833      	ldr	r3, [r6, #0]
 80010a0:	6825      	ldr	r5, [r4, #0]
 80010a2:	6961      	ldr	r1, [r4, #20]
 80010a4:	1d18      	adds	r0, r3, #4
 80010a6:	6030      	str	r0, [r6, #0]
 80010a8:	062e      	lsls	r6, r5, #24
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	d501      	bpl.n	80010b2 <_printf_i+0x1be>
 80010ae:	6019      	str	r1, [r3, #0]
 80010b0:	e002      	b.n	80010b8 <_printf_i+0x1c4>
 80010b2:	0668      	lsls	r0, r5, #25
 80010b4:	d5fb      	bpl.n	80010ae <_printf_i+0x1ba>
 80010b6:	8019      	strh	r1, [r3, #0]
 80010b8:	2300      	movs	r3, #0
 80010ba:	6123      	str	r3, [r4, #16]
 80010bc:	4616      	mov	r6, r2
 80010be:	e7bc      	b.n	800103a <_printf_i+0x146>
 80010c0:	6833      	ldr	r3, [r6, #0]
 80010c2:	1d1a      	adds	r2, r3, #4
 80010c4:	6032      	str	r2, [r6, #0]
 80010c6:	681e      	ldr	r6, [r3, #0]
 80010c8:	6862      	ldr	r2, [r4, #4]
 80010ca:	2100      	movs	r1, #0
 80010cc:	4630      	mov	r0, r6
 80010ce:	f7ff f87f 	bl	80001d0 <memchr>
 80010d2:	b108      	cbz	r0, 80010d8 <_printf_i+0x1e4>
 80010d4:	1b80      	subs	r0, r0, r6
 80010d6:	6060      	str	r0, [r4, #4]
 80010d8:	6863      	ldr	r3, [r4, #4]
 80010da:	6123      	str	r3, [r4, #16]
 80010dc:	2300      	movs	r3, #0
 80010de:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010e2:	e7aa      	b.n	800103a <_printf_i+0x146>
 80010e4:	6923      	ldr	r3, [r4, #16]
 80010e6:	4632      	mov	r2, r6
 80010e8:	4649      	mov	r1, r9
 80010ea:	4640      	mov	r0, r8
 80010ec:	47d0      	blx	sl
 80010ee:	3001      	adds	r0, #1
 80010f0:	d0ad      	beq.n	800104e <_printf_i+0x15a>
 80010f2:	6823      	ldr	r3, [r4, #0]
 80010f4:	079b      	lsls	r3, r3, #30
 80010f6:	d413      	bmi.n	8001120 <_printf_i+0x22c>
 80010f8:	68e0      	ldr	r0, [r4, #12]
 80010fa:	9b03      	ldr	r3, [sp, #12]
 80010fc:	4298      	cmp	r0, r3
 80010fe:	bfb8      	it	lt
 8001100:	4618      	movlt	r0, r3
 8001102:	e7a6      	b.n	8001052 <_printf_i+0x15e>
 8001104:	2301      	movs	r3, #1
 8001106:	4632      	mov	r2, r6
 8001108:	4649      	mov	r1, r9
 800110a:	4640      	mov	r0, r8
 800110c:	47d0      	blx	sl
 800110e:	3001      	adds	r0, #1
 8001110:	d09d      	beq.n	800104e <_printf_i+0x15a>
 8001112:	3501      	adds	r5, #1
 8001114:	68e3      	ldr	r3, [r4, #12]
 8001116:	9903      	ldr	r1, [sp, #12]
 8001118:	1a5b      	subs	r3, r3, r1
 800111a:	42ab      	cmp	r3, r5
 800111c:	dcf2      	bgt.n	8001104 <_printf_i+0x210>
 800111e:	e7eb      	b.n	80010f8 <_printf_i+0x204>
 8001120:	2500      	movs	r5, #0
 8001122:	f104 0619 	add.w	r6, r4, #25
 8001126:	e7f5      	b.n	8001114 <_printf_i+0x220>
 8001128:	08001505 	.word	0x08001505
 800112c:	08001516 	.word	0x08001516

08001130 <__sflush_r>:
 8001130:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001138:	0716      	lsls	r6, r2, #28
 800113a:	4605      	mov	r5, r0
 800113c:	460c      	mov	r4, r1
 800113e:	d454      	bmi.n	80011ea <__sflush_r+0xba>
 8001140:	684b      	ldr	r3, [r1, #4]
 8001142:	2b00      	cmp	r3, #0
 8001144:	dc02      	bgt.n	800114c <__sflush_r+0x1c>
 8001146:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001148:	2b00      	cmp	r3, #0
 800114a:	dd48      	ble.n	80011de <__sflush_r+0xae>
 800114c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800114e:	2e00      	cmp	r6, #0
 8001150:	d045      	beq.n	80011de <__sflush_r+0xae>
 8001152:	2300      	movs	r3, #0
 8001154:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001158:	682f      	ldr	r7, [r5, #0]
 800115a:	6a21      	ldr	r1, [r4, #32]
 800115c:	602b      	str	r3, [r5, #0]
 800115e:	d030      	beq.n	80011c2 <__sflush_r+0x92>
 8001160:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001162:	89a3      	ldrh	r3, [r4, #12]
 8001164:	0759      	lsls	r1, r3, #29
 8001166:	d505      	bpl.n	8001174 <__sflush_r+0x44>
 8001168:	6863      	ldr	r3, [r4, #4]
 800116a:	1ad2      	subs	r2, r2, r3
 800116c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800116e:	b10b      	cbz	r3, 8001174 <__sflush_r+0x44>
 8001170:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001172:	1ad2      	subs	r2, r2, r3
 8001174:	2300      	movs	r3, #0
 8001176:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001178:	6a21      	ldr	r1, [r4, #32]
 800117a:	4628      	mov	r0, r5
 800117c:	47b0      	blx	r6
 800117e:	1c43      	adds	r3, r0, #1
 8001180:	89a3      	ldrh	r3, [r4, #12]
 8001182:	d106      	bne.n	8001192 <__sflush_r+0x62>
 8001184:	6829      	ldr	r1, [r5, #0]
 8001186:	291d      	cmp	r1, #29
 8001188:	d82b      	bhi.n	80011e2 <__sflush_r+0xb2>
 800118a:	4a2a      	ldr	r2, [pc, #168]	@ (8001234 <__sflush_r+0x104>)
 800118c:	40ca      	lsrs	r2, r1
 800118e:	07d6      	lsls	r6, r2, #31
 8001190:	d527      	bpl.n	80011e2 <__sflush_r+0xb2>
 8001192:	2200      	movs	r2, #0
 8001194:	6062      	str	r2, [r4, #4]
 8001196:	04d9      	lsls	r1, r3, #19
 8001198:	6922      	ldr	r2, [r4, #16]
 800119a:	6022      	str	r2, [r4, #0]
 800119c:	d504      	bpl.n	80011a8 <__sflush_r+0x78>
 800119e:	1c42      	adds	r2, r0, #1
 80011a0:	d101      	bne.n	80011a6 <__sflush_r+0x76>
 80011a2:	682b      	ldr	r3, [r5, #0]
 80011a4:	b903      	cbnz	r3, 80011a8 <__sflush_r+0x78>
 80011a6:	6560      	str	r0, [r4, #84]	@ 0x54
 80011a8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011aa:	602f      	str	r7, [r5, #0]
 80011ac:	b1b9      	cbz	r1, 80011de <__sflush_r+0xae>
 80011ae:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011b2:	4299      	cmp	r1, r3
 80011b4:	d002      	beq.n	80011bc <__sflush_r+0x8c>
 80011b6:	4628      	mov	r0, r5
 80011b8:	f7ff fbf4 	bl	80009a4 <_free_r>
 80011bc:	2300      	movs	r3, #0
 80011be:	6363      	str	r3, [r4, #52]	@ 0x34
 80011c0:	e00d      	b.n	80011de <__sflush_r+0xae>
 80011c2:	2301      	movs	r3, #1
 80011c4:	4628      	mov	r0, r5
 80011c6:	47b0      	blx	r6
 80011c8:	4602      	mov	r2, r0
 80011ca:	1c50      	adds	r0, r2, #1
 80011cc:	d1c9      	bne.n	8001162 <__sflush_r+0x32>
 80011ce:	682b      	ldr	r3, [r5, #0]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d0c6      	beq.n	8001162 <__sflush_r+0x32>
 80011d4:	2b1d      	cmp	r3, #29
 80011d6:	d001      	beq.n	80011dc <__sflush_r+0xac>
 80011d8:	2b16      	cmp	r3, #22
 80011da:	d11e      	bne.n	800121a <__sflush_r+0xea>
 80011dc:	602f      	str	r7, [r5, #0]
 80011de:	2000      	movs	r0, #0
 80011e0:	e022      	b.n	8001228 <__sflush_r+0xf8>
 80011e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011e6:	b21b      	sxth	r3, r3
 80011e8:	e01b      	b.n	8001222 <__sflush_r+0xf2>
 80011ea:	690f      	ldr	r7, [r1, #16]
 80011ec:	2f00      	cmp	r7, #0
 80011ee:	d0f6      	beq.n	80011de <__sflush_r+0xae>
 80011f0:	0793      	lsls	r3, r2, #30
 80011f2:	680e      	ldr	r6, [r1, #0]
 80011f4:	bf08      	it	eq
 80011f6:	694b      	ldreq	r3, [r1, #20]
 80011f8:	600f      	str	r7, [r1, #0]
 80011fa:	bf18      	it	ne
 80011fc:	2300      	movne	r3, #0
 80011fe:	eba6 0807 	sub.w	r8, r6, r7
 8001202:	608b      	str	r3, [r1, #8]
 8001204:	f1b8 0f00 	cmp.w	r8, #0
 8001208:	dde9      	ble.n	80011de <__sflush_r+0xae>
 800120a:	6a21      	ldr	r1, [r4, #32]
 800120c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800120e:	4643      	mov	r3, r8
 8001210:	463a      	mov	r2, r7
 8001212:	4628      	mov	r0, r5
 8001214:	47b0      	blx	r6
 8001216:	2800      	cmp	r0, #0
 8001218:	dc08      	bgt.n	800122c <__sflush_r+0xfc>
 800121a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800121e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	f04f 30ff 	mov.w	r0, #4294967295
 8001228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800122c:	4407      	add	r7, r0
 800122e:	eba8 0800 	sub.w	r8, r8, r0
 8001232:	e7e7      	b.n	8001204 <__sflush_r+0xd4>
 8001234:	20400001 	.word	0x20400001

08001238 <_fflush_r>:
 8001238:	b538      	push	{r3, r4, r5, lr}
 800123a:	690b      	ldr	r3, [r1, #16]
 800123c:	4605      	mov	r5, r0
 800123e:	460c      	mov	r4, r1
 8001240:	b913      	cbnz	r3, 8001248 <_fflush_r+0x10>
 8001242:	2500      	movs	r5, #0
 8001244:	4628      	mov	r0, r5
 8001246:	bd38      	pop	{r3, r4, r5, pc}
 8001248:	b118      	cbz	r0, 8001252 <_fflush_r+0x1a>
 800124a:	6a03      	ldr	r3, [r0, #32]
 800124c:	b90b      	cbnz	r3, 8001252 <_fflush_r+0x1a>
 800124e:	f7ff faa1 	bl	8000794 <__sinit>
 8001252:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001256:	2b00      	cmp	r3, #0
 8001258:	d0f3      	beq.n	8001242 <_fflush_r+0xa>
 800125a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800125c:	07d0      	lsls	r0, r2, #31
 800125e:	d404      	bmi.n	800126a <_fflush_r+0x32>
 8001260:	0599      	lsls	r1, r3, #22
 8001262:	d402      	bmi.n	800126a <_fflush_r+0x32>
 8001264:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001266:	f7ff fb9a 	bl	800099e <__retarget_lock_acquire_recursive>
 800126a:	4628      	mov	r0, r5
 800126c:	4621      	mov	r1, r4
 800126e:	f7ff ff5f 	bl	8001130 <__sflush_r>
 8001272:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001274:	07da      	lsls	r2, r3, #31
 8001276:	4605      	mov	r5, r0
 8001278:	d4e4      	bmi.n	8001244 <_fflush_r+0xc>
 800127a:	89a3      	ldrh	r3, [r4, #12]
 800127c:	059b      	lsls	r3, r3, #22
 800127e:	d4e1      	bmi.n	8001244 <_fflush_r+0xc>
 8001280:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001282:	f7ff fb8d 	bl	80009a0 <__retarget_lock_release_recursive>
 8001286:	e7dd      	b.n	8001244 <_fflush_r+0xc>

08001288 <__swbuf_r>:
 8001288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800128a:	460e      	mov	r6, r1
 800128c:	4614      	mov	r4, r2
 800128e:	4605      	mov	r5, r0
 8001290:	b118      	cbz	r0, 800129a <__swbuf_r+0x12>
 8001292:	6a03      	ldr	r3, [r0, #32]
 8001294:	b90b      	cbnz	r3, 800129a <__swbuf_r+0x12>
 8001296:	f7ff fa7d 	bl	8000794 <__sinit>
 800129a:	69a3      	ldr	r3, [r4, #24]
 800129c:	60a3      	str	r3, [r4, #8]
 800129e:	89a3      	ldrh	r3, [r4, #12]
 80012a0:	071a      	lsls	r2, r3, #28
 80012a2:	d501      	bpl.n	80012a8 <__swbuf_r+0x20>
 80012a4:	6923      	ldr	r3, [r4, #16]
 80012a6:	b943      	cbnz	r3, 80012ba <__swbuf_r+0x32>
 80012a8:	4621      	mov	r1, r4
 80012aa:	4628      	mov	r0, r5
 80012ac:	f000 f82a 	bl	8001304 <__swsetup_r>
 80012b0:	b118      	cbz	r0, 80012ba <__swbuf_r+0x32>
 80012b2:	f04f 37ff 	mov.w	r7, #4294967295
 80012b6:	4638      	mov	r0, r7
 80012b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012ba:	6823      	ldr	r3, [r4, #0]
 80012bc:	6922      	ldr	r2, [r4, #16]
 80012be:	1a98      	subs	r0, r3, r2
 80012c0:	6963      	ldr	r3, [r4, #20]
 80012c2:	b2f6      	uxtb	r6, r6
 80012c4:	4283      	cmp	r3, r0
 80012c6:	4637      	mov	r7, r6
 80012c8:	dc05      	bgt.n	80012d6 <__swbuf_r+0x4e>
 80012ca:	4621      	mov	r1, r4
 80012cc:	4628      	mov	r0, r5
 80012ce:	f7ff ffb3 	bl	8001238 <_fflush_r>
 80012d2:	2800      	cmp	r0, #0
 80012d4:	d1ed      	bne.n	80012b2 <__swbuf_r+0x2a>
 80012d6:	68a3      	ldr	r3, [r4, #8]
 80012d8:	3b01      	subs	r3, #1
 80012da:	60a3      	str	r3, [r4, #8]
 80012dc:	6823      	ldr	r3, [r4, #0]
 80012de:	1c5a      	adds	r2, r3, #1
 80012e0:	6022      	str	r2, [r4, #0]
 80012e2:	701e      	strb	r6, [r3, #0]
 80012e4:	6962      	ldr	r2, [r4, #20]
 80012e6:	1c43      	adds	r3, r0, #1
 80012e8:	429a      	cmp	r2, r3
 80012ea:	d004      	beq.n	80012f6 <__swbuf_r+0x6e>
 80012ec:	89a3      	ldrh	r3, [r4, #12]
 80012ee:	07db      	lsls	r3, r3, #31
 80012f0:	d5e1      	bpl.n	80012b6 <__swbuf_r+0x2e>
 80012f2:	2e0a      	cmp	r6, #10
 80012f4:	d1df      	bne.n	80012b6 <__swbuf_r+0x2e>
 80012f6:	4621      	mov	r1, r4
 80012f8:	4628      	mov	r0, r5
 80012fa:	f7ff ff9d 	bl	8001238 <_fflush_r>
 80012fe:	2800      	cmp	r0, #0
 8001300:	d0d9      	beq.n	80012b6 <__swbuf_r+0x2e>
 8001302:	e7d6      	b.n	80012b2 <__swbuf_r+0x2a>

08001304 <__swsetup_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	4b29      	ldr	r3, [pc, #164]	@ (80013ac <__swsetup_r+0xa8>)
 8001308:	4605      	mov	r5, r0
 800130a:	6818      	ldr	r0, [r3, #0]
 800130c:	460c      	mov	r4, r1
 800130e:	b118      	cbz	r0, 8001318 <__swsetup_r+0x14>
 8001310:	6a03      	ldr	r3, [r0, #32]
 8001312:	b90b      	cbnz	r3, 8001318 <__swsetup_r+0x14>
 8001314:	f7ff fa3e 	bl	8000794 <__sinit>
 8001318:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800131c:	0719      	lsls	r1, r3, #28
 800131e:	d422      	bmi.n	8001366 <__swsetup_r+0x62>
 8001320:	06da      	lsls	r2, r3, #27
 8001322:	d407      	bmi.n	8001334 <__swsetup_r+0x30>
 8001324:	2209      	movs	r2, #9
 8001326:	602a      	str	r2, [r5, #0]
 8001328:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800132c:	81a3      	strh	r3, [r4, #12]
 800132e:	f04f 30ff 	mov.w	r0, #4294967295
 8001332:	e033      	b.n	800139c <__swsetup_r+0x98>
 8001334:	0758      	lsls	r0, r3, #29
 8001336:	d512      	bpl.n	800135e <__swsetup_r+0x5a>
 8001338:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800133a:	b141      	cbz	r1, 800134e <__swsetup_r+0x4a>
 800133c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001340:	4299      	cmp	r1, r3
 8001342:	d002      	beq.n	800134a <__swsetup_r+0x46>
 8001344:	4628      	mov	r0, r5
 8001346:	f7ff fb2d 	bl	80009a4 <_free_r>
 800134a:	2300      	movs	r3, #0
 800134c:	6363      	str	r3, [r4, #52]	@ 0x34
 800134e:	89a3      	ldrh	r3, [r4, #12]
 8001350:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001354:	81a3      	strh	r3, [r4, #12]
 8001356:	2300      	movs	r3, #0
 8001358:	6063      	str	r3, [r4, #4]
 800135a:	6923      	ldr	r3, [r4, #16]
 800135c:	6023      	str	r3, [r4, #0]
 800135e:	89a3      	ldrh	r3, [r4, #12]
 8001360:	f043 0308 	orr.w	r3, r3, #8
 8001364:	81a3      	strh	r3, [r4, #12]
 8001366:	6923      	ldr	r3, [r4, #16]
 8001368:	b94b      	cbnz	r3, 800137e <__swsetup_r+0x7a>
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001370:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001374:	d003      	beq.n	800137e <__swsetup_r+0x7a>
 8001376:	4621      	mov	r1, r4
 8001378:	4628      	mov	r0, r5
 800137a:	f000 f84f 	bl	800141c <__smakebuf_r>
 800137e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001382:	f013 0201 	ands.w	r2, r3, #1
 8001386:	d00a      	beq.n	800139e <__swsetup_r+0x9a>
 8001388:	2200      	movs	r2, #0
 800138a:	60a2      	str	r2, [r4, #8]
 800138c:	6962      	ldr	r2, [r4, #20]
 800138e:	4252      	negs	r2, r2
 8001390:	61a2      	str	r2, [r4, #24]
 8001392:	6922      	ldr	r2, [r4, #16]
 8001394:	b942      	cbnz	r2, 80013a8 <__swsetup_r+0xa4>
 8001396:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800139a:	d1c5      	bne.n	8001328 <__swsetup_r+0x24>
 800139c:	bd38      	pop	{r3, r4, r5, pc}
 800139e:	0799      	lsls	r1, r3, #30
 80013a0:	bf58      	it	pl
 80013a2:	6962      	ldrpl	r2, [r4, #20]
 80013a4:	60a2      	str	r2, [r4, #8]
 80013a6:	e7f4      	b.n	8001392 <__swsetup_r+0x8e>
 80013a8:	2000      	movs	r0, #0
 80013aa:	e7f7      	b.n	800139c <__swsetup_r+0x98>
 80013ac:	2000003c 	.word	0x2000003c

080013b0 <_sbrk_r>:
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4d06      	ldr	r5, [pc, #24]	@ (80013cc <_sbrk_r+0x1c>)
 80013b4:	2300      	movs	r3, #0
 80013b6:	4604      	mov	r4, r0
 80013b8:	4608      	mov	r0, r1
 80013ba:	602b      	str	r3, [r5, #0]
 80013bc:	f7ff f8fe 	bl	80005bc <_sbrk>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_sbrk_r+0x1a>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_sbrk_r+0x1a>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	200001e8 	.word	0x200001e8

080013d0 <__swhatbuf_r>:
 80013d0:	b570      	push	{r4, r5, r6, lr}
 80013d2:	460c      	mov	r4, r1
 80013d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013d8:	2900      	cmp	r1, #0
 80013da:	b096      	sub	sp, #88	@ 0x58
 80013dc:	4615      	mov	r5, r2
 80013de:	461e      	mov	r6, r3
 80013e0:	da0d      	bge.n	80013fe <__swhatbuf_r+0x2e>
 80013e2:	89a3      	ldrh	r3, [r4, #12]
 80013e4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80013e8:	f04f 0100 	mov.w	r1, #0
 80013ec:	bf14      	ite	ne
 80013ee:	2340      	movne	r3, #64	@ 0x40
 80013f0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80013f4:	2000      	movs	r0, #0
 80013f6:	6031      	str	r1, [r6, #0]
 80013f8:	602b      	str	r3, [r5, #0]
 80013fa:	b016      	add	sp, #88	@ 0x58
 80013fc:	bd70      	pop	{r4, r5, r6, pc}
 80013fe:	466a      	mov	r2, sp
 8001400:	f000 f848 	bl	8001494 <_fstat_r>
 8001404:	2800      	cmp	r0, #0
 8001406:	dbec      	blt.n	80013e2 <__swhatbuf_r+0x12>
 8001408:	9901      	ldr	r1, [sp, #4]
 800140a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800140e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001412:	4259      	negs	r1, r3
 8001414:	4159      	adcs	r1, r3
 8001416:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800141a:	e7eb      	b.n	80013f4 <__swhatbuf_r+0x24>

0800141c <__smakebuf_r>:
 800141c:	898b      	ldrh	r3, [r1, #12]
 800141e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001420:	079d      	lsls	r5, r3, #30
 8001422:	4606      	mov	r6, r0
 8001424:	460c      	mov	r4, r1
 8001426:	d507      	bpl.n	8001438 <__smakebuf_r+0x1c>
 8001428:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	6123      	str	r3, [r4, #16]
 8001430:	2301      	movs	r3, #1
 8001432:	6163      	str	r3, [r4, #20]
 8001434:	b003      	add	sp, #12
 8001436:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001438:	ab01      	add	r3, sp, #4
 800143a:	466a      	mov	r2, sp
 800143c:	f7ff ffc8 	bl	80013d0 <__swhatbuf_r>
 8001440:	9f00      	ldr	r7, [sp, #0]
 8001442:	4605      	mov	r5, r0
 8001444:	4639      	mov	r1, r7
 8001446:	4630      	mov	r0, r6
 8001448:	f7ff fb18 	bl	8000a7c <_malloc_r>
 800144c:	b948      	cbnz	r0, 8001462 <__smakebuf_r+0x46>
 800144e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001452:	059a      	lsls	r2, r3, #22
 8001454:	d4ee      	bmi.n	8001434 <__smakebuf_r+0x18>
 8001456:	f023 0303 	bic.w	r3, r3, #3
 800145a:	f043 0302 	orr.w	r3, r3, #2
 800145e:	81a3      	strh	r3, [r4, #12]
 8001460:	e7e2      	b.n	8001428 <__smakebuf_r+0xc>
 8001462:	89a3      	ldrh	r3, [r4, #12]
 8001464:	6020      	str	r0, [r4, #0]
 8001466:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800146a:	81a3      	strh	r3, [r4, #12]
 800146c:	9b01      	ldr	r3, [sp, #4]
 800146e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001472:	b15b      	cbz	r3, 800148c <__smakebuf_r+0x70>
 8001474:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001478:	4630      	mov	r0, r6
 800147a:	f000 f81d 	bl	80014b8 <_isatty_r>
 800147e:	b128      	cbz	r0, 800148c <__smakebuf_r+0x70>
 8001480:	89a3      	ldrh	r3, [r4, #12]
 8001482:	f023 0303 	bic.w	r3, r3, #3
 8001486:	f043 0301 	orr.w	r3, r3, #1
 800148a:	81a3      	strh	r3, [r4, #12]
 800148c:	89a3      	ldrh	r3, [r4, #12]
 800148e:	431d      	orrs	r5, r3
 8001490:	81a5      	strh	r5, [r4, #12]
 8001492:	e7cf      	b.n	8001434 <__smakebuf_r+0x18>

08001494 <_fstat_r>:
 8001494:	b538      	push	{r3, r4, r5, lr}
 8001496:	4d07      	ldr	r5, [pc, #28]	@ (80014b4 <_fstat_r+0x20>)
 8001498:	2300      	movs	r3, #0
 800149a:	4604      	mov	r4, r0
 800149c:	4608      	mov	r0, r1
 800149e:	4611      	mov	r1, r2
 80014a0:	602b      	str	r3, [r5, #0]
 80014a2:	f7ff f862 	bl	800056a <_fstat>
 80014a6:	1c43      	adds	r3, r0, #1
 80014a8:	d102      	bne.n	80014b0 <_fstat_r+0x1c>
 80014aa:	682b      	ldr	r3, [r5, #0]
 80014ac:	b103      	cbz	r3, 80014b0 <_fstat_r+0x1c>
 80014ae:	6023      	str	r3, [r4, #0]
 80014b0:	bd38      	pop	{r3, r4, r5, pc}
 80014b2:	bf00      	nop
 80014b4:	200001e8 	.word	0x200001e8

080014b8 <_isatty_r>:
 80014b8:	b538      	push	{r3, r4, r5, lr}
 80014ba:	4d06      	ldr	r5, [pc, #24]	@ (80014d4 <_isatty_r+0x1c>)
 80014bc:	2300      	movs	r3, #0
 80014be:	4604      	mov	r4, r0
 80014c0:	4608      	mov	r0, r1
 80014c2:	602b      	str	r3, [r5, #0]
 80014c4:	f7ff f861 	bl	800058a <_isatty>
 80014c8:	1c43      	adds	r3, r0, #1
 80014ca:	d102      	bne.n	80014d2 <_isatty_r+0x1a>
 80014cc:	682b      	ldr	r3, [r5, #0]
 80014ce:	b103      	cbz	r3, 80014d2 <_isatty_r+0x1a>
 80014d0:	6023      	str	r3, [r4, #0]
 80014d2:	bd38      	pop	{r3, r4, r5, pc}
 80014d4:	200001e8 	.word	0x200001e8

080014d8 <_init>:
 80014d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014da:	bf00      	nop
 80014dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014de:	bc08      	pop	{r3}
 80014e0:	469e      	mov	lr, r3
 80014e2:	4770      	bx	lr

080014e4 <_fini>:
 80014e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014e6:	bf00      	nop
 80014e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ea:	bc08      	pop	{r3}
 80014ec:	469e      	mov	lr, r3
 80014ee:	4770      	bx	lr
